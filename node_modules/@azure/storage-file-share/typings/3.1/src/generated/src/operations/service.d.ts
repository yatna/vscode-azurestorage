import * as coreHttp from "@azure/core-http";
import * as Models from "../models";
import { StorageClientContext } from "../storageClientContext";
/** Class representing a Service. */
export declare class Service {
    private readonly client;
    /**
     * Create a Service.
     * @param {StorageClientContext} client Reference to the service client.
     */
    constructor(client: StorageClientContext);
    /**
     * Sets properties for a storage account's File service endpoint, including properties for Storage
     * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.
     * @param properties The StorageService properties.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServiceSetPropertiesResponse>
     */
    setProperties(properties: Models.FileServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams): Promise<Models.ServiceSetPropertiesResponse>;
    /**
     * @param properties The StorageService properties.
     * @param callback The callback
     */
    setProperties(properties: Models.FileServiceProperties, callback: coreHttp.ServiceCallback<void>): void;
    /**
     * @param properties The StorageService properties.
     * @param options The optional parameters
     * @param callback The callback
     */
    setProperties(properties: Models.FileServiceProperties, options: Models.ServiceSetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;
    /**
     * Gets the properties of a storage account's File service, including properties for Storage
     * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServiceGetPropertiesResponse>
     */
    getProperties(options?: Models.ServiceGetPropertiesOptionalParams): Promise<Models.ServiceGetPropertiesResponse>;
    /**
     * @param callback The callback
     */
    getProperties(callback: coreHttp.ServiceCallback<Models.FileServiceProperties>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    getProperties(options: Models.ServiceGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<Models.FileServiceProperties>): void;
    /**
     * The List Shares Segment operation returns a list of the shares and share snapshots under the
     * specified account.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServiceListSharesSegmentResponse>
     */
    listSharesSegment(options?: Models.ServiceListSharesSegmentOptionalParams): Promise<Models.ServiceListSharesSegmentResponse>;
    /**
     * @param callback The callback
     */
    listSharesSegment(callback: coreHttp.ServiceCallback<Models.ListSharesResponse>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listSharesSegment(options: Models.ServiceListSharesSegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListSharesResponse>): void;
}
//# sourceMappingURL=service.d.ts.map
