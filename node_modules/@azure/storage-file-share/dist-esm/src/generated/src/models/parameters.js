/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as coreHttp from "@azure/core-http";
export var action0 = {
    parameterPath: "action",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "x-ms-lease-action",
        defaultValue: 'acquire',
        type: {
            name: "String"
        }
    }
};
export var action1 = {
    parameterPath: "action",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "x-ms-lease-action",
        defaultValue: 'release',
        type: {
            name: "String"
        }
    }
};
export var action2 = {
    parameterPath: "action",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "x-ms-lease-action",
        defaultValue: 'change',
        type: {
            name: "String"
        }
    }
};
export var action3 = {
    parameterPath: "action",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "x-ms-lease-action",
        defaultValue: 'break',
        type: {
            name: "String"
        }
    }
};
export var comp0 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'properties',
        type: {
            name: "String"
        }
    }
};
export var comp1 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'list',
        type: {
            name: "String"
        }
    }
};
export var comp10 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'range',
        type: {
            name: "String"
        }
    }
};
export var comp11 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'rangelist',
        type: {
            name: "String"
        }
    }
};
export var comp12 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'copy',
        type: {
            name: "String"
        }
    }
};
export var comp2 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'snapshot',
        type: {
            name: "String"
        }
    }
};
export var comp3 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'filepermission',
        type: {
            name: "String"
        }
    }
};
export var comp4 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'metadata',
        type: {
            name: "String"
        }
    }
};
export var comp5 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'acl',
        type: {
            name: "String"
        }
    }
};
export var comp6 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'stats',
        type: {
            name: "String"
        }
    }
};
export var comp7 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'listhandles',
        type: {
            name: "String"
        }
    }
};
export var comp8 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'forceclosehandles',
        type: {
            name: "String"
        }
    }
};
export var comp9 = {
    parameterPath: "comp",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "comp",
        defaultValue: 'lease',
        type: {
            name: "String"
        }
    }
};
export var contentLength = {
    parameterPath: "contentLength",
    mapper: {
        required: true,
        serializedName: "Content-Length",
        type: {
            name: "Number"
        }
    }
};
export var contentMD5 = {
    parameterPath: [
        "options",
        "contentMD5"
    ],
    mapper: {
        serializedName: "Content-MD5",
        type: {
            name: "ByteArray"
        }
    }
};
export var copyActionAbortConstant = {
    parameterPath: "copyActionAbortConstant",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "x-ms-copy-action",
        defaultValue: 'abort',
        type: {
            name: "String"
        }
    }
};
export var copyId = {
    parameterPath: "copyId",
    mapper: {
        required: true,
        serializedName: "copyid",
        type: {
            name: "String"
        }
    }
};
export var copySource = {
    parameterPath: "copySource",
    mapper: {
        required: true,
        serializedName: "x-ms-copy-source",
        type: {
            name: "String"
        }
    }
};
export var deleteSnapshots = {
    parameterPath: [
        "options",
        "deleteSnapshots"
    ],
    mapper: {
        serializedName: "x-ms-delete-snapshots",
        type: {
            name: "Enum",
            allowedValues: [
                "include"
            ]
        }
    }
};
export var duration = {
    parameterPath: [
        "options",
        "duration"
    ],
    mapper: {
        serializedName: "x-ms-lease-duration",
        type: {
            name: "Number"
        }
    }
};
export var fileAttributes0 = {
    parameterPath: "fileAttributes",
    mapper: {
        required: true,
        serializedName: "x-ms-file-attributes",
        type: {
            name: "String"
        }
    }
};
export var fileAttributes1 = {
    parameterPath: [
        "options",
        "copyFileSmbInfo",
        "fileAttributes"
    ],
    mapper: {
        serializedName: "x-ms-file-attributes",
        type: {
            name: "String"
        }
    }
};
export var fileCacheControl = {
    parameterPath: [
        "options",
        "fileHttpHeaders",
        "fileCacheControl"
    ],
    mapper: {
        serializedName: "x-ms-cache-control",
        type: {
            name: "String"
        }
    }
};
export var fileContentDisposition = {
    parameterPath: [
        "options",
        "fileHttpHeaders",
        "fileContentDisposition"
    ],
    mapper: {
        serializedName: "x-ms-content-disposition",
        type: {
            name: "String"
        }
    }
};
export var fileContentEncoding = {
    parameterPath: [
        "options",
        "fileHttpHeaders",
        "fileContentEncoding"
    ],
    mapper: {
        serializedName: "x-ms-content-encoding",
        type: {
            name: "String"
        }
    }
};
export var fileContentLanguage = {
    parameterPath: [
        "options",
        "fileHttpHeaders",
        "fileContentLanguage"
    ],
    mapper: {
        serializedName: "x-ms-content-language",
        type: {
            name: "String"
        }
    }
};
export var fileContentLength0 = {
    parameterPath: "fileContentLength",
    mapper: {
        required: true,
        serializedName: "x-ms-content-length",
        type: {
            name: "Number"
        }
    }
};
export var fileContentLength1 = {
    parameterPath: [
        "options",
        "fileContentLength"
    ],
    mapper: {
        serializedName: "x-ms-content-length",
        type: {
            name: "Number"
        }
    }
};
export var fileContentMD5 = {
    parameterPath: [
        "options",
        "fileHttpHeaders",
        "fileContentMD5"
    ],
    mapper: {
        serializedName: "x-ms-content-md5",
        type: {
            name: "ByteArray"
        }
    }
};
export var fileContentType = {
    parameterPath: [
        "options",
        "fileHttpHeaders",
        "fileContentType"
    ],
    mapper: {
        serializedName: "x-ms-content-type",
        type: {
            name: "String"
        }
    }
};
export var fileCreatedOn = {
    parameterPath: "fileCreatedOn",
    mapper: {
        required: true,
        serializedName: "x-ms-file-creation-time",
        type: {
            name: "String"
        }
    }
};
export var fileCreationTime = {
    parameterPath: [
        "options",
        "copyFileSmbInfo",
        "fileCreationTime"
    ],
    mapper: {
        serializedName: "x-ms-file-creation-time",
        type: {
            name: "String"
        }
    }
};
export var fileLastWriteOn = {
    parameterPath: "fileLastWriteOn",
    mapper: {
        required: true,
        serializedName: "x-ms-file-last-write-time",
        type: {
            name: "String"
        }
    }
};
export var fileLastWriteTime = {
    parameterPath: [
        "options",
        "copyFileSmbInfo",
        "fileLastWriteTime"
    ],
    mapper: {
        serializedName: "x-ms-file-last-write-time",
        type: {
            name: "String"
        }
    }
};
export var filePermission = {
    parameterPath: [
        "options",
        "filePermission"
    ],
    mapper: {
        serializedName: "x-ms-file-permission",
        type: {
            name: "String"
        }
    }
};
export var filePermissionCopyMode = {
    parameterPath: [
        "options",
        "copyFileSmbInfo",
        "filePermissionCopyMode"
    ],
    mapper: {
        serializedName: "x-ms-file-permission-copy-mode",
        type: {
            name: "Enum",
            allowedValues: [
                "source",
                "override"
            ]
        }
    }
};
export var filePermissionKey0 = {
    parameterPath: "filePermissionKey",
    mapper: {
        required: true,
        serializedName: "x-ms-file-permission-key",
        type: {
            name: "String"
        }
    }
};
export var filePermissionKey1 = {
    parameterPath: [
        "options",
        "filePermissionKey"
    ],
    mapper: {
        serializedName: "x-ms-file-permission-key",
        type: {
            name: "String"
        }
    }
};
export var fileRangeWrite = {
    parameterPath: "fileRangeWrite",
    mapper: {
        required: true,
        serializedName: "x-ms-write",
        defaultValue: 'update',
        type: {
            name: "Enum",
            allowedValues: [
                "update",
                "clear"
            ]
        }
    }
};
export var fileRangeWriteFromUrl = {
    parameterPath: "fileRangeWriteFromUrl",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "x-ms-write",
        defaultValue: 'update',
        type: {
            name: "String"
        }
    }
};
export var fileTypeConstant = {
    parameterPath: "fileTypeConstant",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "x-ms-type",
        defaultValue: 'file',
        type: {
            name: "String"
        }
    }
};
export var handleId = {
    parameterPath: "handleId",
    mapper: {
        required: true,
        serializedName: "x-ms-handle-id",
        type: {
            name: "String"
        }
    }
};
export var ignoreReadOnly = {
    parameterPath: [
        "options",
        "copyFileSmbInfo",
        "ignoreReadOnly"
    ],
    mapper: {
        serializedName: "x-ms-file-copy-ignore-read-only",
        type: {
            name: "Boolean"
        }
    }
};
export var include = {
    parameterPath: [
        "options",
        "include"
    ],
    mapper: {
        serializedName: "include",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Enum",
                    allowedValues: [
                        "snapshots",
                        "metadata"
                    ]
                }
            }
        }
    },
    collectionFormat: coreHttp.QueryCollectionFormat.Csv
};
export var leaseId0 = {
    parameterPath: [
        "options",
        "leaseAccessConditions",
        "leaseId"
    ],
    mapper: {
        serializedName: "x-ms-lease-id",
        type: {
            name: "String"
        }
    }
};
export var leaseId1 = {
    parameterPath: "leaseId",
    mapper: {
        required: true,
        serializedName: "x-ms-lease-id",
        type: {
            name: "String"
        }
    }
};
export var marker = {
    parameterPath: [
        "options",
        "marker"
    ],
    mapper: {
        serializedName: "marker",
        type: {
            name: "String"
        }
    }
};
export var maxResults = {
    parameterPath: [
        "options",
        "maxResults"
    ],
    mapper: {
        serializedName: "maxresults",
        constraints: {
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
export var metadata = {
    parameterPath: [
        "options",
        "metadata"
    ],
    mapper: {
        serializedName: "x-ms-meta",
        type: {
            name: "Dictionary",
            value: {
                type: {
                    name: "String"
                }
            }
        },
        headerCollectionPrefix: "x-ms-meta-"
    }
};
export var prefix = {
    parameterPath: [
        "options",
        "prefix"
    ],
    mapper: {
        serializedName: "prefix",
        type: {
            name: "String"
        }
    }
};
export var proposedLeaseId = {
    parameterPath: [
        "options",
        "proposedLeaseId"
    ],
    mapper: {
        serializedName: "x-ms-proposed-lease-id",
        type: {
            name: "String"
        }
    }
};
export var quota = {
    parameterPath: [
        "options",
        "quota"
    ],
    mapper: {
        serializedName: "x-ms-share-quota",
        constraints: {
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
export var range0 = {
    parameterPath: [
        "options",
        "range"
    ],
    mapper: {
        serializedName: "x-ms-range",
        type: {
            name: "String"
        }
    }
};
export var range1 = {
    parameterPath: "range",
    mapper: {
        required: true,
        serializedName: "x-ms-range",
        type: {
            name: "String"
        }
    }
};
export var rangeGetContentMD5 = {
    parameterPath: [
        "options",
        "rangeGetContentMD5"
    ],
    mapper: {
        serializedName: "x-ms-range-get-content-md5",
        type: {
            name: "Boolean"
        }
    }
};
export var recursive = {
    parameterPath: [
        "options",
        "recursive"
    ],
    mapper: {
        serializedName: "x-ms-recursive",
        type: {
            name: "Boolean"
        }
    }
};
export var requestId = {
    parameterPath: [
        "options",
        "requestId"
    ],
    mapper: {
        serializedName: "x-ms-client-request-id",
        type: {
            name: "String"
        }
    }
};
export var restype0 = {
    parameterPath: "restype",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "restype",
        defaultValue: 'service',
        type: {
            name: "String"
        }
    }
};
export var restype1 = {
    parameterPath: "restype",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "restype",
        defaultValue: 'share',
        type: {
            name: "String"
        }
    }
};
export var restype2 = {
    parameterPath: "restype",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "restype",
        defaultValue: 'directory',
        type: {
            name: "String"
        }
    }
};
export var setArchiveAttribute = {
    parameterPath: [
        "options",
        "copyFileSmbInfo",
        "setArchiveAttribute"
    ],
    mapper: {
        serializedName: "x-ms-file-copy-set-archive",
        type: {
            name: "Boolean"
        }
    }
};
export var shareSnapshot = {
    parameterPath: [
        "options",
        "shareSnapshot"
    ],
    mapper: {
        serializedName: "sharesnapshot",
        type: {
            name: "String"
        }
    }
};
export var sourceContentCrc64 = {
    parameterPath: [
        "options",
        "sourceContentCrc64"
    ],
    mapper: {
        serializedName: "x-ms-source-content-crc64",
        type: {
            name: "ByteArray"
        }
    }
};
export var sourceIfMatchCrc64 = {
    parameterPath: [
        "options",
        "sourceModifiedAccessConditions",
        "sourceIfMatchCrc64"
    ],
    mapper: {
        serializedName: "x-ms-source-if-match-crc64",
        type: {
            name: "ByteArray"
        }
    }
};
export var sourceIfNoneMatchCrc64 = {
    parameterPath: [
        "options",
        "sourceModifiedAccessConditions",
        "sourceIfNoneMatchCrc64"
    ],
    mapper: {
        serializedName: "x-ms-source-if-none-match-crc64",
        type: {
            name: "ByteArray"
        }
    }
};
export var sourceRange = {
    parameterPath: [
        "options",
        "sourceRange"
    ],
    mapper: {
        serializedName: "x-ms-source-range",
        type: {
            name: "String"
        }
    }
};
export var timeoutInSeconds = {
    parameterPath: [
        "options",
        "timeoutInSeconds"
    ],
    mapper: {
        serializedName: "timeout",
        constraints: {
            InclusiveMinimum: 0
        },
        type: {
            name: "Number"
        }
    }
};
export var url = {
    parameterPath: "url",
    mapper: {
        required: true,
        serializedName: "url",
        defaultValue: '',
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var version = {
    parameterPath: "version",
    mapper: {
        required: true,
        serializedName: "x-ms-version",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map