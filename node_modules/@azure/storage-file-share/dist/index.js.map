{"version":3,"file":"index.js","sources":["../src/AccountSASPermissions.ts","../src/AccountSASResourceTypes.ts","../src/AccountSASServices.ts","../src/SasIPRange.ts","../src/utils/constants.ts","../src/utils/utils.common.ts","../src/SASQueryParameters.ts","../src/AccountSASSignatureValues.ts","../src/FileSASPermissions.ts","../src/ShareSASPermissions.ts","../src/FileSASSignatureValues.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/serviceMappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/service.ts","../src/generated/src/models/shareMappers.ts","../src/generated/src/operations/share.ts","../src/generated/src/models/directoryMappers.ts","../src/generated/src/operations/directory.ts","../src/generated/src/models/fileMappers.ts","../src/generated/src/operations/file.ts","../src/FileSystemAttributes.ts","../src/models.ts","../src/log.ts","../src/policies/StorageBrowserPolicy.ts","../src/StorageBrowserPolicyFactory.ts","../src/policies/StorageRetryPolicy.ts","../src/StorageRetryPolicyFactory.ts","../src/policies/TelemetryPolicy.ts","../src/TelemetryPolicyFactory.ts","../src/utils/cache.ts","../src/Pipeline.ts","../src/generated/src/storageClientContext.ts","../src/StorageClient.ts","../src/utils/RetriableReadableStream.ts","../src/FileDownloadResponse.ts","../src/Range.ts","../src/credentials/Credential.ts","../src/utils/Batch.ts","../src/utils/BufferScheduler.ts","../src/policies/CredentialPolicy.ts","../src/policies/AnonymousCredentialPolicy.ts","../src/credentials/AnonymousCredential.ts","../src/utils/utils.node.ts","../src/utils/tracing.ts","../src/ShareFileClient.ts","../src/ShareDirectoryClient.ts","../src/policies/StorageSharedKeyCredentialPolicy.ts","../src/credentials/StorageSharedKeyCredential.ts","../src/ShareClient.ts","../src/ShareServiceClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASPermissions\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {AccountSASPermissions}\n   * @memberof AccountSASPermissions\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to delete blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public process: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASPermissions\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASResourceTypes\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @static\n   * @param {string} resourceTypes\n   * @returns {AccountSASResourceTypes}\n   * @memberof AccountSASResourceTypes\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASResourceTypes\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASServices\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @static\n   * @param {string} services\n   * @returns {AccountSASServices}\n   * @memberof AccountSASServices\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   * @returns {string}\n   * @memberof AccountSASServices\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * Allowed IP range for a SAS.\n *\n * @export\n * @interface SasIPRange\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof SasIPRange\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof SasIPRange\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @export\n * @param {SasIPRange} ipRange A range of IP addresses.\n * @returns {string} string representation of the IP range.\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"12.1.1\";\nexport const SERVICE_VERSION: string = \"2019-07-07\";\n\nexport const FILE_MAX_SIZE_BYTES: number = 1024 * 1024 * 1024 * 1024; // 1TB\nexport const FILE_RANGE_MAX_SIZE_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\nexport const DEFAULT_HIGH_LEVEL_CONCURRENCY: number = 5;\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SHARE_SNAPSHOT: \"sharesnapshot\",\n    SIGNATURE: \"sig\",\n    TIMEOUT: \"timeout\"\n  }\n};\n\nexport const HttpUrlConnection = {\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"content-encoding\",\n  CONTENT_LANGUAGE: \"content-language\",\n  CONTENT_LENGTH: \"content-length\",\n  CONTENT_MD5: \"content-md5\",\n  CONTENT_TYPE: \"content-type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\"\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n\nexport const StorageFileLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"x-ms-cache-control\",\n  \"x-ms-content-disposition\",\n  \"x-ms-content-encoding\",\n  \"x-ms-content-language\",\n  \"x-ms-content-length\",\n  \"x-ms-content-md5\",\n  \"x-ms-content-type\",\n  \"x-ms-file-attributes\",\n  \"x-ms-file-change-time\",\n  \"x-ms-file-creation-time\",\n  \"x-ms-file-id\",\n  \"x-ms-file-last-write-time\",\n  \"x-ms-file-parent-id\",\n  \"x-ms-handle-id\",\n  \"x-ms-number-of-handles-closed\",\n  \"x-ms-recursive\",\n  \"x-ms-share-quota\",\n  \"x-ms-type\",\n  \"x-ms-write\"\n];\n\nexport const StorageFileLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"copyid\",\n  \"restype\"\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpHeaders, isNode, URLBuilder } from \"@azure/core-http\";\nimport { HeaderConstants, URLConstants } from \"./constants\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XXXClient classes constructor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XXXClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `ContainerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n}\n\nfunction getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"FileEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\"\n) {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @export\n * @param {string} connectionString Connection string.\n * @returns {ConnectionString} String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  // Matching FileEndpoint in the Account connection string\n  let fileEndpoint = getValueInConnString(connectionString, \"FileEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  fileEndpoint = fileEndpoint.endsWith(\"/\") ? fileEndpoint.slice(0, -1) : fileEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!fileEndpoint) {\n      // FileEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\"\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      fileEndpoint = `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: fileEndpoint,\n      accountName,\n      accountKey\n    };\n  } else {\n    // SAS connection string\n\n    let accountName = getAccountNameFromUrl(fileEndpoint);\n    let accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    if (!fileEndpoint) {\n      throw new Error(\"Invalid FileEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    } else if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided SAS Connection String\");\n    }\n\n    return { kind: \"SASConnString\", url: fileEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param {string} text\n * @returns {string}\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name String to be appended to URL\n * @returns {string} An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name Parameter name\n * @param {string} [value] Parameter value\n * @returns {string} An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQueryParameter(name, value);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @export\n * @param {string} url\n * @param {string} name\n * @returns {(string | string[] | undefined)}\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getQueryParameterValue(name);\n}\n\n/**\n * Set URL host.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} host New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPath(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getPath();\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @export\n * @param {string} url\n * @returns {{[key: string]: string}}\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = URLBuilder.parse(url).getQuery();\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual;\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @export\n * @param {Date} date\n * @param {boolean} [withMilliseconds=true] If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns {string} Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @export\n * @param {string} content\n * @returns {string}\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @export\n * @param {string} encodedString\n * @returns {string}\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Delay specified time interval.\n *\n * @export\n * @param {number} timeInMs\n * @param {AbortSignalLike} [aborter]\n * @param {Error} [abortError]\n */\nexport async function delay(timeInMs: number, aborter?: AbortSignalLike, abortError?: Error) {\n  return new Promise((resolve, reject) => {\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    timeout = setTimeout(resolveHandler, timeInMs);\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\n/**\n * String.prototype.padStart()\n *\n * @export\n * @param {string} currentString\n * @param {number} targetLength\n * @param {string} [padString=\" \"]\n * @returns {string}\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \"\n): string {\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = new HttpHeaders();\n  for (const header of originalHeader.headersArray()) {\n    if (header.name.toLowerCase() === HeaderConstants.AUTHORIZATION) {\n      headers.set(header.name, \"*****\");\n    } else if (header.name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(header.name, sanitizeURL(header.value));\n    } else {\n      headers.set(header.name, header.value);\n    }\n  }\n\n  return headers;\n}\n\n/**\n * Extracts account name from the url\n * @param {string} url url to extract the account name from\n * @returns {string} with the account name\n */\nexport function getAccountNameFromUrl(url: string): string {\n  const parsedUrl: URLBuilder = URLBuilder.parse(url);\n  let accountName;\n  try {\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"file\") {\n      // `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`;\n      // Slicing off '/' at the end if exists\n      url = url.endsWith(\"/\") ? url.slice(0, -1) : url;\n\n      accountName = parsedUrl.getHost()!.split(\".\")[0];\n    } else {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.getPath()!.split(\"/\")[1];\n    }\n\n    if (!accountName) {\n      throw new Error(\"Provided accountName is invalid.\");\n    }\n    return accountName;\n  } catch (error) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n\nexport function getShareNameAndPathFromUrl(\n  url: string\n): { baseName: string; shareName: string; path: string } {\n  //  URL may look like the following\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory\";\n  // \"https://myaccount.file.core.windows.net/myshare?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare\";\n  // IPv4/IPv6 address hosts, Endpoints - `http://187.24.0.1:1000/devstoreaccount1/mydirectory/file`\n  // http://localhost:1000/devstoreaccount1/mydirectory/file\n  // mydirectory can consist of multiple directories - dir1/dir2/dir3\n\n  let shareName;\n  let path;\n  let baseName;\n\n  try {\n    const parsedUrl = URLBuilder.parse(url);\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"file\") {\n      // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\";\n      // .getPath() -> /myshare/mydirectory/file\n      const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)(/(.*))?\");\n      shareName = pathComponents![1];\n      path = pathComponents![3];\n    } else {\n      // IPv4/IPv6 address hosts... Example - http://187.24.0.1:1000/devstoreaccount1/mydirectory/file\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:1000/devstoreaccount1/mydirectory/file\n      // .getPath() -> /devstoreaccount1/mydirectory/file\n      const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)/([^/]*)(/(.*))?\");\n      shareName = pathComponents![2];\n      path = pathComponents![4];\n    }\n\n    // decode the encoded shareName and filePath - to get all the special characters that might be present in it\n    shareName = decodeURIComponent(shareName);\n    path = decodeURIComponent(path);\n\n    // Cast to string is required as TypeScript cannot infer that split() always returns\n    // an array with length >= 1\n    baseName = path.split(\"/\").pop() as string;\n\n    if (!shareName) {\n      throw new Error(\"Provided shareName is invalid.\");\n    } else {\n      return { baseName, shareName, path };\n    }\n  } catch (error) {\n    throw new Error(\n      \"Unable to extract shareName and filePath/directoryPath with provided information.\"\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * Protocols for generated SAS.\n *\n * @export\n * @enum {number}\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\"\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link FileSASSignatureValues}\n * types. Once generated, it can be encoded into a {@code String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n *\n * @export\n * @class SASQueryParameters\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   *\n   * @type {SASProtocol}\n   * @memberof SASQueryParameters\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link FileSASPermissions}, or {@link ShareSASPermissions} for\n   * more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link FileSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. The storage share or file path (only for {@link FileSASSignatureValues}).\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   *\n   * @private\n   * @type {SasIPRange}\n   * @memberof SASQueryParameters\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   * @type {(SasIPRange | undefined)}\n   * @memberof SASQueryParameters\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param {string} version Representing the storage version\n   * @param {string} signature Representing the signature for the SAS token\n   * @param {string} [permissions] Representing the storage permissions\n   * @param {string} [services] Representing the storage services being accessed (only for Account SAS)\n   * @param {string} [resourceTypes] Representing the storage resource types being accessed (only for Account SAS)\n   * @param {SASProtocol} [protocol] Representing the allowed HTTP protocol(s)\n   * @param {Date} [startsOn] Representing the start time for this SAS token\n   * @param {Date} [expiresOn] Representing the expiry time for this SAS token\n   * @param {SasIPRange} [ipRange] Representing the range of valid IP addresses for this SAS token\n   * @param {string} [identifier] Representing the signed identifier (only for Service SAS)\n   * @param {string} [resource] Representing the storage container or blob (only for Service SAS)\n   * @param {string} [cacheControl] Representing the cache-control header (only for Blob/File Service SAS)\n   * @param {string} [contentDisposition] Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param {string} [contentEncoding] Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param {string} [contentLanguage] Representing the content-language header (only for Blob/File Service SAS)\n   * @param {string} [contentType] Representing the content-type header (only for Blob/File Service SAS)\n   * @memberof SASQueryParameters\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string\n  ) {\n    this.version = version;\n    this.services = services;\n    this.resourceTypes = resourceTypes;\n    this.expiresOn = expiresOn;\n    this.permissions = permissions;\n    this.protocol = protocol;\n    this.startsOn = startsOn;\n    this.ipRangeInner = ipRange;\n    this.identifier = identifier;\n    this.resource = resource;\n    this.signature = signature;\n    this.cacheControl = cacheControl;\n    this.contentDisposition = contentDisposition;\n    this.contentEncoding = contentEncoding;\n    this.contentLanguage = contentLanguage;\n    this.contentType = contentType;\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   * @returns {string}\n   * @memberof SASQueryParameters\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\"\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @private\n   * @param {string[]} queries\n   * @param {string} key\n   * @param {string} [value]\n   * @returns {void}\n   * @memberof SASQueryParameters\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation of the SAS\n * which can actually be applied to file urls. Note: that both this class and {@link SASQueryParameters} exist because\n * the former is mutable and a logical representation while the latter is immutable and used to generate actual REST\n * requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n *\n * @export\n * @class AccountSASSignatureValues\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   *\n   * @type {SASProtocol}\n   * @memberof AccountSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof AccountSASSignatureValues\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof AccountSASSignatureValues\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   *\n   * @type {AccountSASPermissions}\n   * @memberof AccountSASSignatureValues\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   *\n   * @type {SasIPRange}\n   * @memberof AccountSASSignatureValues\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  resourceTypes: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n * @memberof AccountSASSignatureValues\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString()\n  ).toString();\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes\n  ).toString();\n\n  const stringToSign = [\n    sharedKeyCredential.accountName,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.startsOn\n      ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n      : \"\",\n    truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n    accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n    accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n    version,\n    \"\" // Account SAS requires an additional newline character\n  ].join(\"\\n\");\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startsOn,\n    accountSASSignatureValues.expiresOn,\n    accountSASSignatureValues.ipRange\n  );\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a file. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link FileSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class FileSASPermissions\n */\nexport class FileSASPermissions {\n  /**\n   * Creates a FileSASPermissions from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {FileSASPermissions}\n   * @memberof FileSASPermissions\n   */\n  public static parse(permissions: string): FileSASPermissions {\n    const fileSASPermissions = new FileSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          fileSASPermissions.read = true;\n          break;\n        case \"c\":\n          fileSASPermissions.create = true;\n          break;\n        case \"w\":\n          fileSASPermissions.write = true;\n          break;\n        case \"d\":\n          fileSASPermissions.delete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return fileSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns {string} A string which represents the FileSASPermissions\n   * @memberof FileSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a share.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link FileSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class ShareSASPermissions\n */\nexport class ShareSASPermissions {\n  /**\n   * Creates an {@link ShareSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns\n   * @memberof ShareSASPermissions\n   */\n  public static parse(permissions: string) {\n    const shareSASPermissions = new ShareSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          shareSASPermissions.read = true;\n          break;\n        case \"c\":\n          shareSASPermissions.create = true;\n          break;\n        case \"w\":\n          shareSASPermissions.write = true;\n          break;\n        case \"d\":\n          shareSASPermissions.delete = true;\n          break;\n        case \"l\":\n          shareSASPermissions.list = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return shareSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof ShareSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof ShareSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof ShareSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof ShareSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   *\n   * @type {boolean}\n   * @memberof ShareSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @returns {string}\n   * @memberof ShareSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { FileSASPermissions } from \"./FileSASPermissions\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { ShareSASPermissions } from \"./ShareSASPermissions\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * FileSASSignatureValues is used to help generating File service SAS tokens for shares or files.\n *\n * @export\n * @class FileSASSignatureValues\n */\n\nexport interface FileSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   *\n   * @type {SASProtocol}\n   * @memberof FileSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof FileSASSignatureValues\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof FileSASSignatureValues\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ShareSASPermissions} or {@link FileSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   *\n   * @type {FileSASPermissions}\n   * @memberof FileSASSignatureValues\n   */\n  permissions?: FileSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   *\n   * @type {SasIPRange}\n   * @memberof FileSASSignatureValues\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the share the SAS user may access.\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  shareName: string;\n\n  /**\n   * Optional. The path of the file like, \"directory/FileName\" or \"FileName\".\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  filePath?: string;\n\n  /**\n   * Optional. The name of the access policy on the share this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   *\n   * @type {string}\n   * @memberof FileSASSignatureValues\n   */\n  contentType?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @export\n * @param {FileSASSignatureValues} fileSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nexport function generateFileSASQueryParameters(\n  fileSASSignatureValues: FileSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  if (\n    !fileSASSignatureValues.identifier &&\n    (!fileSASSignatureValues.permissions && !fileSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for File SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = fileSASSignatureValues.version ? fileSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"s\";\n  let verifiedPermissions: string | undefined;\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (fileSASSignatureValues.permissions) {\n    if (fileSASSignatureValues.filePath) {\n      verifiedPermissions = FileSASPermissions.parse(\n        fileSASSignatureValues.permissions.toString()\n      ).toString();\n      resource = \"f\";\n    } else {\n      verifiedPermissions = ShareSASPermissions.parse(\n        fileSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions,\n    fileSASSignatureValues.startsOn\n      ? truncatedISO8061Date(fileSASSignatureValues.startsOn, false)\n      : \"\",\n    fileSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(fileSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      fileSASSignatureValues.shareName,\n      fileSASSignatureValues.filePath\n    ),\n    fileSASSignatureValues.identifier,\n    fileSASSignatureValues.ipRange ? ipRangeToString(fileSASSignatureValues.ipRange) : \"\",\n    fileSASSignatureValues.protocol,\n    version,\n    fileSASSignatureValues.cacheControl,\n    fileSASSignatureValues.contentDisposition,\n    fileSASSignatureValues.contentEncoding,\n    fileSASSignatureValues.contentLanguage,\n    fileSASSignatureValues.contentType\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    fileSASSignatureValues.protocol,\n    fileSASSignatureValues.startsOn,\n    fileSASSignatureValues.expiresOn,\n    fileSASSignatureValues.ipRange,\n    fileSASSignatureValues.identifier,\n    resource,\n    fileSASSignatureValues.cacheControl,\n    fileSASSignatureValues.contentDisposition,\n    fileSASSignatureValues.contentEncoding,\n    fileSASSignatureValues.contentLanguage,\n    fileSASSignatureValues.contentType\n  );\n}\n\nfunction getCanonicalName(accountName: string, shareName: string, filePath?: string): string {\n  // Share: \"/file/account/sharename\"\n  // File:  \"/file/account/sharename/filename\"\n  // File:  \"/file/account/sharename/directoryname/filename\"\n  const elements: string[] = [`/file/${accountName}/${shareName}`];\n  if (filePath) {\n    elements.push(`/${filePath}`);\n  }\n  return elements.join(\"\");\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\n\nexport const AccessPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startsOn: {\n        xmlName: \"Start\",\n        serializedName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        xmlName: \"Expiry\",\n        serializedName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        xmlName: \"Permission\",\n        serializedName: \"Permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRule: coreHttp.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        xmlName: \"AllowedOrigins\",\n        required: true,\n        serializedName: \"AllowedOrigins\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedMethods: {\n        xmlName: \"AllowedMethods\",\n        required: true,\n        serializedName: \"AllowedMethods\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedHeaders: {\n        xmlName: \"AllowedHeaders\",\n        required: true,\n        serializedName: \"AllowedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exposedHeaders: {\n        xmlName: \"ExposedHeaders\",\n        required: true,\n        serializedName: \"ExposedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxAgeInSeconds: {\n        xmlName: \"MaxAgeInSeconds\",\n        required: true,\n        serializedName: \"MaxAgeInSeconds\",\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryItem: coreHttp.CompositeMapper = {\n  xmlName: \"Directory\",\n  serializedName: \"DirectoryItem\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileProperty: coreHttp.CompositeMapper = {\n  serializedName: \"FileProperty\",\n  type: {\n    name: \"Composite\",\n    className: \"FileProperty\",\n    modelProperties: {\n      contentLength: {\n        xmlName: \"Content-Length\",\n        required: true,\n        serializedName: \"Content-Length\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileItem: coreHttp.CompositeMapper = {\n  xmlName: \"File\",\n  serializedName: \"FileItem\",\n  type: {\n    name: \"Composite\",\n    className: \"FileItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        xmlName: \"Properties\",\n        required: true,\n        serializedName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FileProperty\"\n        }\n      }\n    }\n  }\n};\n\nexport const FilesAndDirectoriesListSegment: coreHttp.CompositeMapper = {\n  xmlName: \"Entries\",\n  serializedName: \"FilesAndDirectoriesListSegment\",\n  type: {\n    name: \"Composite\",\n    className: \"FilesAndDirectoriesListSegment\",\n    modelProperties: {\n      directoryItems: {\n        xmlName: \"DirectoryItems\",\n        xmlElementName: \"Directory\",\n        required: true,\n        serializedName: \"DirectoryItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DirectoryItem\"\n            }\n          }\n        }\n      },\n      fileItems: {\n        xmlName: \"FileItems\",\n        xmlElementName: \"File\",\n        required: true,\n        serializedName: \"FileItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HandleItem: coreHttp.CompositeMapper = {\n  xmlName: \"Handle\",\n  serializedName: \"HandleItem\",\n  type: {\n    name: \"Composite\",\n    className: \"HandleItem\",\n    modelProperties: {\n      handleId: {\n        xmlName: \"HandleId\",\n        required: true,\n        serializedName: \"HandleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        xmlName: \"Path\",\n        required: true,\n        serializedName: \"Path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        xmlName: \"FileId\",\n        required: true,\n        serializedName: \"FileId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parentId: {\n        xmlName: \"ParentId\",\n        serializedName: \"ParentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sessionId: {\n        xmlName: \"SessionId\",\n        required: true,\n        serializedName: \"SessionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientIp: {\n        xmlName: \"ClientIp\",\n        required: true,\n        serializedName: \"ClientIp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      openTime: {\n        xmlName: \"OpenTime\",\n        required: true,\n        serializedName: \"OpenTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastReconnectTime: {\n        xmlName: \"LastReconnectTime\",\n        serializedName: \"LastReconnectTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListFilesAndDirectoriesSegmentResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListFilesAndDirectoriesSegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListFilesAndDirectoriesSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      shareName: {\n        xmlIsAttribute: true,\n        xmlName: \"ShareName\",\n        required: true,\n        serializedName: \"ShareName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      shareSnapshot: {\n        xmlIsAttribute: true,\n        xmlName: \"ShareSnapshot\",\n        serializedName: \"ShareSnapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      directoryPath: {\n        xmlIsAttribute: true,\n        xmlName: \"DirectoryPath\",\n        required: true,\n        serializedName: \"DirectoryPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        required: true,\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        xmlName: \"MaxResults\",\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      segment: {\n        xmlName: \"Entries\",\n        required: true,\n        serializedName: \"Segment\",\n        type: {\n          name: \"Composite\",\n          className: \"FilesAndDirectoriesListSegment\"\n        }\n      },\n      continuationToken: {\n        xmlName: \"NextMarker\",\n        required: true,\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListHandlesResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListHandlesResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListHandlesResponse\",\n    modelProperties: {\n      handleList: {\n        xmlIsWrapped: true,\n        xmlName: \"Entries\",\n        xmlElementName: \"Handle\",\n        serializedName: \"HandleList\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"HandleItem\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        xmlName: \"NextMarker\",\n        required: true,\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareProperties: coreHttp.CompositeMapper = {\n  serializedName: \"ShareProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareProperties\",\n    modelProperties: {\n      lastModified: {\n        xmlName: \"Last-Modified\",\n        required: true,\n        serializedName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        xmlName: \"Etag\",\n        required: true,\n        serializedName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quota: {\n        xmlName: \"Quota\",\n        required: true,\n        serializedName: \"Quota\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIops: {\n        xmlName: \"ProvisionedIops\",\n        serializedName: \"ProvisionedIops\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIngressMBps: {\n        xmlName: \"ProvisionedIngressMBps\",\n        serializedName: \"ProvisionedIngressMBps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedEgressMBps: {\n        xmlName: \"ProvisionedEgressMBps\",\n        serializedName: \"ProvisionedEgressMBps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nextAllowedQuotaDowngradeTime: {\n        xmlName: \"NextAllowedQuotaDowngradeTime\",\n        serializedName: \"NextAllowedQuotaDowngradeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareItem: coreHttp.CompositeMapper = {\n  xmlName: \"Share\",\n  serializedName: \"ShareItem\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      snapshot: {\n        xmlName: \"Snapshot\",\n        serializedName: \"Snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        xmlName: \"Properties\",\n        required: true,\n        serializedName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ShareProperties\"\n        }\n      },\n      metadata: {\n        xmlName: \"Metadata\",\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListSharesResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListSharesResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListSharesResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        xmlName: \"MaxResults\",\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      shareItems: {\n        xmlIsWrapped: true,\n        xmlName: \"Shares\",\n        xmlElementName: \"Share\",\n        serializedName: \"ShareItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ShareItem\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        xmlName: \"NextMarker\",\n        required: true,\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RetentionPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        xmlName: \"Days\",\n        serializedName: \"Days\",\n        constraints: {\n          InclusiveMaximum: 365,\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Metrics: coreHttp.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        xmlName: \"Version\",\n        required: true,\n        serializedName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeAPIs: {\n        xmlName: \"IncludeAPIs\",\n        serializedName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        xmlName: \"RetentionPolicy\",\n        serializedName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const Range: coreHttp.CompositeMapper = {\n  serializedName: \"Range\",\n  type: {\n    name: \"Composite\",\n    className: \"Range\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        xmlName: \"End\",\n        required: true,\n        serializedName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageError: coreHttp.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        xmlName: \"Message\",\n        serializedName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareStats: coreHttp.CompositeMapper = {\n  serializedName: \"ShareStats\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareStats\",\n    modelProperties: {\n      shareUsageBytes: {\n        xmlName: \"ShareUsageBytes\",\n        required: true,\n        serializedName: \"ShareUsageBytes\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SignedIdentifier: coreHttp.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        xmlName: \"Id\",\n        required: true,\n        serializedName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        xmlName: \"AccessPolicy\",\n        serializedName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharePermission: coreHttp.CompositeMapper = {\n  serializedName: \"SharePermission\",\n  type: {\n    name: \"Composite\",\n    className: \"SharePermission\",\n    modelProperties: {\n      permission: {\n        xmlName: \"permission\",\n        required: true,\n        serializedName: \"permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileServiceProperties: coreHttp.CompositeMapper = {\n  xmlName: \"StorageServiceProperties\",\n  serializedName: \"FileServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"FileServiceProperties\",\n    modelProperties: {\n      hourMetrics: {\n        xmlName: \"HourMetrics\",\n        serializedName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      minuteMetrics: {\n        xmlName: \"MinuteMetrics\",\n        serializedName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      cors: {\n        xmlIsWrapped: true,\n        xmlName: \"Cors\",\n        xmlElementName: \"CorsRule\",\n        serializedName: \"Cors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FileHttpHeaders: coreHttp.CompositeMapper = {\n  xmlName: \"fileHttpHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileHttpHeaders\",\n    modelProperties: {\n      fileContentType: {\n        xmlName: \"fileContentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileContentEncoding: {\n        xmlName: \"fileContentEncoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileContentLanguage: {\n        xmlName: \"fileContentLanguage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCacheControl: {\n        xmlName: \"fileCacheControl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileContentMD5: {\n        xmlName: \"fileContentMD5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      fileContentDisposition: {\n        xmlName: \"fileContentDisposition\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"lease-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"LeaseAccessConditions\",\n    modelProperties: {\n      leaseId: {\n        xmlName: \"leaseId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SourceModifiedAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"source-modified-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"SourceModifiedAccessConditions\",\n    modelProperties: {\n      sourceIfMatchCrc64: {\n        xmlName: \"sourceIfMatchCrc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      sourceIfNoneMatchCrc64: {\n        xmlName: \"sourceIfNoneMatchCrc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      }\n    }\n  }\n};\n\nexport const CopyFileSmbInfo: coreHttp.CompositeMapper = {\n  xmlName: \"copy-file-smb-info\",\n  type: {\n    name: \"Composite\",\n    className: \"CopyFileSmbInfo\",\n    modelProperties: {\n      filePermissionCopyMode: {\n        xmlName: \"filePermissionCopyMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"source\",\n            \"override\"\n          ]\n        }\n      },\n      ignoreReadOnly: {\n        xmlName: \"ignoreReadOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        xmlName: \"fileAttributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreationTime: {\n        xmlName: \"fileCreationTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileLastWriteTime: {\n        xmlName: \"fileLastWriteTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      setArchiveAttribute: {\n        xmlName: \"setArchiveAttribute\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-setproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListSharesSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-listsharessegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListSharesSegmentHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      quota: {\n        serializedName: \"x-ms-share-quota\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIops: {\n        serializedName: \"x-ms-share-provisioned-iops\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIngressMBps: {\n        serializedName: \"x-ms-share-provisioned-ingress-mbps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedEgressMBps: {\n        serializedName: \"x-ms-share-provisioned-egress-mbps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nextAllowedQuotaDowngradeTime: {\n        serializedName: \"x-ms-share-next-allowed-quota-downgrade-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateSnapshotHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-createsnapshot-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreatePermissionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-createpermission-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreatePermissionHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPermissionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-getpermission-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPermissionHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetQuotaHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-setquota-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetQuotaHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-getaccesspolicy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-setaccesspolicy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetStatisticsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"share-getstatistics-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetStatisticsHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-setproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetPropertiesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListFilesAndDirectoriesSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-listfilesanddirectoriessegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListFilesAndDirectoriesSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-listhandles-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListHandlesHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryForceCloseHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-forceclosehandles-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryForceCloseHandlesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      marker: {\n        serializedName: \"x-ms-marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfHandlesClosed: {\n        serializedName: \"x-ms-number-of-handles-closed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfHandlesFailedToClose: {\n        serializedName: \"x-ms-number-of-handles-failed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDownloadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-download-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      fileContentMD5: {\n        serializedName: \"x-ms-content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      fileType: {\n        serializedName: \"x-ms-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetHTTPHeadersHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-sethttpheaders-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetHTTPHeadersHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-acquirelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-releaselease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-changelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-breaklease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-uploadrange-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-uploadrangefromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetRangeListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-getrangelist-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetRangeListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileContentLength: {\n        serializedName: \"x-ms-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileStartCopyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-startcopy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileStartCopyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAbortCopyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-abortcopy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAbortCopyHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileListHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-listhandles-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileListHandlesHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileForceCloseHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"file-forceclosehandles-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileForceCloseHandlesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      marker: {\n        serializedName: \"x-ms-marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfHandlesClosed: {\n        serializedName: \"x-ms-number-of-handles-closed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfHandlesFailedToClose: {\n        serializedName: \"x-ms-number-of-handles-failed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  CorsRule,\n  FileServiceProperties,\n  ListSharesResponse,\n  Metrics,\n  RetentionPolicy,\n  ServiceGetPropertiesHeaders,\n  ServiceListSharesSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n  ShareItem,\n  ShareProperties,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const action0: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'acquire',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action1: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'release',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action2: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'change',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action3: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'break',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'properties',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp1: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'list',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp10: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'range',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp11: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'rangelist',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp12: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'copy',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp2: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'snapshot',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp3: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'filepermission',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp4: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'metadata',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp5: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'acl',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp6: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'stats',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp7: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'listhandles',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp8: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'forceclosehandles',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp9: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'lease',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentLength: coreHttp.OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    required: true,\n    serializedName: \"Content-Length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const contentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"contentMD5\"\n  ],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const copyActionAbortConstant: coreHttp.OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    defaultValue: 'abort',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copyId: coreHttp.OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    required: true,\n    serializedName: \"copyid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copySource: coreHttp.OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const deleteSnapshots: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"deleteSnapshots\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"include\"\n      ]\n    }\n  }\n};\nexport const duration: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"duration\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const fileAttributes0: coreHttp.OperationParameter = {\n  parameterPath: \"fileAttributes\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-file-attributes\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileAttributes1: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"copyFileSmbInfo\",\n    \"fileAttributes\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-file-attributes\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileCacheControl: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"fileHttpHeaders\",\n    \"fileCacheControl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileContentDisposition: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"fileHttpHeaders\",\n    \"fileContentDisposition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileContentEncoding: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"fileHttpHeaders\",\n    \"fileContentEncoding\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileContentLanguage: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"fileHttpHeaders\",\n    \"fileContentLanguage\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileContentLength0: coreHttp.OperationParameter = {\n  parameterPath: \"fileContentLength\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const fileContentLength1: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"fileContentLength\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const fileContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"fileHttpHeaders\",\n    \"fileContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const fileContentType: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"fileHttpHeaders\",\n    \"fileContentType\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileCreatedOn: coreHttp.OperationParameter = {\n  parameterPath: \"fileCreatedOn\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-file-creation-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileCreationTime: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"copyFileSmbInfo\",\n    \"fileCreationTime\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-file-creation-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileLastWriteOn: coreHttp.OperationParameter = {\n  parameterPath: \"fileLastWriteOn\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-file-last-write-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileLastWriteTime: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"copyFileSmbInfo\",\n    \"fileLastWriteTime\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-file-last-write-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const filePermission: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"filePermission\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-file-permission\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const filePermissionCopyMode: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"copyFileSmbInfo\",\n    \"filePermissionCopyMode\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-file-permission-copy-mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"source\",\n        \"override\"\n      ]\n    }\n  }\n};\nexport const filePermissionKey0: coreHttp.OperationParameter = {\n  parameterPath: \"filePermissionKey\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-file-permission-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const filePermissionKey1: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"filePermissionKey\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-file-permission-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileRangeWrite: coreHttp.OperationParameter = {\n  parameterPath: \"fileRangeWrite\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-write\",\n    defaultValue: 'update',\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"update\",\n        \"clear\"\n      ]\n    }\n  }\n};\nexport const fileRangeWriteFromUrl: coreHttp.OperationParameter = {\n  parameterPath: \"fileRangeWriteFromUrl\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-write\",\n    defaultValue: 'update',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const fileTypeConstant: coreHttp.OperationParameter = {\n  parameterPath: \"fileTypeConstant\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-type\",\n    defaultValue: 'file',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const handleId: coreHttp.OperationParameter = {\n  parameterPath: \"handleId\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-handle-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ignoreReadOnly: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"copyFileSmbInfo\",\n    \"ignoreReadOnly\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-file-copy-ignore-read-only\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const include: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"include\"\n  ],\n  mapper: {\n    serializedName: \"include\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"snapshots\",\n            \"metadata\"\n          ]\n        }\n      }\n    }\n  },\n  collectionFormat: coreHttp.QueryCollectionFormat.Csv\n};\nexport const leaseId0: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"leaseAccessConditions\",\n    \"leaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const leaseId1: coreHttp.OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const marker: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"marker\"\n  ],\n  mapper: {\n    serializedName: \"marker\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const maxResults: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"maxResults\"\n  ],\n  mapper: {\n    serializedName: \"maxresults\",\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const metadata: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"metadata\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    type: {\n      name: \"Dictionary\",\n      value: {\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    headerCollectionPrefix: \"x-ms-meta-\"\n  }\n};\nexport const prefix: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"prefix\"\n  ],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const proposedLeaseId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"proposedLeaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const quota: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"quota\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-share-quota\",\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const range0: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"range\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const range1: coreHttp.OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const rangeGetContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"rangeGetContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const recursive: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"recursive\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-recursive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const requestId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"requestId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'service',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype1: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'share',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype2: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'directory',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const setArchiveAttribute: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"copyFileSmbInfo\",\n    \"setArchiveAttribute\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-file-copy-set-archive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const shareSnapshot: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"shareSnapshot\"\n  ],\n  mapper: {\n    serializedName: \"sharesnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceContentCrc64: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceContentCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-content-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const sourceIfMatchCrc64: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfMatchCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-match-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const sourceIfNoneMatchCrc64: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatchCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const sourceRange: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceRange\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const timeoutInSeconds: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timeoutInSeconds\"\n  ],\n  mapper: {\n    serializedName: \"timeout\",\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const url: coreHttp.OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    required: true,\n    serializedName: \"url\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const version: coreHttp.OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/serviceMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Service. */\nexport class Service {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Service.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's File service endpoint, including properties for Storage\n   * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param properties The StorageService properties.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceSetPropertiesResponse>\n   */\n  setProperties(properties: Models.FileServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams): Promise<Models.ServiceSetPropertiesResponse>;\n  /**\n   * @param properties The StorageService properties.\n   * @param callback The callback\n   */\n  setProperties(properties: Models.FileServiceProperties, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param properties The StorageService properties.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setProperties(properties: Models.FileServiceProperties, options: Models.ServiceSetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setProperties(properties: Models.FileServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ServiceSetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        properties,\n        options\n      },\n      setPropertiesOperationSpec,\n      callback) as Promise<Models.ServiceSetPropertiesResponse>;\n  }\n\n  /**\n   * Gets the properties of a storage account's File service, including properties for Storage\n   * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ServiceGetPropertiesOptionalParams): Promise<Models.ServiceGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<Models.FileServiceProperties>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ServiceGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<Models.FileServiceProperties>): void;\n  getProperties(options?: Models.ServiceGetPropertiesOptionalParams | coreHttp.ServiceCallback<Models.FileServiceProperties>, callback?: coreHttp.ServiceCallback<Models.FileServiceProperties>): Promise<Models.ServiceGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ServiceGetPropertiesResponse>;\n  }\n\n  /**\n   * The List Shares Segment operation returns a list of the shares and share snapshots under the\n   * specified account.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceListSharesSegmentResponse>\n   */\n  listSharesSegment(options?: Models.ServiceListSharesSegmentOptionalParams): Promise<Models.ServiceListSharesSegmentResponse>;\n  /**\n   * @param callback The callback\n   */\n  listSharesSegment(callback: coreHttp.ServiceCallback<Models.ListSharesResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listSharesSegment(options: Models.ServiceListSharesSegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListSharesResponse>): void;\n  listSharesSegment(options?: Models.ServiceListSharesSegmentOptionalParams | coreHttp.ServiceCallback<Models.ListSharesResponse>, callback?: coreHttp.ServiceCallback<Models.ListSharesResponse>): Promise<Models.ServiceListSharesSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listSharesSegmentOperationSpec,\n      callback) as Promise<Models.ServiceListSharesSegmentResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype0,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  requestBody: {\n    parameterPath: \"properties\",\n    mapper: {\n      ...Mappers.FileServiceProperties,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype0,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listSharesSegmentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.include,\n    Parameters.timeoutInSeconds,\n    Parameters.comp1\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListSharesResponse,\n      headersMapper: Mappers.ServiceListSharesSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceListSharesSegmentHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AccessPolicy,\n  ShareCreateHeaders,\n  ShareCreatePermissionHeaders,\n  ShareCreateSnapshotHeaders,\n  ShareDeleteHeaders,\n  ShareGetAccessPolicyHeaders,\n  ShareGetPermissionHeaders,\n  ShareGetPropertiesHeaders,\n  ShareGetStatisticsHeaders,\n  SharePermission,\n  ShareSetAccessPolicyHeaders,\n  ShareSetMetadataHeaders,\n  ShareSetQuotaHeaders,\n  ShareStats,\n  SignedIdentifier,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/shareMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Share. */\nexport class Share {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Share.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with the same name already exists,\n   * the operation fails.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareCreateResponse>\n   */\n  create(options?: Models.ShareCreateOptionalParams): Promise<Models.ShareCreateResponse>;\n  /**\n   * @param callback The callback\n   */\n  create(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(options: Models.ShareCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(options?: Models.ShareCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.ShareCreateResponse>;\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified share or share\n   * snapshot. The data returned does not include the share's list of files.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ShareGetPropertiesOptionalParams): Promise<Models.ShareGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ShareGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.ShareGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ShareGetPropertiesResponse>;\n  }\n\n  /**\n   * Operation marks the specified share or share snapshot for deletion. The share or share snapshot\n   * and any files contained within it are later deleted during garbage collection.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareDeleteResponse>\n   */\n  deleteMethod(options?: Models.ShareDeleteMethodOptionalParams): Promise<Models.ShareDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.ShareDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.ShareDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.ShareDeleteResponse>;\n  }\n\n  /**\n   * Creates a read-only snapshot of a share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareCreateSnapshotResponse>\n   */\n  createSnapshot(options?: Models.ShareCreateSnapshotOptionalParams): Promise<Models.ShareCreateSnapshotResponse>;\n  /**\n   * @param callback The callback\n   */\n  createSnapshot(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createSnapshot(options: Models.ShareCreateSnapshotOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  createSnapshot(options?: Models.ShareCreateSnapshotOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareCreateSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createSnapshotOperationSpec,\n      callback) as Promise<Models.ShareCreateSnapshotResponse>;\n  }\n\n  /**\n   * Create a permission (a security descriptor).\n   * @param sharePermission A permission (a security descriptor) at the share level.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareCreatePermissionResponse>\n   */\n  createPermission(sharePermission: Models.SharePermission, options?: Models.ShareCreatePermissionOptionalParams): Promise<Models.ShareCreatePermissionResponse>;\n  /**\n   * @param sharePermission A permission (a security descriptor) at the share level.\n   * @param callback The callback\n   */\n  createPermission(sharePermission: Models.SharePermission, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param sharePermission A permission (a security descriptor) at the share level.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createPermission(sharePermission: Models.SharePermission, options: Models.ShareCreatePermissionOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  createPermission(sharePermission: Models.SharePermission, options?: Models.ShareCreatePermissionOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareCreatePermissionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sharePermission,\n        options\n      },\n      createPermissionOperationSpec,\n      callback) as Promise<Models.ShareCreatePermissionResponse>;\n  }\n\n  /**\n   * Returns the permission (security descriptor) for a given key\n   * @param filePermissionKey Key of the permission to be set for the directory/file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareGetPermissionResponse>\n   */\n  getPermission(filePermissionKey: string, options?: Models.ShareGetPermissionOptionalParams): Promise<Models.ShareGetPermissionResponse>;\n  /**\n   * @param filePermissionKey Key of the permission to be set for the directory/file.\n   * @param callback The callback\n   */\n  getPermission(filePermissionKey: string, callback: coreHttp.ServiceCallback<Models.SharePermission>): void;\n  /**\n   * @param filePermissionKey Key of the permission to be set for the directory/file.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPermission(filePermissionKey: string, options: Models.ShareGetPermissionOptionalParams, callback: coreHttp.ServiceCallback<Models.SharePermission>): void;\n  getPermission(filePermissionKey: string, options?: Models.ShareGetPermissionOptionalParams | coreHttp.ServiceCallback<Models.SharePermission>, callback?: coreHttp.ServiceCallback<Models.SharePermission>): Promise<Models.ShareGetPermissionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        filePermissionKey,\n        options\n      },\n      getPermissionOperationSpec,\n      callback) as Promise<Models.ShareGetPermissionResponse>;\n  }\n\n  /**\n   * Sets quota for the specified share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareSetQuotaResponse>\n   */\n  setQuota(options?: Models.ShareSetQuotaOptionalParams): Promise<Models.ShareSetQuotaResponse>;\n  /**\n   * @param callback The callback\n   */\n  setQuota(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setQuota(options: Models.ShareSetQuotaOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setQuota(options?: Models.ShareSetQuotaOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareSetQuotaResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setQuotaOperationSpec,\n      callback) as Promise<Models.ShareSetQuotaResponse>;\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareSetMetadataResponse>\n   */\n  setMetadata(options?: Models.ShareSetMetadataOptionalParams): Promise<Models.ShareSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.ShareSetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.ShareSetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.ShareSetMetadataResponse>;\n  }\n\n  /**\n   * Returns information about stored access policies specified on the share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareGetAccessPolicyResponse>\n   */\n  getAccessPolicy(options?: Models.ShareGetAccessPolicyOptionalParams): Promise<Models.ShareGetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccessPolicy(callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccessPolicy(options: Models.ShareGetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  getAccessPolicy(options?: Models.ShareGetAccessPolicyOptionalParams | coreHttp.ServiceCallback<Models.SignedIdentifier[]>, callback?: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): Promise<Models.ShareGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccessPolicyOperationSpec,\n      callback) as Promise<Models.ShareGetAccessPolicyResponse>;\n  }\n\n  /**\n   * Sets a stored access policy for use with shared access signatures.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareSetAccessPolicyResponse>\n   */\n  setAccessPolicy(options?: Models.ShareSetAccessPolicyOptionalParams): Promise<Models.ShareSetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  setAccessPolicy(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setAccessPolicy(options: Models.ShareSetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setAccessPolicy(options?: Models.ShareSetAccessPolicyOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ShareSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setAccessPolicyOperationSpec,\n      callback) as Promise<Models.ShareSetAccessPolicyResponse>;\n  }\n\n  /**\n   * Retrieves statistics related to the share.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ShareGetStatisticsResponse>\n   */\n  getStatistics(options?: Models.ShareGetStatisticsOptionalParams): Promise<Models.ShareGetStatisticsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getStatistics(callback: coreHttp.ServiceCallback<Models.ShareStats>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getStatistics(options: Models.ShareGetStatisticsOptionalParams, callback: coreHttp.ServiceCallback<Models.ShareStats>): void;\n  getStatistics(options?: Models.ShareGetStatisticsOptionalParams | coreHttp.ServiceCallback<Models.ShareStats>, callback?: coreHttp.ServiceCallback<Models.ShareStats>): Promise<Models.ShareGetStatisticsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getStatisticsOperationSpec,\n      callback) as Promise<Models.ShareGetStatisticsResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.quota,\n    Parameters.version\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.shareSnapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.shareSnapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.deleteSnapshots\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.ShareDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareDeleteHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst createSnapshotOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreateSnapshotHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreateSnapshotHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst createPermissionOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  requestBody: {\n    parameterPath: \"sharePermission\",\n    mapper: {\n      ...Mappers.SharePermission,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreatePermissionHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreatePermissionHeaders\n    }\n  },\n  isXML: false,\n  serializer\n};\n\nconst getPermissionOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.filePermissionKey0,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharePermission,\n      headersMapper: Mappers.ShareGetPermissionHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetPermissionHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setQuotaOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.quota\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetQuotaHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetQuotaHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetMetadataHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        xmlElementName: \"SignedIdentifier\",\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedIdentifier\"\n            }\n          }\n        }\n      },\n      headersMapper: Mappers.ShareGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetAccessPolicyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  requestBody: {\n    parameterPath: [\n      \"options\",\n      \"shareAcl\"\n    ],\n    mapper: {\n      xmlName: \"SignedIdentifiers\",\n      xmlElementName: \"SignedIdentifier\",\n      serializedName: \"shareAcl\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"SignedIdentifier\"\n          }\n        }\n      }\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetAccessPolicyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getStatisticsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ShareStats,\n      headersMapper: Mappers.ShareGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetStatisticsHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  DirectoryCreateHeaders,\n  DirectoryDeleteHeaders,\n  DirectoryForceCloseHandlesHeaders,\n  DirectoryGetPropertiesHeaders,\n  DirectoryItem,\n  DirectoryListFilesAndDirectoriesSegmentHeaders,\n  DirectoryListHandlesHeaders,\n  DirectorySetMetadataHeaders,\n  DirectorySetPropertiesHeaders,\n  FileItem,\n  FileProperty,\n  FilesAndDirectoriesListSegment,\n  HandleItem,\n  ListFilesAndDirectoriesSegmentResponse,\n  ListHandlesResponse,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/directoryMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Directory. */\nexport class Directory {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Directory.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new directory under the specified share or parent directory.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectoryCreateResponse>\n   */\n  create(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options?: Models.DirectoryCreateOptionalParams): Promise<Models.DirectoryCreateResponse>;\n  /**\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param callback The callback\n   */\n  create(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options: Models.DirectoryCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options?: Models.DirectoryCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.DirectoryCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        fileAttributes,\n        fileCreatedOn,\n        fileLastWriteOn,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.DirectoryCreateResponse>;\n  }\n\n  /**\n   * Returns all system properties for the specified directory, and can also be used to check the\n   * existence of a directory. The data returned does not include the files in the directory or any\n   * subdirectories.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectoryGetPropertiesResponse>\n   */\n  getProperties(options?: Models.DirectoryGetPropertiesOptionalParams): Promise<Models.DirectoryGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.DirectoryGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.DirectoryGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.DirectoryGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.DirectoryGetPropertiesResponse>;\n  }\n\n  /**\n   * Removes the specified empty directory. Note that the directory must be empty before it can be\n   * deleted.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectoryDeleteResponse>\n   */\n  deleteMethod(options?: Models.DirectoryDeleteMethodOptionalParams): Promise<Models.DirectoryDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.DirectoryDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.DirectoryDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.DirectoryDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.DirectoryDeleteResponse>;\n  }\n\n  /**\n   * Sets properties on the directory.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectorySetPropertiesResponse>\n   */\n  setProperties(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options?: Models.DirectorySetPropertiesOptionalParams): Promise<Models.DirectorySetPropertiesResponse>;\n  /**\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param callback The callback\n   */\n  setProperties(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setProperties(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options: Models.DirectorySetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setProperties(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options?: Models.DirectorySetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.DirectorySetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        fileAttributes,\n        fileCreatedOn,\n        fileLastWriteOn,\n        options\n      },\n      setPropertiesOperationSpec,\n      callback) as Promise<Models.DirectorySetPropertiesResponse>;\n  }\n\n  /**\n   * Updates user defined metadata for the specified directory.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectorySetMetadataResponse>\n   */\n  setMetadata(options?: Models.DirectorySetMetadataOptionalParams): Promise<Models.DirectorySetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.DirectorySetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.DirectorySetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.DirectorySetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.DirectorySetMetadataResponse>;\n  }\n\n  /**\n   * Returns a list of files or directories under the specified share or directory. It lists the\n   * contents only for a single level of the directory hierarchy.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectoryListFilesAndDirectoriesSegmentResponse>\n   */\n  listFilesAndDirectoriesSegment(options?: Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams): Promise<Models.DirectoryListFilesAndDirectoriesSegmentResponse>;\n  /**\n   * @param callback The callback\n   */\n  listFilesAndDirectoriesSegment(callback: coreHttp.ServiceCallback<Models.ListFilesAndDirectoriesSegmentResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listFilesAndDirectoriesSegment(options: Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListFilesAndDirectoriesSegmentResponse>): void;\n  listFilesAndDirectoriesSegment(options?: Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams | coreHttp.ServiceCallback<Models.ListFilesAndDirectoriesSegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListFilesAndDirectoriesSegmentResponse>): Promise<Models.DirectoryListFilesAndDirectoriesSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listFilesAndDirectoriesSegmentOperationSpec,\n      callback) as Promise<Models.DirectoryListFilesAndDirectoriesSegmentResponse>;\n  }\n\n  /**\n   * Lists handles for directory.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectoryListHandlesResponse>\n   */\n  listHandles(options?: Models.DirectoryListHandlesOptionalParams): Promise<Models.DirectoryListHandlesResponse>;\n  /**\n   * @param callback The callback\n   */\n  listHandles(callback: coreHttp.ServiceCallback<Models.ListHandlesResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listHandles(options: Models.DirectoryListHandlesOptionalParams, callback: coreHttp.ServiceCallback<Models.ListHandlesResponse>): void;\n  listHandles(options?: Models.DirectoryListHandlesOptionalParams | coreHttp.ServiceCallback<Models.ListHandlesResponse>, callback?: coreHttp.ServiceCallback<Models.ListHandlesResponse>): Promise<Models.DirectoryListHandlesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listHandlesOperationSpec,\n      callback) as Promise<Models.DirectoryListHandlesResponse>;\n  }\n\n  /**\n   * Closes all handles open for given directory.\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterix (‘*’)\n   * is a wildcard that specifies all handles.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectoryForceCloseHandlesResponse>\n   */\n  forceCloseHandles(handleId: string, options?: Models.DirectoryForceCloseHandlesOptionalParams): Promise<Models.DirectoryForceCloseHandlesResponse>;\n  /**\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterix (‘*’)\n   * is a wildcard that specifies all handles.\n   * @param callback The callback\n   */\n  forceCloseHandles(handleId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterix (‘*’)\n   * is a wildcard that specifies all handles.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  forceCloseHandles(handleId: string, options: Models.DirectoryForceCloseHandlesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  forceCloseHandles(handleId: string, options?: Models.DirectoryForceCloseHandlesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.DirectoryForceCloseHandlesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        handleId,\n        options\n      },\n      forceCloseHandlesOperationSpec,\n      callback) as Promise<Models.DirectoryForceCloseHandlesResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes0,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.DirectoryCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}/{directory}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.shareSnapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectoryGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{shareName}/{directory}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.DirectoryDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryDeleteHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes0,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectorySetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectorySetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectorySetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectorySetMetadataHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listFilesAndDirectoriesSegmentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}/{directory}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.shareSnapshot,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp1\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListFilesAndDirectoriesSegmentResponse,\n      headersMapper: Mappers.DirectoryListFilesAndDirectoriesSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryListFilesAndDirectoriesSegmentHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listHandlesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}/{directory}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.timeoutInSeconds,\n    Parameters.shareSnapshot,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.recursive,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListHandlesResponse,\n      headersMapper: Mappers.DirectoryListHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryListHandlesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst forceCloseHandlesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.shareSnapshot,\n    Parameters.comp8\n  ],\n  headerParameters: [\n    Parameters.handleId,\n    Parameters.recursive,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectoryForceCloseHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryForceCloseHandlesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  FileAbortCopyHeaders,\n  FileAcquireLeaseHeaders,\n  FileBreakLeaseHeaders,\n  FileChangeLeaseHeaders,\n  FileCreateHeaders,\n  FileDeleteHeaders,\n  FileDownloadHeaders,\n  FileForceCloseHandlesHeaders,\n  FileGetPropertiesHeaders,\n  FileGetRangeListHeaders,\n  FileListHandlesHeaders,\n  FileReleaseLeaseHeaders,\n  FileSetHTTPHeadersHeaders,\n  FileSetMetadataHeaders,\n  FileStartCopyHeaders,\n  FileUploadRangeFromURLHeaders,\n  FileUploadRangeHeaders,\n  HandleItem,\n  ListHandlesResponse,\n  Range,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/fileMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a File. */\nexport class File {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a File.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new file or replaces a file. Note it only initializes the file with no content.\n   * @param fileContentLength Specifies the maximum size for the file, up to 1 TB.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileCreateResponse>\n   */\n  create(fileContentLength: number, fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options?: Models.FileCreateOptionalParams): Promise<Models.FileCreateResponse>;\n  /**\n   * @param fileContentLength Specifies the maximum size for the file, up to 1 TB.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param callback The callback\n   */\n  create(fileContentLength: number, fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param fileContentLength Specifies the maximum size for the file, up to 1 TB.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(fileContentLength: number, fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options: Models.FileCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(fileContentLength: number, fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options?: Models.FileCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        fileContentLength,\n        fileAttributes,\n        fileCreatedOn,\n        fileLastWriteOn,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.FileCreateResponse>;\n  }\n\n  /**\n   * Reads or downloads a file from the system, including its metadata and properties.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileDownloadResponse>\n   */\n  download(options?: Models.FileDownloadOptionalParams): Promise<Models.FileDownloadResponse>;\n  /**\n   * @param callback The callback\n   */\n  download(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  download(options: Models.FileDownloadOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  download(options?: Models.FileDownloadOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileDownloadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      downloadOperationSpec,\n      callback) as Promise<Models.FileDownloadResponse>;\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties for the file.\n   * It does not return the content of the file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileGetPropertiesResponse>\n   */\n  getProperties(options?: Models.FileGetPropertiesOptionalParams): Promise<Models.FileGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.FileGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.FileGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.FileGetPropertiesResponse>;\n  }\n\n  /**\n   * removes the file from the storage account.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileDeleteResponse>\n   */\n  deleteMethod(options?: Models.FileDeleteMethodOptionalParams): Promise<Models.FileDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.FileDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.FileDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.FileDeleteResponse>;\n  }\n\n  /**\n   * Sets HTTP headers on the file.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileSetHTTPHeadersResponse>\n   */\n  setHTTPHeaders(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options?: Models.FileSetHTTPHeadersOptionalParams): Promise<Models.FileSetHTTPHeadersResponse>;\n  /**\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param callback The callback\n   */\n  setHTTPHeaders(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   * ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setHTTPHeaders(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options: Models.FileSetHTTPHeadersOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setHTTPHeaders(fileAttributes: string, fileCreatedOn: string, fileLastWriteOn: string, options?: Models.FileSetHTTPHeadersOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileSetHTTPHeadersResponse> {\n    return this.client.sendOperationRequest(\n      {\n        fileAttributes,\n        fileCreatedOn,\n        fileLastWriteOn,\n        options\n      },\n      setHTTPHeadersOperationSpec,\n      callback) as Promise<Models.FileSetHTTPHeadersResponse>;\n  }\n\n  /**\n   * Updates user-defined metadata for the specified file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileSetMetadataResponse>\n   */\n  setMetadata(options?: Models.FileSetMetadataOptionalParams): Promise<Models.FileSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.FileSetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.FileSetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.FileSetMetadataResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileAcquireLeaseResponse>\n   */\n  acquireLease(options?: Models.FileAcquireLeaseOptionalParams): Promise<Models.FileAcquireLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  acquireLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  acquireLease(options: Models.FileAcquireLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  acquireLease(options?: Models.FileAcquireLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      acquireLeaseOperationSpec,\n      callback) as Promise<Models.FileAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileReleaseLeaseResponse>\n   */\n  releaseLease(leaseId: string, options?: Models.FileReleaseLeaseOptionalParams): Promise<Models.FileReleaseLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, options: Models.FileReleaseLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  releaseLease(leaseId: string, options?: Models.FileReleaseLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      releaseLeaseOperationSpec,\n      callback) as Promise<Models.FileReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileChangeLeaseResponse>\n   */\n  changeLease(leaseId: string, options?: Models.FileChangeLeaseOptionalParams): Promise<Models.FileChangeLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, options: Models.FileChangeLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  changeLease(leaseId: string, options?: Models.FileChangeLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      changeLeaseOperationSpec,\n      callback) as Promise<Models.FileChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileBreakLeaseResponse>\n   */\n  breakLease(options?: Models.FileBreakLeaseOptionalParams): Promise<Models.FileBreakLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  breakLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  breakLease(options: Models.FileBreakLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  breakLease(options?: Models.FileBreakLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      breakLeaseOperationSpec,\n      callback) as Promise<Models.FileBreakLeaseResponse>;\n  }\n\n  /**\n   * Upload a range of bytes to a file.\n   * @param range Specifies the range of bytes to be written. Both the start and end of the range\n   * must be specified. For an update operation, the range can be up to 4 MB in size. For a clear\n   * operation, the range can be up to the value of the file's full size. The File service accepts\n   * only a single byte range for the Range and 'x-ms-range' headers, and the byte range must be\n   * specified in the following format: bytes=startByte-endByte.\n   * @param fileRangeWrite Specify one of the following options: - Update: Writes the bytes specified\n   * by the request body into the specified range. The Range and Content-Length headers must match to\n   * perform the update. - Clear: Clears the specified range and releases the space used in storage\n   * for that range. To clear a range, set the Content-Length header to zero, and set the Range\n   * header to a value that indicates the range to clear, up to maximum file size. Possible values\n   * include: 'update', 'clear'\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When\n   * the x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileUploadRangeResponse>\n   */\n  uploadRange(range: string, fileRangeWrite: Models.FileRangeWriteType, contentLength: number, options?: Models.FileUploadRangeOptionalParams): Promise<Models.FileUploadRangeResponse>;\n  /**\n   * @param range Specifies the range of bytes to be written. Both the start and end of the range\n   * must be specified. For an update operation, the range can be up to 4 MB in size. For a clear\n   * operation, the range can be up to the value of the file's full size. The File service accepts\n   * only a single byte range for the Range and 'x-ms-range' headers, and the byte range must be\n   * specified in the following format: bytes=startByte-endByte.\n   * @param fileRangeWrite Specify one of the following options: - Update: Writes the bytes specified\n   * by the request body into the specified range. The Range and Content-Length headers must match to\n   * perform the update. - Clear: Clears the specified range and releases the space used in storage\n   * for that range. To clear a range, set the Content-Length header to zero, and set the Range\n   * header to a value that indicates the range to clear, up to maximum file size. Possible values\n   * include: 'update', 'clear'\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When\n   * the x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param callback The callback\n   */\n  uploadRange(range: string, fileRangeWrite: Models.FileRangeWriteType, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param range Specifies the range of bytes to be written. Both the start and end of the range\n   * must be specified. For an update operation, the range can be up to 4 MB in size. For a clear\n   * operation, the range can be up to the value of the file's full size. The File service accepts\n   * only a single byte range for the Range and 'x-ms-range' headers, and the byte range must be\n   * specified in the following format: bytes=startByte-endByte.\n   * @param fileRangeWrite Specify one of the following options: - Update: Writes the bytes specified\n   * by the request body into the specified range. The Range and Content-Length headers must match to\n   * perform the update. - Clear: Clears the specified range and releases the space used in storage\n   * for that range. To clear a range, set the Content-Length header to zero, and set the Range\n   * header to a value that indicates the range to clear, up to maximum file size. Possible values\n   * include: 'update', 'clear'\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When\n   * the x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadRange(range: string, fileRangeWrite: Models.FileRangeWriteType, contentLength: number, options: Models.FileUploadRangeOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  uploadRange(range: string, fileRangeWrite: Models.FileRangeWriteType, contentLength: number, options?: Models.FileUploadRangeOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileUploadRangeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        range,\n        fileRangeWrite,\n        contentLength,\n        options\n      },\n      uploadRangeOperationSpec,\n      callback) as Promise<Models.FileUploadRangeResponse>;\n  }\n\n  /**\n   * Upload a range of bytes to a file where the contents are read from a URL.\n   * @param range Writes data to the specified byte range in the file.\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a\n   * file to another file within the same storage account, you may use Shared Key to authenticate the\n   * source file. If you are copying a file from another storage account, or if you are copying a\n   * blob from the same storage account or another storage account, then you must authenticate the\n   * source file or blob using a shared access signature. If the source is a public blob, no\n   * authentication is required to perform the copy operation. A file in a share snapshot can also be\n   * specified as a copy source.\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When\n   * the x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileUploadRangeFromURLResponse>\n   */\n  uploadRangeFromURL(range: string, copySource: string, contentLength: number, options?: Models.FileUploadRangeFromURLOptionalParams): Promise<Models.FileUploadRangeFromURLResponse>;\n  /**\n   * @param range Writes data to the specified byte range in the file.\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a\n   * file to another file within the same storage account, you may use Shared Key to authenticate the\n   * source file. If you are copying a file from another storage account, or if you are copying a\n   * blob from the same storage account or another storage account, then you must authenticate the\n   * source file or blob using a shared access signature. If the source is a public blob, no\n   * authentication is required to perform the copy operation. A file in a share snapshot can also be\n   * specified as a copy source.\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When\n   * the x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param callback The callback\n   */\n  uploadRangeFromURL(range: string, copySource: string, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param range Writes data to the specified byte range in the file.\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a\n   * file to another file within the same storage account, you may use Shared Key to authenticate the\n   * source file. If you are copying a file from another storage account, or if you are copying a\n   * blob from the same storage account or another storage account, then you must authenticate the\n   * source file or blob using a shared access signature. If the source is a public blob, no\n   * authentication is required to perform the copy operation. A file in a share snapshot can also be\n   * specified as a copy source.\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When\n   * the x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadRangeFromURL(range: string, copySource: string, contentLength: number, options: Models.FileUploadRangeFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  uploadRangeFromURL(range: string, copySource: string, contentLength: number, options?: Models.FileUploadRangeFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileUploadRangeFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        range,\n        copySource,\n        contentLength,\n        options\n      },\n      uploadRangeFromURLOperationSpec,\n      callback) as Promise<Models.FileUploadRangeFromURLResponse>;\n  }\n\n  /**\n   * Returns the list of valid ranges for a file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileGetRangeListResponse>\n   */\n  getRangeList(options?: Models.FileGetRangeListOptionalParams): Promise<Models.FileGetRangeListResponse>;\n  /**\n   * @param callback The callback\n   */\n  getRangeList(callback: coreHttp.ServiceCallback<Models.Range[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getRangeList(options: Models.FileGetRangeListOptionalParams, callback: coreHttp.ServiceCallback<Models.Range[]>): void;\n  getRangeList(options?: Models.FileGetRangeListOptionalParams | coreHttp.ServiceCallback<Models.Range[]>, callback?: coreHttp.ServiceCallback<Models.Range[]>): Promise<Models.FileGetRangeListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getRangeListOperationSpec,\n      callback) as Promise<Models.FileGetRangeListResponse>;\n  }\n\n  /**\n   * Copies a blob or file to a destination file within the storage account.\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a\n   * file to another file within the same storage account, you may use Shared Key to authenticate the\n   * source file. If you are copying a file from another storage account, or if you are copying a\n   * blob from the same storage account or another storage account, then you must authenticate the\n   * source file or blob using a shared access signature. If the source is a public blob, no\n   * authentication is required to perform the copy operation. A file in a share snapshot can also be\n   * specified as a copy source.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileStartCopyResponse>\n   */\n  startCopy(copySource: string, options?: Models.FileStartCopyOptionalParams): Promise<Models.FileStartCopyResponse>;\n  /**\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a\n   * file to another file within the same storage account, you may use Shared Key to authenticate the\n   * source file. If you are copying a file from another storage account, or if you are copying a\n   * blob from the same storage account or another storage account, then you must authenticate the\n   * source file or blob using a shared access signature. If the source is a public blob, no\n   * authentication is required to perform the copy operation. A file in a share snapshot can also be\n   * specified as a copy source.\n   * @param callback The callback\n   */\n  startCopy(copySource: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a\n   * file to another file within the same storage account, you may use Shared Key to authenticate the\n   * source file. If you are copying a file from another storage account, or if you are copying a\n   * blob from the same storage account or another storage account, then you must authenticate the\n   * source file or blob using a shared access signature. If the source is a public blob, no\n   * authentication is required to perform the copy operation. A file in a share snapshot can also be\n   * specified as a copy source.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  startCopy(copySource: string, options: Models.FileStartCopyOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  startCopy(copySource: string, options?: Models.FileStartCopyOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileStartCopyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      startCopyOperationSpec,\n      callback) as Promise<Models.FileStartCopyResponse>;\n  }\n\n  /**\n   * Aborts a pending Copy File operation, and leaves a destination file with zero length and full\n   * metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy File\n   * operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileAbortCopyResponse>\n   */\n  abortCopy(copyId: string, options?: Models.FileAbortCopyOptionalParams): Promise<Models.FileAbortCopyResponse>;\n  /**\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy File\n   * operation.\n   * @param callback The callback\n   */\n  abortCopy(copyId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy File\n   * operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  abortCopy(copyId: string, options: Models.FileAbortCopyOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  abortCopy(copyId: string, options?: Models.FileAbortCopyOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileAbortCopyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copyId,\n        options\n      },\n      abortCopyOperationSpec,\n      callback) as Promise<Models.FileAbortCopyResponse>;\n  }\n\n  /**\n   * Lists handles for file\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileListHandlesResponse>\n   */\n  listHandles(options?: Models.FileListHandlesOptionalParams): Promise<Models.FileListHandlesResponse>;\n  /**\n   * @param callback The callback\n   */\n  listHandles(callback: coreHttp.ServiceCallback<Models.ListHandlesResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listHandles(options: Models.FileListHandlesOptionalParams, callback: coreHttp.ServiceCallback<Models.ListHandlesResponse>): void;\n  listHandles(options?: Models.FileListHandlesOptionalParams | coreHttp.ServiceCallback<Models.ListHandlesResponse>, callback?: coreHttp.ServiceCallback<Models.ListHandlesResponse>): Promise<Models.FileListHandlesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listHandlesOperationSpec,\n      callback) as Promise<Models.FileListHandlesResponse>;\n  }\n\n  /**\n   * Closes all handles open for given file\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterix (‘*’)\n   * is a wildcard that specifies all handles.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileForceCloseHandlesResponse>\n   */\n  forceCloseHandles(handleId: string, options?: Models.FileForceCloseHandlesOptionalParams): Promise<Models.FileForceCloseHandlesResponse>;\n  /**\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterix (‘*’)\n   * is a wildcard that specifies all handles.\n   * @param callback The callback\n   */\n  forceCloseHandles(handleId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterix (‘*’)\n   * is a wildcard that specifies all handles.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  forceCloseHandles(handleId: string, options: Models.FileForceCloseHandlesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  forceCloseHandles(handleId: string, options?: Models.FileForceCloseHandlesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileForceCloseHandlesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        handleId,\n        options\n      },\n      forceCloseHandlesOperationSpec,\n      callback) as Promise<Models.FileForceCloseHandlesResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.fileContentLength0,\n    Parameters.fileTypeConstant,\n    Parameters.metadata,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes0,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn,\n    Parameters.fileContentType,\n    Parameters.fileContentEncoding,\n    Parameters.fileContentLanguage,\n    Parameters.fileCacheControl,\n    Parameters.fileContentMD5,\n    Parameters.fileContentDisposition,\n    Parameters.leaseId0\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.FileCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst downloadOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.range0,\n    Parameters.rangeGetContentMD5,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.FileDownloadHeaders\n    },\n    206: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.FileDownloadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileDownloadHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.shareSnapshot,\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.FileGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.leaseId0\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.FileDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileDeleteHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setHTTPHeadersOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.fileContentLength1,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes0,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn,\n    Parameters.fileContentType,\n    Parameters.fileContentEncoding,\n    Parameters.fileContentLanguage,\n    Parameters.fileCacheControl,\n    Parameters.fileContentMD5,\n    Parameters.fileContentDisposition,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.FileSetHTTPHeadersHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSetHTTPHeadersHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.FileSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSetMetadataHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp9\n  ],\n  headerParameters: [\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action0\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.FileAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileAcquireLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp9\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action1\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.FileReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileReleaseLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp9\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.proposedLeaseId,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action2\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.FileChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileChangeLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp9\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action3,\n    Parameters.leaseId0\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.FileBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileBreakLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadRangeOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp10\n  ],\n  headerParameters: [\n    Parameters.range1,\n    Parameters.fileRangeWrite,\n    Parameters.contentLength,\n    Parameters.contentMD5,\n    Parameters.version,\n    Parameters.leaseId0\n  ],\n  requestBody: {\n    parameterPath: [\n      \"options\",\n      \"body\"\n    ],\n    mapper: {\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileUploadRangeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileUploadRangeHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadRangeFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp10\n  ],\n  headerParameters: [\n    Parameters.range1,\n    Parameters.copySource,\n    Parameters.sourceRange,\n    Parameters.fileRangeWriteFromUrl,\n    Parameters.contentLength,\n    Parameters.sourceContentCrc64,\n    Parameters.version,\n    Parameters.sourceIfMatchCrc64,\n    Parameters.sourceIfNoneMatchCrc64,\n    Parameters.leaseId0\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.FileUploadRangeFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileUploadRangeFromURLHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getRangeListOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.shareSnapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.comp11\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.range0,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        xmlElementName: \"Range\",\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Range\"\n            }\n          }\n        }\n      },\n      headersMapper: Mappers.FileGetRangeListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileGetRangeListHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst startCopyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.metadata,\n    Parameters.copySource,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.filePermissionCopyMode,\n    Parameters.ignoreReadOnly,\n    Parameters.fileAttributes1,\n    Parameters.fileCreationTime,\n    Parameters.fileLastWriteTime,\n    Parameters.setArchiveAttribute,\n    Parameters.leaseId0\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.FileStartCopyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileStartCopyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst abortCopyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.copyId,\n    Parameters.timeoutInSeconds,\n    Parameters.comp12\n  ],\n  headerParameters: [\n    Parameters.copyActionAbortConstant,\n    Parameters.version,\n    Parameters.leaseId0\n  ],\n  responses: {\n    204: {\n      headersMapper: Mappers.FileAbortCopyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileAbortCopyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listHandlesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.timeoutInSeconds,\n    Parameters.shareSnapshot,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListHandlesResponse,\n      headersMapper: Mappers.FileListHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileListHandlesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst forceCloseHandlesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{shareName}/{directory}/{fileName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.shareSnapshot,\n    Parameters.comp8\n  ],\n  headerParameters: [\n    Parameters.handleId,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.FileForceCloseHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileForceCloseHandlesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/**\n * This is a helper class to construct a string representing the NTFS attributes to a file or directory.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file#file-system-attributes\n *\n * @export\n * @class FileSystemAttributes\n */\nexport class FileSystemAttributes {\n    /**\n     * Creates a FileSystemAttributes from the specified attributes string. This method will throw an\n     * Error if it encounters a string that does not correspond to a valid attributes.\n     *\n     * @static\n     * @param {string} fileAttributes The value of header x-ms-file-attributes.\n     * @returns {FileSystemAttributes}\n     * @memberof FileSystemAttributes\n     */\n    public static parse(fileAttributes: string): FileSystemAttributes {\n      if (!fileAttributes) {\n        throw new RangeError(`Invalid fileAttributes: '${fileAttributes}'.`);\n      }\n\n      const fileSystemAttributes = new FileSystemAttributes();\n  \n      const attributes = fileAttributes.trim().split('|');\n\n      for (let str of attributes) {\n        str = str.trim();\n        switch (str) {\n          case \"ReadOnly\":\n            fileSystemAttributes.readonly = true;\n            break;\n          case \"Hidden\":\n            fileSystemAttributes.hidden = true;\n            break;\n          case \"System\":\n            fileSystemAttributes.system = true;\n            break;\n          case \"None\":\n            fileSystemAttributes.none = true;\n            break;\n          case \"Temporary\":\n            fileSystemAttributes.temporary = true;\n            break;\n          case \"Offline\":\n            fileSystemAttributes.offline = true;\n            break;\n          case \"Directory\":\n            fileSystemAttributes.directory = true;\n            break;\n          case \"Archive\":\n            fileSystemAttributes.archive = true;\n            break;\n          case \"NotContentIndexed\":\n            fileSystemAttributes.notContentIndexed = true;\n            break;\n          case \"NoScrubData\":\n            fileSystemAttributes.noScrubData = true;\n            break;\n          default:\n            throw new RangeError(`Invalid attribute: ${str}`);\n        }\n      }\n  \n      return fileSystemAttributes;\n    }\n  \n    /**\n     * Specifies a directory or file that is read-only.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public readonly: boolean = false;\n  \n    /**\n     * Specifies a directory or file is hidden.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public hidden: boolean = false;\n  \n    /**\n     * Specifies a directory or file that the operating system uses a part of, or uses exclusively.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public system: boolean = false;\n  \n    /**\n     * Specifies a directory or file that does not have other attributes set. This attribute is valid only when used alone.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public none: boolean = false;\n\n    /**\n     * Specifies the handle identifies a directory.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public directory: boolean = false;\n  \n    /**\n     * Specifies a directory or file is an archive. Applications typically use this attribute to mark files for backup or removal.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public archive: boolean = false;\n\n    /**\n     * Specifies if a file is temporary.\n     */\n    public temporary: boolean = false;\n\n    /**\n     * Specifies the data of a directory or file is not available immediately. \n     * This file system attribute is presented primarily to provide compatibility with Windows - Azure Files does not support with offline storage options.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public offline: boolean = false;\n  \n    /**\n     * Specifies the directory or file is not to be indexed by the content indexing service.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public notContentIndexed: boolean = false;\n\n    /**\n     * Specifies the user data stream not to be read by the background data integrity scanner. \n     * This file system attribute is presented primarily to provide compatibility with Windows.\n     * Applicable to directory or file.\n     *\n     * @type {boolean}\n     * @memberof FileSystemAttributes\n     */\n    public noScrubData: boolean = false;\n  \n    /**\n     * Converts the given attributes to a string.\n     *\n     * @returns {string} A string which represents the FileSystemAttributes\n     * @memberof FileSystemAttributes\n     */\n    public toString(): string {\n      const attributes: string[] = [];\n      if (this.readonly) {\n        attributes.push(\"ReadOnly\");\n      }\n      if (this.hidden) {\n        attributes.push(\"Hidden\");\n      }\n      if (this.system) {\n        attributes.push(\"System\");\n      }\n      if (this.none) {\n        attributes.push(\"None\");\n      }\n      if (this.temporary) {\n        attributes.push(\"Temporary\");\n      }\n      if (this.directory) {\n        attributes.push(\"Directory\");\n      }\n      if (this.archive) {\n        attributes.push(\"Archive\");\n      }\n      if (this.offline) {\n        attributes.push(\"Offline\");\n      }\n      if (this.notContentIndexed) {\n        attributes.push(\"NotContentIndexed\");\n      }\n      if (this.noScrubData) {\n        attributes.push(\"NoScrubData\");\n      }\n      return attributes.join(\"|\");\n    }\n  }\n  ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { FileSystemAttributes } from \"./FileSystemAttributes\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nexport interface Metadata {\n  [propertyName: string]: string;\n}\n\nexport interface FileHttpHeaders {\n  /**\n   * @member {string} [fileCacheControl] Optional. Sets the file's cache\n   * control. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileCacheControl?: string;\n  /**\n   * @member {string} [fileContentType] Optional. Sets the file's content type.\n   * If specified, this property is stored with the file and returned with a\n   * read request.\n   */\n  fileContentType?: string;\n  /**\n   * @member {Uint8Array} [fileContentMD5] Optional. An MD5 hash of the file\n   * content. Note that this hash is not validated, as the hashes for the\n   * individual blocks were validated when each was uploaded.\n   */\n  fileContentMD5?: Uint8Array;\n  /**\n   * @member {string} [fileContentEncoding] Optional. Sets the file's content\n   * encoding. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileContentEncoding?: string;\n  /**\n   * @member {string} [fileContentLanguage] Optional. Set the file's content\n   * language. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileContentLanguage?: string;\n  /**\n   * @member {string} [fileContentDisposition] Optional. Sets the file's\n   * Content-Disposition header.\n   */\n  fileContentDisposition?: string;\n}\n\n/**\n * Indicates inherit file permission from the parent directory.\n */\nexport type FilePermissionInheritType = \"inherit\";\n\n/**\n * Indicates keep existing file permission value unchanged.\n */\nexport type FilePermissionPreserveType = \"preserve\";\n\n/**\n * Indicates setting as the time of the request.\n */\nexport type TimeNowType = \"now\";\n\n/**\n * Indicates keep existing time value unchanged.\n */\nexport type TimePreserveType = \"preserve\";\n\n/**\n * Indicates keep existing file attributes unchanged.\n */\nexport type FileAttributesPreserveType = \"preserve\";\n\nexport interface FileAndDirectoryCreateCommonOptions {\n  /**\n   * The permission(security descriptor) to be set for the file or directory in the\n   * Security Descriptor Definition Language (SDDL). If specified, it must have an owner, group, and discretionary access control list (DACL).\n   * A value of inherit may be passed to inherit from the parent directory.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   * And if both are not specified, inherit will be set to filePermission as default value by client library.\n   */\n  filePermission?: string | FilePermissionInheritType;\n\n  /**\n   * The key of the permission to be set for the file or directory. This can be created using the Create-Permission API.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * The file system attributes to be set on the file or directory.\n   */\n  fileAttributes?: FileSystemAttributes;\n\n  /**\n   * The Coordinated Universal Time (UTC) creation time property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * By default, the value will be set as now.\n   */\n  creationTime?: Date | TimeNowType;\n\n  /**\n   * The Coordinated Universal Time (UTC) last write property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * By default, the value will be set as now.\n   */\n  lastWriteTime?: Date | TimeNowType;\n}\n\nexport interface FileAndDirectorySetPropertiesCommonOptions {\n  /**\n   * The permission(security descriptor) to be set for the file or directory in the\n   * Security Descriptor Definition Language (SDDL). If specified, it must have an owner, group, and discretionary access control list (DACL).\n   * A value of inherit may be passed to inherit from the parent directory.\n   * A value of preserve may be passed to keep the value unchanged.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   * And if both are not specified, preserve will be set to filePermission as default value by client library.\n   */\n  filePermission?: string | FilePermissionInheritType | FilePermissionPreserveType;\n\n  /**\n   * The key of the permission to be set for the file or directory. This can be created using the Create-Permission API.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * The file system attributes to be set on the file or directory.\n   */\n  fileAttributes?: FileSystemAttributes | FileAttributesPreserveType;\n\n  /**\n   * The Coordinated Universal Time (UTC) creation time property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * A value of preserve may be passed to keep an existing value unchanged.\n   * By default, the value will be set as preserve.\n   */\n  creationTime?: Date | TimeNowType | TimePreserveType;\n\n  /**\n   * The Coordinated Universal Time (UTC) last write property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * A value of preserve may be passed to keep an existing value unchanged.\n   * By default, the value will be set as preserve.\n   */\n  lastWriteTime?: Date | TimeNowType | TimePreserveType;\n}\n\n/**\n * Close handles result information.\n *\n * @export\n * @interface CloseHandlesInfo\n */\nexport interface CloseHandlesInfo {\n  closedHandlesCount: number;\n  /**\n   * Contains count of number of handles that failed to close.\n   */\n  closeFailureCount?: number;\n}\n\nexport function validateFilePermissionOptions(filePermission?: string, filePermissionKey?: string) {\n  if (filePermission && filePermissionKey) {\n    throw new RangeError(\"Only one of filePermission or filePermissionKey can be specified.\");\n  }\n}\n\nexport function validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(\n  options: FileAndDirectoryCreateCommonOptions\n): FileAndDirectoryCreateCommonOptions {\n  // Would better deep copy params set by user.\n\n  if (!options) {\n    options = {};\n  }\n\n  validateFilePermissionOptions(options.filePermission, options.filePermissionKey);\n\n  if (!options.creationTime) {\n    options.creationTime = \"now\";\n  }\n\n  if (!options.lastWriteTime) {\n    options.lastWriteTime = \"now\";\n  }\n\n  if (!options.filePermission && !options.filePermissionKey) {\n    options.filePermission = \"inherit\";\n  }\n\n  return options;\n}\n\nexport function validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(\n  options: FileAndDirectorySetPropertiesCommonOptions\n): FileAndDirectorySetPropertiesCommonOptions {\n  // Would better deep copy params set by user.\n\n  if (!options) {\n    options = {};\n  }\n\n  validateFilePermissionOptions(options.filePermission, options.filePermissionKey);\n\n  if (!options.creationTime) {\n    options.creationTime = \"preserve\";\n  }\n\n  if (!options.lastWriteTime) {\n    options.lastWriteTime = \"preserve\";\n  }\n\n  if (!options.fileAttributes) {\n    options.fileAttributes = \"preserve\";\n  }\n\n  if (!options.filePermission && !options.filePermissionKey) {\n    options.filePermission = \"preserve\";\n  }\n\n  return options;\n}\n\nexport function fileAttributesToString(\n  fileAttributes: FileSystemAttributes | FileAttributesPreserveType\n): string {\n  return fileAttributes instanceof FileSystemAttributes\n    ? fileAttributes.toString()\n    : fileAttributes;\n}\n\nexport function fileCreationTimeToString(time: Date | TimeNowType | TimePreserveType): string {\n  return time instanceof Date ? truncatedISO8061Date(time) : time;\n}\n\nexport function fileLastWriteTimeToString(time: Date | TimeNowType | TimePreserveType): string {\n  return time instanceof Date ? truncatedISO8061Date(time) : time;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The @azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-file-share\");\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n *\n * @class StorageBrowserPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof StorageBrowserPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageBrowserPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString()\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating BrowserPolicy objects.\n *\n * @export\n * @class StorageBrowserPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageBrowserPolicy}\n   * @memberof StorageBrowserPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  AbortSignalLike,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RestError,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { AbortError } from \"@azure/abort-controller\";\n\nimport { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @export\n * @param {StorageRetryOptions} retryOptions\n * @returns\n */\nexport function NewStorageRetryPolicyFactory(\n  retryOptions?: StorageRetryOptions\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    }\n  };\n}\n\n/**\n * RetryPolicy types.\n *\n * @export\n * @enum {number}\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED\n}\n\n// Default values of RetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n *\n * @class RetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   *\n   * @private\n   * @type {RetryOptions}\n   * @memberof StorageRetryPolicy\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {StorageRetryOptions} [retryOptions=DEFAULT_RETRY_OPTIONS]\n   * @memberof StorageRetryPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageRetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @param {HttpOperationResponse} response\n   * @param {boolean} secondaryHas404  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param {number} attempt           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageRetryPolicy\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry = true; // File doesn't suport secondary endpoint\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString()\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(\n        `RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`\n      );\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err) {\n      logger.error(\n        `RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`\n      );\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return await this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @protected\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {HttpOperationResponse} [response]\n   * @param {RestError} [err]\n   * @returns {boolean}\n   * @memberof StorageRetryPolicy\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code &&\n            err.code\n              .toString()\n              .toUpperCase()\n              .includes(retriableError))\n        ) {\n          logger.info(\n            `RetryPolicy: Network error ${retriableError} found, will retry.`\n          );\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(\n          `RetryPolicy: Will retry for status code ${statusCode}.`\n        );\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @private\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {AbortSignalLike} [abortSignal]\n   * @returns\n   * @memberof StorageRetryPolicy\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport {\n  StorageRetryPolicy,\n  StorageRetryPolicyType\n} from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Retry options interface.\n *\n * @export\n * @interface StorageRetryOptions\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   *\n   * @type {StorageRetryPolicyType}\n   * @memberof StorageRetryOptions\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means that you accept our default timeout, 60s or 60 * 1000ms.\n   *\n   * NOTE: When transferring large amounts of data, the default TryTimeout will probably\n   * not be sufficient. You should override this value based on the bandwidth available to\n   * the host machine and proximity to the Storage service. A good starting point may be something\n   * like (60 seconds per MB of anticipated-payload-size)\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly maxRetryDelayInMs?: number;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating StorageRetryPolicy objects.\n *\n * @export\n * @class StorageRetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param {StorageRetryOptions} [retryOptions]\n   * @memberof StorageRetryPolicyFactory\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageRetryPolicy}\n   * @memberof StorageRetryPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n *\n * @class TelemetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   *\n   * @type {string}\n   * @memberof TelemetryPolicy\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {TelemetryOptions} [telemetry]\n   * @memberof TelemetryPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof TelemetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  UserAgentOptions\n} from \"@azure/core-http\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n *\n * @export\n * @class TelemetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  /**\n   * @internal\n   * @ignore\n   */\n  public readonly telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param {UserAgentOptions} [telemetry]\n   * @memberof TelemetryPolicyFactory\n   */\n  constructor(telemetry?: UserAgentOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = (telemetry.userAgentPrefix || \"\").replace(\" \", \"\");\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. azsdk-js-storagefile/11.0.0\n      const libInfo = `azsdk-js-storagefile/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      const runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  /**\n   * Creates a {@link RequestPolicy} object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {TelemetryPolicy}\n   * @memberof TelemetryPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { DefaultHttpClient } from \"@azure/core-http\";\nimport { IHttpClient } from \"../Pipeline\";\n\nconst _defaultHttpClient = new DefaultHttpClient();\n\nexport function getCachedDefaultHttpClient(): IHttpClient {\n  return _defaultHttpClient;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  HttpClient as IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  ServiceClientOptions,\n  WebResource,\n  proxyPolicy,\n  isNode,\n  tracingPolicy,\n  logPolicy,\n  ProxyOptions,\n  UserAgentOptions,\n  KeepAliveOptions,\n  keepAlivePolicy,\n  generateClientRequestIdPolicy\n} from \"@azure/core-http\";\n\nimport { logger } from \"./log\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageRetryOptions, StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport {\n  StorageFileLoggingAllowedHeaderNames,\n  StorageFileLoggingAllowedQueryParameters\n} from \"./utils/constants\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  deserializationPolicy,\n  IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  WebResource,\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n};\n\n/**\n * Option interface for Pipeline constructor.\n *\n * @export\n * @interface PipelineOptions\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   *\n   * @type {IHttpClient}\n   * @memberof PipelineOptions\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies as reference before\n * implementing your customized Pipeline.\n *\n * @export\n * @class Pipeline\n */\nexport class Pipeline {\n  /**\n   * A list of chained request policy factories.\n   *\n   * @type {RequestPolicyFactory[]}\n   * @memberof Pipeline\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   *\n   * @type {PipelineOptions}\n   * @memberof Pipeline\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param {RequestPolicyFactory[]} factories\n   * @param {PipelineOptions} [options={}]\n   * @memberof Pipeline\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n    // avoid each client creating its own http client.\n    this.options = {\n      ...options,\n      httpClient: options.httpClient || getCachedDefaultHttpClient()\n    };\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which required by\n   * ServiceClient constructor.\n   *\n   * @returns {ServiceClientOptions} The ServiceClientOptions object from this Pipeline.\n   * @memberof Pipeline\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories\n    };\n  }\n}\n\n/**\n * Option interface for {@link newPipeline} function.\n *\n * @export\n * @interface StoragePipelineOptions\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   *\n   * @type {UserAgentOptions}\n   * @memberof StoragePipelineOptions\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   *\n   * @type {StorageRetryOptions}\n   * @memberof StoragePipelineOptions\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   *\n   * @type {KeepAliveOptions}\n   * @memberof StoragePipelineOptions\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   *\n   * @type {IHttpClient}\n   * @memberof StoragePipelineOptions\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * Creates a new {@link Pipeline} object with {@link Credential} provided.\n *\n * @static\n * @param {Credential} credential Such as AnonymousCredential, StorageSharedKeyCredential.\n * @param {StoragePipelineOptions} [pipelineOptions] Optional. Options.\n * @returns {Pipeline} A new Pipeline object.\n * @memberof Pipeline\n */\nexport function newPipeline(\n  credential: Credential,\n  pipelineOptions: StoragePipelineOptions = {}\n): Pipeline {\n  // Order is important. Closer to the API at the top & closer to the network at the bottom.\n  // The credential's policy factory must appear close to the wire so it can sign any\n  // changes made by other factories (like UniqueRequestIDPolicyFactory)\n  const telemetryPolicy = new TelemetryPolicyFactory(pipelineOptions.userAgentOptions);\n  const factories: RequestPolicyFactory[] = [\n    tracingPolicy({ userAgent: telemetryPolicy.telemetryString }),\n    keepAlivePolicy(pipelineOptions.keepAliveOptions),\n    telemetryPolicy,\n    generateClientRequestIdPolicy(),\n    new StorageBrowserPolicyFactory(),\n    deserializationPolicy(), // Default deserializationPolicy is provided by protocol layer\n    new StorageRetryPolicyFactory(pipelineOptions.retryOptions),\n    logPolicy({\n      logger: logger.info,\n      allowedHeaderNames: StorageFileLoggingAllowedHeaderNames,\n      allowedQueryParameters: StorageFileLoggingAllowedQueryParameters\n    })\n  ];\n\n  if (isNode) {\n    // ProxyPolicy is only avaiable in Node.js runtime, not in browsers\n    factories.push(proxyPolicy(pipelineOptions.proxyOptions));\n  }\n  factories.push(credential);\n\n  return new Pipeline(factories, pipelineOptions);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nconst packageName = \"azure-storage-file-share\";\nconst packageVersion = \"12.1.1\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  version: string;\n  fileRangeWriteFromUrl: string;\n  url: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param version Specifies the version of the operation to use for this request.\n   * @param url The URL of the service account, share, directory or file that is the target of the\n   * desired operation.\n   * @param [options] The parameter options\n   */\n  constructor(version: string, url: string, options?: coreHttp.ServiceClientOptions) {\n    if (version == undefined) {\n      throw new Error(\"'version' cannot be null.\");\n    }\n    if (url == undefined) {\n      throw new Error(\"'url' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.fileRangeWriteFromUrl = 'update';\n    this.baseUri = \"{url}\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.version = version;\n    this.url = url;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { Pipeline } from \"./Pipeline\";\nimport { escapeURLPath, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { SpanOptions } from \"@opentelemetry/types\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  tracingOptions?: OperationTracingOptions;\n}\n\nexport interface OperationTracingOptions {\n  /**\n   * OpenTelemetry SpanOptions used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n}\n\n/**\n * A StorageClient represents a base client class for ServiceClient, ContainerClient and etc.\n *\n * @export\n * @class StorageClient\n */\nexport abstract class StorageClient {\n  /**\n   * URL string value.\n   *\n   * @type {string}\n   * @memberof StorageClient\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   * @ignore\n   * @type {Pipeline}\n   * @memberof StorageClient\n   */\n  protected readonly pipeline: Pipeline;\n\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   *\n   * @protected\n   * @type {StorageClientContext}\n   * @memberof StorageClient\n   */\n  protected readonly storageClientContext: StorageClientContext;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param {string} url\n   * @param {Pipeline} pipeline\n   * @memberof StorageClient\n   */\n  protected constructor(url: string, pipeline: Pipeline) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.accountName = getAccountNameFromUrl(url);\n\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageClientContext(\n      SERVICE_VERSION,\n      this.url,\n      pipeline.toServiceClientOptions()\n    );\n\n    // Remove the default content-type in generated code of StorageClientContext\n    const storageClientContext = this.storageClientContext as any;\n    if (storageClientContext.requestContentType) {\n      storageClientContext.requestContentType = undefined;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport { TransferProgressEvent } from \"@azure/core-http\";\nimport { Readable } from \"stream\";\nimport { AbortSignal, AbortSignalLike } from \"@azure/abort-controller\";\n\nexport type ReadableStreamGetter = (offset: number) => Promise<NodeJS.ReadableStream>;\n\nexport interface RetriableReadableStreamOptions {\n  abortSignal?: AbortSignalLike;\n  /**\n   * Max retry count (>=0), undefined or invalid value means no retry\n   *\n   * @type {number}\n   * @memberof RetriableReadableStreamOptions\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * Read progress event handler\n   *\n   * @memberof RetriableReadableStreamOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Debug purpose only. Used to inject an unexpected end to existing internal stream,\n   * to test stream retry works well or not.\n   *\n   * When assign it to true, for next incoming \"data\" event of internal stream,\n   * RetriableReadableStream will try to emit an \"end\" event to existing internal\n   * stream to force it end and start retry from the breaking point.\n   * The value will then update to \"undefined\", once the injection works.\n   *\n   * @type {boolean}\n   * @memberof RetriableReadableStreamOptions\n   */\n  doInjectErrorOnce?: boolean;\n}\n\nconst ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n *\n * @class RetriableReadableStream\n * @extends {Readable}\n */\nexport class RetriableReadableStream extends Readable {\n  private aborter: AbortSignalLike;\n  private start: number;\n  private offset: number;\n  private end: number;\n  private getter: ReadableStreamGetter;\n  private source: NodeJS.ReadableStream;\n  private retries: number = 0;\n  private maxRetryRequests: number;\n  private onProgress?: (progress: TransferProgressEvent) => void;\n  private options: RetriableReadableStreamOptions;\n  private abortHandler = () => {\n    this.source.pause();\n    this.emit(\"error\", ABORT_ERROR);\n  };\n\n  /**\n   * Creates an instance of RetriableReadableStream.\n   *\n   * @param {NodeJS.ReadableStream} source The current ReadableStream returned from getter\n   * @param {ReadableStreamGetter} getter A method calling downloading request returning\n   *                                      a new ReadableStream from specified offset\n   * @param {number} offset Offset position in original data source to read\n   * @param {number} count How much data in original data source to read\n   * @param {RetriableReadableStreamOptions} [options={}]\n   * @memberof RetriableReadableStream\n   */\n  public constructor(\n    source: NodeJS.ReadableStream,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    super();\n    const aborter = options.abortSignal || AbortSignal.none;\n    this.aborter = aborter;\n    this.getter = getter;\n    this.source = source;\n    this.start = offset;\n    this.offset = offset;\n    this.end = offset + count - 1;\n    this.maxRetryRequests =\n      options.maxRetryRequests && options.maxRetryRequests >= 0 ? options.maxRetryRequests : 0;\n    this.onProgress = options.onProgress;\n    this.options = options;\n\n    aborter.addEventListener(\"abort\", this.abortHandler);\n\n    this.setSourceDataHandler();\n    this.setSourceEndHandler();\n    this.setSourceErrorHandler();\n  }\n\n  public _read() {\n    if (!this.aborter.aborted) {\n      this.source.resume();\n    }\n  }\n\n  private setSourceDataHandler() {\n    this.source.on(\"data\", (data: Buffer) => {\n      if (this.options.doInjectErrorOnce) {\n        this.options.doInjectErrorOnce = undefined;\n        this.source.pause();\n        this.source.removeAllListeners(\"data\");\n        this.source.emit(\"end\");\n        return;\n      }\n\n      // console.log(\n      //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n      // );\n      this.offset += data.length;\n      if (this.onProgress) {\n        this.onProgress({ loadedBytes: this.offset - this.start });\n      }\n      if (!this.push(data)) {\n        this.source.pause();\n      }\n    });\n  }\n\n  private setSourceEndHandler() {\n    this.source.on(\"end\", () => {\n      // console.log(\n      //   `Source stream emits end, offset: ${\n      //     this.offset\n      //   }, dest end : ${this.end}`\n      // );\n      if (this.offset - 1 === this.end) {\n        this.aborter.removeEventListener(\"abort\", this.abortHandler);\n        this.push(null);\n      } else if (this.offset <= this.end) {\n        // console.log(\n        //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n        // );\n        if (this.retries < this.maxRetryRequests) {\n          this.retries += 1;\n          this.getter(this.offset)\n            .then((newSource) => {\n              this.source = newSource;\n              this.setSourceDataHandler();\n              this.setSourceEndHandler();\n              this.setSourceErrorHandler();\n            })\n            .catch((error) => {\n              this.emit(\"error\", error);\n            });\n        } else {\n          this.emit(\n            \"error\",\n            new Error(\n              // tslint:disable-next-line:max-line-length\n              `Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${this\n                .offset - 1}, data needed offset: ${this.end}, retries: ${\n                this.retries\n              }, max retries: ${this.maxRetryRequests}`\n            )\n          );\n        }\n      } else {\n        this.emit(\n          \"error\",\n          new Error(\n            `Data corruption failure: Received more data than original request, data needed offset is ${\n              this.end\n            }, received offset: ${this.offset - 1}`\n          )\n        );\n      }\n    });\n  }\n\n  private setSourceErrorHandler() {\n    this.source.on(\"error\", (error) => {\n      this.emit(\"error\", error);\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { HttpResponse, isNode } from \"@azure/core-http\";\nimport {\n  CopyStatusType,\n  FileDownloadHeaders,\n  FileDownloadResponseModel,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType\n} from \"./generatedModels\";\nimport { Metadata } from \"./models\";\nimport {\n  ReadableStreamGetter,\n  RetriableReadableStream,\n  RetriableReadableStreamOptions\n} from \"./utils/RetriableReadableStream\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * FileDownloadResponse implements the `FileDownloadResponseModel` interface, and in a Node.js runtime it will\n * automatically retry when its internal read stream unexpectedly ends. (This kind of unexpected end cannot\n * trigger retries defined in the pipeline retry policy.)\n *\n * The {@link readableStreamBody} stream will retry beneath the `ReadableStream` layer, so you can just use it as\n * a normal Node.js Readable stream.\n *\n * @export\n * @class FileDownloadResponse\n * @implements {FileDownloadResponseModel}\n */\nexport class FileDownloadResponse implements FileDownloadResponseModel {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returnes if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   * @type {(Uint8Array | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return this.originalResponse.copyCompletedOn;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   * @type {(CopyStatusType | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * If the file has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole file's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   * @type {(Uint8Array | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get fileContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.fileContentMD5;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   * @type {(boolean | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   * @type {(Metadata | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * Attributes set for the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get fileAttributes(): string | undefined {\n    return this.originalResponse.fileAttributes;\n  }\n\n  /**\n   * Creation time for the file.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get fileCreatedOn(): Date | undefined {\n    return this.originalResponse.fileCreatedOn;\n  }\n\n  /**\n   * Last write time for the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get fileLastWriteOn(): Date | undefined {\n    return this.originalResponse.fileLastWriteOn;\n  }\n\n  /**\n   * Change time for the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get fileChangeOn(): Date | undefined {\n    return this.originalResponse.fileChangeOn;\n  }\n\n  /**\n   * Key of the permission set for the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get filePermissionKey(): string | undefined {\n    return this.originalResponse.filePermissionKey;\n  }\n\n  /**\n   * The fileId of the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get fileId(): string | undefined {\n    return this.originalResponse.fileId;\n  }\n\n  /**\n   * The parent fileId of the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get fileParentId(): string | undefined {\n    return this.originalResponse.fileParentId;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   * @type {(Promise<Blob> | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get contentAsBlob(): Promise<Blob> | undefined {\n    return this.originalResponse.blobBody;\n  }\n\n  /**\n   * When a file is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the file. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the file. Possible values include: 'locked', 'unlocked'\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will automatically retry when internal read stream unexpected ends.\n   *\n   * @readonly\n   * @type {(NodeJS.ReadableStream | undefined)}\n   * @memberof FileDownloadResponse\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.fileDownloadStream : undefined;\n  }\n\n  public get _response(): HttpResponse & {\n    parsedHeaders: FileDownloadHeaders;\n  } {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: FileDownloadResponseModel;\n  private fileDownloadStream?: RetriableReadableStream;\n\n  /**\n   * Creates an instance of FileDownloadResponse.\n   *\n   * @param {FileDownloadResponseModel} originalResponse\n   * @param {ReadableStreamGetter} getter\n   * @param {number} offset\n   * @param {number} count\n   * @param {RetriableReadableStreamOptions} [options={}]\n   * @memberof FileDownloadResponse\n   */\n  public constructor(\n    originalResponse: FileDownloadResponseModel,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    this.originalResponse = originalResponse;\n    this.fileDownloadStream = new RetriableReadableStream(\n      this.originalResponse.readableStreamBody!,\n      getter,\n      offset,\n      count,\n      options\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// tslint:disable:max-line-length\n/**\n * Range for Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-file-service-operations\n *\n * @export\n * @interface Range\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   *\n   * @type {string}\n   * @memberof Range\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   *\n   * @type {string}\n   * @memberof Range\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @export\n * @param {Range} range A range of byte positions.\n * @returns {string} The string representation for the byte range.\n */\nexport function rangeToString(range: Range): string {\n  if (range.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (range.count && range.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return range.count\n    ? `bytes=${range.offset}-${range.offset + range.count - 1}`\n    : `bytes=${range.offset}-`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n *\n * @export\n * @abstract\n * @class Credential\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param {RequestPolicy} _nextPolicy\n   * @param {RequestPolicyOptions} _options\n   * @returns {RequestPolicy}\n   * @memberof Credential\n   */\n  public create(\n    // tslint:disable-next-line:variable-name\n    _nextPolicy: RequestPolicy,\n    // tslint:disable-next-line:variable-name\n    _options: RequestPolicyOptions\n  ): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n *\n * @enum {number}\n */\nenum BatchStates {\n  Good,\n  Error\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n *\n * @export\n * @class Batch\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   *\n   * @type {number}\n   * @memberof Batch\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   *\n   * @private\n   * @type {Operation[]}\n   * @memberof Batch\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   *\n   * @private\n   * @type {BatchStates}\n   * @memberof Batch\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   *\n   * @private\n   * @type {EventEmitter}\n   * @memberof Batch\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param {number} [concurrency=5]\n   * @memberof Batch\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param {Operation} operation\n   * @memberof Batch\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   * @returns {Promise<void>}\n   * @memberof Batch\n   */\n  public async do(): Promise<void> {\n    if (this.operations.length === 0) {\n      return Promise.resolve();\n    }\n\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   * @private\n   * @returns {(Operation | null)}\n   * @memberof Batch\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   * @private\n   * @returns {void}\n   * @memberof Batch\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { EventEmitter } from \"events\";\nimport { Readable } from \"stream\";\n\n/**\n * OutgoingHandler is an async function triggered by BufferScheduler.\n */\nexport declare type OutgoingHandler = (buffer: Buffer, offset?: number) => Promise<any>;\n\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS <= maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. Concurrency should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n * @export\n * @class BufferScheduler\n */\nexport class BufferScheduler {\n  /**\n   * Size of buffers in incoming and outgoing queues. This class will try to align\n   * data read from Readable stream into buffer chunks with bufferSize defined.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly bufferSize: number;\n\n  /**\n   * How many buffers can be created or maintained.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly maxBuffers: number;\n\n  /**\n   * A Node.js Readable stream.\n   *\n   * @private\n   * @type {Readable}\n   * @memberof BufferScheduler\n   */\n  private readonly readable: Readable;\n\n  /**\n   * OutgoingHandler is an async function triggered by BufferScheduler when there\n   * are available buffers in outgoing array.\n   *\n   * @private\n   * @type {OutgoingHandler}\n   * @memberof BufferScheduler\n   */\n  private readonly outgoingHandler: OutgoingHandler;\n\n  /**\n   * An internal event emitter.\n   *\n   * @private\n   * @type {EventEmitter}\n   * @memberof BufferScheduler\n   */\n  private readonly emitter: EventEmitter = new EventEmitter();\n\n  /**\n   * Concurrency of executing outgoingHandlers. (0 < concurrency <= maxBuffers)\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly concurrency: number;\n\n  /**\n   * An internal offset marker to track data offset in bytes of next outgoingHandler.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private offset: number = 0;\n\n  /**\n   * An internal marker to track whether stream is end.\n   *\n   * @private\n   * @type {boolean}\n   * @memberof BufferScheduler\n   */\n  private isStreamEnd: boolean = false;\n\n  /**\n   * An internal marker to track whether stream or outgoingHandler returns error.\n   *\n   * @private\n   * @type {boolean}\n   * @memberof BufferScheduler\n   */\n  private isError: boolean = false;\n\n  /**\n   * How many handlers are executing.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private executingOutgoingHandlers: number = 0;\n\n  /**\n   * Encoding of the input Readable stream which has string data type instead of Buffer.\n   *\n   * @private\n   * @type {string}\n   * @memberof BufferScheduler\n   */\n  private encoding?: string;\n\n  /**\n   * How many buffers have been allocated.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private numBuffers: number = 0;\n\n  /**\n   * Because this class doesn't know how much data every time stream pops, which\n   * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n   * data received from the stream, when data in unresolvedDataArray exceeds the\n   * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n   * buffers from incoming and push to outgoing array.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private unresolvedDataArray: Buffer[] = [];\n\n  /**\n   * How much data consisted in unresolvedDataArray.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private unresolvedLength: number = 0;\n\n  /**\n   * The array includes all the available buffers can be used to fill data from stream.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private incoming: Buffer[] = [];\n\n  /**\n   * The array (queue) includes all the buffers filled from stream data.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private outgoing: Buffer[] = [];\n\n  /**\n   * Creates an instance of BufferScheduler.\n   *\n   * @param {Readable} readable A Node.js Readable stream\n   * @param {number} bufferSize Buffer size of every maintained buffer\n   * @param {number} maxBuffers How many buffers can be allocated\n   * @param {OutgoingHandler} outgoingHandler An async function scheduled to be\n   *                                          triggered when a buffer fully filled\n   *                                          with stream data\n   * @param {number} concurrency Concurrency of executing outgoingHandlers (>0)\n   * @param {string} [encoding] [Optional] Encoding of Readable stream when it's a string stream\n   * @memberof BufferScheduler\n   */\n  constructor(\n    readable: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    outgoingHandler: OutgoingHandler,\n    concurrency: number,\n    encoding?: string\n  ) {\n    if (bufferSize <= 0) {\n      throw new RangeError(`bufferSize must be larger than 0, current is ${bufferSize}`);\n    }\n\n    if (maxBuffers <= 0) {\n      throw new RangeError(`maxBuffers must be larger than 0, current is ${maxBuffers}`);\n    }\n\n    if (concurrency <= 0) {\n      throw new RangeError(`concurrency must be larger than 0, current is ${concurrency}`);\n    }\n\n    this.bufferSize = bufferSize;\n    this.maxBuffers = maxBuffers;\n    this.readable = readable;\n    this.outgoingHandler = outgoingHandler;\n    this.concurrency = concurrency;\n    this.encoding = encoding;\n  }\n\n  /**\n   * Start the scheduler, will return error when stream of any of the outgoingHandlers\n   * returns error.\n   *\n   * @returns {Promise<void>}\n   * @memberof BufferScheduler\n   */\n  public async do(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.readable.on(\"data\", (data) => {\n        data = typeof data === \"string\" ? Buffer.from(data, this.encoding) : data;\n        this.appendUnresolvedData(data);\n\n        if (!this.resolveData()) {\n          this.readable.pause();\n        }\n      });\n\n      this.readable.on(\"error\", (err) => {\n        this.emitter.emit(\"error\", err);\n      });\n\n      this.readable.on(\"end\", () => {\n        this.isStreamEnd = true;\n        this.emitter.emit(\"checkEnd\");\n      });\n\n      this.emitter.on(\"error\", (err) => {\n        this.isError = true;\n        this.readable.pause();\n        reject(err);\n      });\n\n      this.emitter.on(\"checkEnd\", () => {\n        if (this.outgoing.length > 0) {\n          this.triggerOutgoingHandlers();\n          return;\n        }\n\n        if (this.isStreamEnd && this.executingOutgoingHandlers === 0) {\n          if (this.unresolvedLength > 0 && this.unresolvedLength < this.bufferSize) {\n            this.outgoingHandler(this.shiftBufferFromUnresolvedDataArray(), this.offset)\n              .then(resolve)\n              .catch(reject);\n          } else if (this.unresolvedLength >= this.bufferSize) {\n            return;\n          } else {\n            resolve();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert a new data into unresolved array.\n   *\n   * @private\n   * @param {Buffer} data\n   * @memberof BufferScheduler\n   */\n  private appendUnresolvedData(data: Buffer) {\n    this.unresolvedDataArray.push(data);\n    this.unresolvedLength += data.length;\n  }\n\n  /**\n   * Try to shift a buffer with size in blockSize. The buffer returned may be less\n   * than blockSize when data in unresolvedDataArray is less than bufferSize.\n   *\n   * @private\n   * @returns {Buffer}\n   * @memberof BufferScheduler\n   */\n  private shiftBufferFromUnresolvedDataArray(): Buffer {\n    if (this.unresolvedLength >= this.bufferSize) {\n      if (this.bufferSize === this.unresolvedDataArray[0].length) {\n        this.unresolvedLength -= this.bufferSize;\n        return this.unresolvedDataArray.shift()!;\n      }\n\n      // Lazy concat because Buffer.concat highly drops performance\n      let merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      const buffer = merged.slice(0, this.bufferSize);\n      merged = merged.slice(this.bufferSize);\n      this.unresolvedDataArray = [merged];\n      this.unresolvedLength -= buffer.length;\n      return buffer;\n    } else if (this.unresolvedLength > 0) {\n      const merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      this.unresolvedDataArray = [];\n      this.unresolvedLength = 0;\n      return merged;\n    } else {\n      return Buffer.allocUnsafe(0);\n    }\n  }\n\n  /**\n   * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n   * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n   * then push it into outgoing to be handled by outgoing handler.\n   *\n   * Return false when available buffers in incoming are not enough, else true.\n   *\n   * @private\n   * @returns {boolean} Return false when buffers in incoming are not enough, else true.\n   * @memberof BufferScheduler\n   */\n  private resolveData(): boolean {\n    while (this.unresolvedLength >= this.bufferSize) {\n      let buffer: Buffer;\n\n      if (this.incoming.length > 0) {\n        buffer = this.incoming.shift()!;\n      } else {\n        if (this.numBuffers < this.maxBuffers) {\n          buffer = Buffer.allocUnsafe(this.bufferSize);\n          this.numBuffers++;\n        } else {\n          // No available buffer, wait for buffer returned\n          return false;\n        }\n      }\n\n      buffer.fill(this.shiftBufferFromUnresolvedDataArray());\n      this.outgoing.push(buffer);\n      this.triggerOutgoingHandlers();\n    }\n    return true;\n  }\n\n  /**\n   * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n   * concurrency reaches.\n   *\n   * @private\n   * @memberof BufferScheduler\n   */\n  private async triggerOutgoingHandlers() {\n    let buffer: Buffer | undefined;\n    do {\n      if (this.executingOutgoingHandlers >= this.concurrency) {\n        return;\n      }\n\n      buffer = this.outgoing.shift();\n      if (buffer) {\n        this.triggerOutgoingHandler(buffer);\n      }\n    } while (buffer);\n  }\n\n  /**\n   * Trigger a outgoing handler for a buffer shifted from outgoing.\n   *\n   * @private\n   * @param {Buffer} buffer\n   * @returns {Promise<any>}\n   * @memberof BufferScheduler\n   */\n  private async triggerOutgoingHandler(buffer: Buffer): Promise<any> {\n    const bufferLength = buffer.length;\n\n    this.executingOutgoingHandlers++;\n    this.offset += bufferLength;\n\n    try {\n      await this.outgoingHandler(buffer, this.offset - bufferLength);\n    } catch (err) {\n      this.emitter.emit(\"error\", err);\n      return;\n    }\n\n    this.executingOutgoingHandlers--;\n    this.reuseBuffer(buffer);\n    this.emitter.emit(\"checkEnd\");\n  }\n\n  /**\n   * Return buffer used by outgoing handler into incoming.\n   *\n   * @private\n   * @param {Buffer} buffer\n   * @memberof BufferScheduler\n   */\n  private reuseBuffer(buffer: Buffer) {\n    this.incoming.push(buffer);\n    if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n      this.readable.resume();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { BaseRequestPolicy, HttpOperationResponse, WebResource } from \"@azure/core-http\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n *\n * @export\n * @abstract\n * @class CredentialPolicy\n * @extends {BaseRequestPolicy}\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof CredentialPolicy\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @protected\n   * @abstract\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof CredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n *\n * @export\n * @class AnonymousCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof AnonymousCredentialPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * {@link AnonymousCredentialPolicy} objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n *\n * @export\n * @class AnonymousCredential\n * @extends {Credential}\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {AnonymousCredentialPolicy}\n   * @memberof AnonymousCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as fs from \"fs\";\nimport * as util from \"util\";\n\n/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @export\n * @param {NodeJS.ReadableStream} stream A Node.js Readable stream\n * @param {Buffer} buffer Buffer to be filled, length must >= offset\n * @param {number} offset From which position in the buffer to be filled, inclusive\n * @param {number} end To which position in the buffer to be filled, exclusive\n * @param {string} [encoding] Encoding of the Readable stream\n * @returns {Promise<void>}\n */\nexport async function streamToBuffer(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  offset: number,\n  end: number,\n  encoding?: string\n): Promise<void> {\n  let pos = 0; // Position in stream\n  const count = end - offset; // Total amount of data needed in stream\n\n  return new Promise<void>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      if (pos >= count) {\n        resolve();\n        return;\n      }\n\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      // How much data needed in this chunk\n      const chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n\n      buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n      pos += chunkLength;\n    });\n\n    stream.on(\"end\", () => {\n      if (pos < count) {\n        reject(\n          new Error(\n            `Stream drains before getting enough data needed. Data read: ${pos}, data need: ${count}`\n          )\n        );\n      }\n      resolve();\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Writes the content of a readstream to a local file. Returns a Promise which is completed after the file handle is closed.\n *\n * @export\n * @param {NodeJS.ReadableStream} rs The read stream.\n * @param {string} file Destination file path.\n * @returns {Promise<void>}\n */\nexport async function readStreamToLocalFile(\n  rs: NodeJS.ReadableStream,\n  file: string\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    const ws = fs.createWriteStream(file);\n\n    rs.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"close\", resolve);\n\n    rs.pipe(ws);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Promisified version of fs.stat().\n */\nexport const fsStat = util.promisify(fs.stat);\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getTracer } from \"@azure/core-tracing\";\nimport { Span, SpanOptions, SpanKind } from \"@opentelemetry/types\";\nimport { OperationTracingOptions } from \"../StorageClient\";\n\n/**\n * Creates a span using the global tracer.\n * @param name The name of the operation being performed.\n * @param tracingOptions The tracingOptions for the underlying http request.\n */\nexport function createSpan(\n  operationName: string,\n  tracingOptions: OperationTracingOptions = {}\n): { span: Span; spanOptions: SpanOptions } {\n  const tracer = getTracer();\n  const spanOptions: SpanOptions = {\n    ...tracingOptions.spanOptions,\n    kind: SpanKind.INTERNAL\n  };\n\n  const span = tracer.startSpan(`Azure.Storage.File.${operationName}`, spanOptions);\n  span.setAttribute(\"az.namespace\", \"Microsoft.Storage\");\n\n  let newOptions = tracingOptions.spanOptions || {};\n  if (span.isRecording()) {\n    newOptions = {\n      ...tracingOptions.spanOptions,\n      parent: span,\n      attributes: {\n        ...spanOptions.attributes,\n        \"az.namespace\": \"Microsoft.Storage\"\n      }\n    };\n  }\n\n  return {\n    span,\n    spanOptions: newOptions\n  };\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as fs from \"fs\";\nimport { HttpRequestBody, HttpResponse, isNode, TransferProgressEvent } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/types\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { FileDownloadResponse } from \"./FileDownloadResponse\";\nimport {\n  FileAbortCopyResponse,\n  FileCreateResponse,\n  FileDeleteResponse,\n  FileDownloadOptionalParams,\n  FileDownloadResponseModel,\n  FileGetPropertiesResponse,\n  FileGetRangeListHeaders,\n  FileListHandlesResponse,\n  FileSetHTTPHeadersResponse,\n  FileSetMetadataResponse,\n  FileStartCopyResponse,\n  SourceModifiedAccessConditions,\n  FileUploadRangeFromURLResponse,\n  FileUploadRangeResponse,\n  HandleItem,\n  RangeModel,\n  FileForceCloseHandlesHeaders,\n  CopyFileSmbInfo,\n  LeaseAccessConditions\n} from \"./generatedModels\";\nimport { File } from \"./generated/src/operations\";\nimport { Range, rangeToString } from \"./Range\";\nimport {\n  FileHttpHeaders,\n  Metadata,\n  FileAndDirectoryCreateCommonOptions,\n  FileAndDirectorySetPropertiesCommonOptions,\n  fileAttributesToString,\n  fileCreationTimeToString,\n  fileLastWriteTimeToString,\n  validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions,\n  validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions,\n  CloseHandlesInfo\n} from \"./models\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport { StorageClient, CommonOptions } from \"./StorageClient\";\nimport {\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  FILE_MAX_SIZE_BYTES,\n  FILE_RANGE_MAX_SIZE_BYTES,\n  DEFAULT_HIGH_LEVEL_CONCURRENCY\n} from \"./utils/constants\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Credential } from \"./credentials/Credential\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"./utils/BufferScheduler\";\nimport { Readable } from \"stream\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { readStreamToLocalFile, streamToBuffer, fsStat } from \"./utils/utils.node\";\nimport { FileSystemAttributes } from \"./FileSystemAttributes\";\nimport { getShareNameAndPathFromUrl } from \"./utils/utils.common\";\nimport { createSpan } from \"./utils/tracing\";\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { generateUuid } from \"@azure/core-http\";\n\n/**\n * Options to configure the {@link ShareFileClient.create} operation.\n *\n * @export\n * @interface FileCreateOptions\n */\nexport interface FileCreateOptions extends FileAndDirectoryCreateCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * File HTTP headers like Content-Type.\n   *\n   * @type {FileHttpHeaders}\n   * @memberof FileCreateOptions\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   *\n   * @type {Metadata}\n   * @memberof FileCreateOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileCreateOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\nexport interface FileProperties extends FileAndDirectorySetPropertiesCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileProperties\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * File HTTP headers like Content-Type.\n   *\n   * @type {FileHttpHeaders}\n   * @memberof FileProperties\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileProperties\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\nexport interface SetPropertiesResponse extends FileSetHTTPHeadersResponse { }\n\n/**\n * Options to configure the {@link ShareFileClient.delete} operation.\n *\n * @export\n * @interface FileDeleteOptions\n */\nexport interface FileDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileDeleteOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileDeleteOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure File - Download operations.\n *\n * See:\n * - {@link ShareFileClient.download}\n * - {@link ShareFileClient.downloadToFile}\n *\n * @export\n * @interface FileDownloadOptions\n */\nexport interface FileDownloadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional ShareFileClient.download() request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   *\n   * @type {number}\n   * @memberof FileDownloadOptions\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * When this header is set to true and\n   * specified together with the Range header, the service returns the MD5 hash\n   * for the range, as long as the range is less than or equal to 4 MB in size.\n   *\n   * @type {boolean}\n   * @memberof FileDownloadOptions\n   */\n  rangeGetContentMD5?: boolean;\n\n  /**\n   * Download progress updating event handler.\n   *\n   * @memberof FileDownloadOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileDownloadOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.uploadRange} operation.\n *\n * @export\n * @interface FileUploadRangeOptions\n */\nexport interface FileUploadRangeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * An MD5 hash of the content. This hash is\n   * used to verify the integrity of the data during transport. When the\n   * Content-MD5 header is specified, the File service compares the hash of the\n   * content that has arrived with the header value that was sent. If the two\n   * hashes do not match, the operation will fail with error code 400 (Bad\n   * Request).\n   *\n   * @type {Uint8Array}\n   * @memberof FileUploadRangeOptions\n   */\n  contentMD5?: Uint8Array;\n\n  /**\n   * Progress updating event handler.\n   *\n   * @memberof FileUploadRangeOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileUploadRangeOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.uploadRangeFromURL} operation.\n *\n * @export\n * @interface FileUploadRangeFromURLOptions\n */\nexport interface FileUploadRangeFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileUploadRangeFromURLOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\">Setting\n   * Timeouts for File Service Operations.</a>\n   */\n  timeoutInSeconds?: number;\n  /**\n   * Specify the crc64 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceConditions?: SourceModifiedAccessConditions;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileUploadRangeFromURLOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * The option is defined as parity to REST definition.\n * While it's not ready to be used now, considering Crc64 of source content is\n * not accessible.\n */\n// export interface IFileUploadRangeFromURLOptions extends CommonOptions {\n//   /**\n//    * Crc64 of the source content.\n//    *\n//    * @type {Uint8Array}\n//    * @memberof IFileUploadRangeFromURLOptions\n//    */\n//   sourceContentCrc64?: Uint8Array;\n\n//   /**\n//    * Source modified access condition.\n//    *\n//    * @type {SourceModifiedAccessConditions}\n//    * @memberof IFileUploadRangeFromURLOptions\n//    */\n//   sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n// }\n\n/**\n * Options to configure the {@link ShareFileClient.getRangeList} operation.\n *\n * @export\n * @interface FileGetRangeListOptions\n */\nexport interface FileGetRangeListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies the range of bytes over which to list ranges, inclusively.\n   *\n   * @type {Range}\n   * @memberof FileGetRangeListOptions\n   */\n  range?: Range;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileGetRangeListOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.getProperties} operation.\n *\n * @export\n * @interface FileGetPropertiesOptions\n */\nexport interface FileGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileGetPropertiesOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link ShareFileClient.getRangeList} operation.\n */\nexport type FileGetRangeListResponse = FileGetRangeListHeaders & {\n  /**\n   * Range list for an Azure file.\n   *\n   * @type {RangeModel[]}\n   */\n  rangeList: RangeModel[];\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: FileGetRangeListHeaders;\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: RangeModel[];\n  };\n};\n\n/**\n * Options to configure the {@link ShareFileClient.startCopyFromURL} operation.\n *\n * @export\n * @interface FileStartCopyOptions\n */\nexport interface FileStartCopyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileStartCopyOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   *\n   * @type {Metadata}\n   * @memberof FileStartCopyOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileStartCopyOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * If specified the permission (security descriptor) shall be set for the directory/file. This\n   * header can be used if Permission size is <= 8KB, else x-ms-file-permission-key header shall be\n   * used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and\n   * dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be\n   * specified.\n   * \n   * @type {string}\n   * @memberof FileStartCopyOptions\n   */\n  filePermission?: string;\n  /**\n   * Key of the permission to be set for the directory/file. Note: Only one of the\n   * x-ms-file-permission or x-ms-file-permission-key should be specified.\n   * \n   * @type {string}\n   * @memberof FileStartCopyOptions\n   */\n  filePermissionKey?: string;\n  /**\n   * SMB info.\n   * \n   * @type {CopyFileSmbInfo}\n   * @memberof FileStartCopyOptions\n   */\n  copyFileSmbInfo?: CopyFileSmbInfo;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.setMetadata} operation.\n *\n * @export\n * @interface FileSetMetadataOptions\n */\nexport interface FileSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileSetMetadataOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileSetMetadataOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.setHttpHeaders} operation.\n *\n * @export\n * @interface FileSetHttpHeadersOptions\n */\nexport interface FileSetHttpHeadersOptions\n  extends FileAndDirectorySetPropertiesCommonOptions,\n  CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileSetHttpHeadersOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileSetHttpHeadersOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.abortCopyFromURL} operation.\n *\n * @export\n * @interface FileAbortCopyFromURLOptions\n */\nexport interface FileAbortCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileAbortCopyFromURLOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileAbortCopyFromURLOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.resize} operation.\n *\n * @export\n * @interface FileResizeOptions\n */\nexport interface FileResizeOptions\n  extends FileAndDirectorySetPropertiesCommonOptions,\n  CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileResizeOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileResizeOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.clearRange} operation.\n *\n * @export\n * @interface FileClearRangeOptions\n */\nexport interface FileClearRangeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileClearRangeOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileClearRangeOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure File - List Handles Segment operations.\n *\n * See:\n * - {@link ShareFileClient.listHandlesSegment}\n * - {@link ShareFileClient.iterateHandleSegments}\n * - {@link ShareFileClient.listHandleItems}\n *\n * @export\n * @interface FileListHandlesSegmentOptions\n */\nexport interface FileListHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileClearRangeOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of entries to return. If the request does not specify maxResults,\n   * or specifies a value greater than 5,000, the server will return up to 5,000 items.\n   *\n   * @type {number}\n   * @memberof FileListHandlesSegmentOptions\n   */\n  maxPageSize?: number;\n}\n\nexport interface FileListHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileClearRangeOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure File - Force Close Handles operations.\n *\n * See:\n * - {@link ShareFileClient.forceCloseHandlesSegment}\n * - {@link ShareFileClient.forceCloseAllHandles}\n * - {@link ShareFileClient.forceCloseHandle}\n *\n * @export\n * @interface FileForceCloseHandlesOptions\n */\nexport interface FileForceCloseHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileForceCloseHandlesOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Additional response header values for close handles request.\n */\nexport interface FileCloseHandlesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the File service used to execute the request.\n   */\n  version?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A string describing next handle to be closed. It is returned when more handles need to be\n   * closed to complete the request.\n   */\n  marker?: string;\n}\n\n/**\n * Response type for {@link ShareFileClient.forceCloseHandle}.\n */\nexport type FileForceCloseHandlesResponse = CloseHandlesInfo &\n  FileCloseHandlesHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: FileForceCloseHandlesHeaders;\n    };\n  };\n\n/**\n * Option interface for ShareFileClient.uploadStream().\n *\n * @export\n * @interface FileUploadStreamOptions\n */\nexport interface FileUploadStreamOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileUploadStreamOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Azure File HTTP Headers.\n   *\n   * @type {FileHttpHeaders}\n   * @memberof FileUploadStreamOptions\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * Metadata of the Azure file.\n   *\n   * @type {Metadata}\n   * @memberof FileUploadStreamOptions\n   */\n  metadata?: Metadata;\n\n  /**\n   * Progress updater.\n   *\n   * @memberof FileUploadStreamOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileUploadStreamOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Option interface for File - Upload operations\n *\n * See:\n * - {@link ShareFileClient.uploadFile}\n * - {@link ShareFileClient.uploadSeekableStream}\n *\n * @export\n * @interface FileParallelUploadOptions\n */\nexport interface FileParallelUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileParallelUploadOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * RangeSize specifies the range size to use in each parallel upload,\n   * the default (and maximum size) is FILE_RANGE_MAX_SIZE_BYTES.\n   *\n   * @type {number}\n   * @memberof FileParallelUploadOptions\n   */\n  rangeSize?: number;\n\n  /**\n   * Progress updater.\n   *\n   * @memberof FileParallelUploadOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * File HTTP Headers.\n   *\n   * @type {FileHttpHeaders}\n   * @memberof FileParallelUploadOptions\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * Metadata of an Azure file.\n   *\n   * @type {Metadata}\n   * @memberof FileParallelUploadOptions\n   */\n  metadata?: Metadata;\n\n  /**\n   * Concurrency indicates the maximum number of ranges to upload in parallel.\n   * If not provided, 5 concurrency will be used by default.\n   *\n   * @type {number}\n   * @memberof FileParallelUploadOptions\n   */\n  concurrency?: number;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileParallelUploadOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Option interface for the {@link ShareFileClient.downloadToBuffer} operation.\n *\n * @export\n * @interface FileDownloadToBufferOptions\n */\nexport interface FileDownloadToBufferOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof FileDownloadToBufferOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * When downloading Azure files, download method will try to split large file into small ranges.\n   * Every small range will be downloaded via a separte request.\n   * This option defines size data every small request trying to download.\n   * Must be > 0, will use the default value if undefined,\n   *\n   * @type {number}\n   * @memberof FileDownloadToBufferOptions\n   */\n  rangeSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original range download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional ShareFileClient.download() request will be made\n   * from the broken point, until the requested range has been successfully downloaded or\n   * maxRetryRequestsPerRange is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   *\n   * @type {number}\n   * @memberof FileDownloadToBufferOptions\n   */\n  maxRetryRequestsPerRange?: number;\n\n  /**\n   * Progress updater.\n   *\n   * @memberof FileDownloadToBufferOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Concurrency indicates the maximum number of ranges to download in parallel.\n   * If not provided, 5 concurrency will be used by default.\n   *\n   * @type {number}\n   * @memberof FileDownloadToBufferOptions\n   */\n  concurrency?: number;\n  /**\n   * Lease access conditions.\n   * \n   * @type {LeaseAccessConditions}\n   * @memberof FileDownloadToBufferOptions\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * A ShareFileClient represents a URL to an Azure Storage file.\n *\n * @export\n * @class ShareFileClient\n */\nexport class ShareFileClient extends StorageClient {\n  /**\n   * context provided by protocol layer.\n   *\n   * @private\n   * @type {File}\n   * @memberof ShareFileClient\n   */\n  private context: File;\n\n  private _shareName: string;\n  private _path: string;\n  private _name: string;\n\n  /**\n   * The share name corresponding to this file client\n   *\n   * @type {string}\n   * @memberof ShareFileClient\n   */\n  public get shareName(): string {\n    return this._shareName;\n  }\n\n  /**\n   * The full path of the file\n   *\n   * @type {string}\n   * @memberof ShareFileClient\n   */\n  public get path(): string {\n    return this._path;\n  }\n\n  /**\n   * The name of the file\n   *\n   * @type {string}\n   * @memberof ShareFileClient\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Creates an instance of ShareFileClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage file, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a file.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a file or directory name includes %, file or directory name must be encoded in the URL.\n   *                     Such as a file named \"myfile%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydirectory/myfile%25\".\n   * @param {Credential} [credential] Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ShareFileClient\n   */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareFileClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage file, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a file.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a file or directory name includes %, file or directory name must be encoded in the URL.\n   *                     Such as a file named \"myfile%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydirectory/myfile%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof ShareFileClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    ({\n      baseName: this._name,\n      shareName: this._shareName,\n      path: this._path\n    } = getShareNameAndPathFromUrl(this.url));\n    this.context = new File(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new file or replaces a file. Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param {number} size Specifies the maximum size in bytes for the file, up to 1 TB.\n   * @param {FileCreateOptions} [options] Options to File Create operation.\n   * @returns {Promise<FileCreateResponse>} Response data for the File Create  operation.\n   * @memberof ShareFileClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * // Create the file\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * // Then upload data to the file\n   * await fileClient.uploadRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  public async create(size: number, options: FileCreateOptions = {}): Promise<FileCreateResponse> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-create\", options.tracingOptions);\n    try {\n      if (size < 0 || size > FILE_MAX_SIZE_BYTES) {\n        throw new RangeError(`File size must >= 0 and < ${FILE_MAX_SIZE_BYTES}.`);\n      }\n      options = validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(options);\n\n      if (!options.fileAttributes) {\n        // Note: It would be Archive in service side if None is set.\n        const attributes: FileSystemAttributes = new FileSystemAttributes();\n        attributes.none = true;\n        options.fileAttributes = attributes;\n      }\n\n      options.fileHttpHeaders = options.fileHttpHeaders || {};\n\n      return await this.context.create(\n        size,\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileHttpHeaders: options.fileHttpHeaders,\n          metadata: options.metadata,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reads or downloads a file from the system, including its metadata and properties.\n   *\n   * * In Node.js, data returns in a Readable stream `readableStreamBody`\n   * * In browsers, data returns in a promise `contentAsBlob`\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file\n   *\n   * @param {number} [offset] From which position of the file to download, >= 0\n   * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n   * @param {FileDownloadOptions} [options] Options to File Download operation.\n   * @returns {Promise<FileDownloadResponse>} Response data for the File Download operation.\n   * @memberof ShareFileClient\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Download a file to a string\n   * const downloadFileResponse = await fileClient.download();\n   * console.log(\n   *   \"Downloaded file content:\",\n   *   await streamToString(downloadFileResponse.readableStreamBody)}\n   * );\n   *\n   * // A helper method used to read a Node.js readable stream into string\n   * async function streamToString(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(data.toString());\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(chunks.join(\"\"));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * Example usage (browsers):\n   *\n   * ```js\n   * // Download a file to a string\n   * const downloadFileResponse = await fileClient.download(0);\n   * console.log(\n   *   \"Downloaded file content:\",\n   *   await blobToString(await downloadFileResponse.blobBody)}\n   * );\n   *\n   * // A helper method used to convert a browser Blob into string.\n   * export async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: FileDownloadOptions = {}\n  ): Promise<FileDownloadResponseModel> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-download\", options.tracingOptions);\n    try {\n      if (options.rangeGetContentMD5 && offset === 0 && count === undefined) {\n        throw new RangeError(`rangeGetContentMD5 only works with partial data downloading`);\n      }\n\n      const downloadFullFile = offset === 0 && !count;\n      const res = await this.context.download({\n        abortSignal: options.abortSignal,\n        onDownloadProgress: isNode ? undefined : options.onProgress, // for Node.js, progress is reported by RetriableReadableStream\n        range: downloadFullFile ? undefined : rangeToString({ offset, count }),\n        rangeGetContentMD5: options.rangeGetContentMD5,\n        leaseAccessConditions: options.leaseAccessConditions,\n        spanOptions\n      });\n\n      // Return browser response immediately\n      if (!isNode) {\n        return res;\n      }\n\n      // We support retrying when download stream unexpected ends in Node.js runtime\n      // Following code shouldn't be bundled into browser build, however some\n      // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n      // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n      // The config is in package.json \"browser\" field\n      if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n        // TODO: Default value or make it a required parameter?\n        options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n      }\n\n      if (res.contentLength === undefined) {\n        throw new RangeError(`File download response doesn't contain valid content length header`);\n      }\n\n      return new FileDownloadResponse(\n        res,\n        async (start: number): Promise<NodeJS.ReadableStream> => {\n          const updatedOptions: FileDownloadOptionalParams = {\n            range: rangeToString({\n              count: offset + res.contentLength! - start,\n              offset: start\n            })\n          };\n\n          // Debug purpose only\n          // console.log(\n          //   `Read from internal stream, range: ${\n          //     updatedOptions.range\n          //   }, options: ${JSON.stringify(updatedOptions)}`\n          // );\n\n          return (\n            await this.context.download({\n              abortSignal: options.abortSignal,\n              leaseAccessConditions: options.leaseAccessConditions,\n              ...updatedOptions,\n              spanOptions\n            })\n          ).readableStreamBody!;\n        },\n        offset,\n        res.contentLength!,\n        {\n          abortSignal: options.abortSignal,\n          maxRetryRequests: options.maxRetryRequests,\n          onProgress: options.onProgress\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the file. It does not return the content of the file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-properties\n   *\n   * @param {FileGetPropertiesOptions} [options] Options to File Get Properties operation.\n   * @returns {Promise<FileGetPropertiesResponse>} Response data for the File Get Properties operation.\n   * @memberof ShareFileClient\n   */\n  public async getProperties(\n    options: FileGetPropertiesOptions = {}\n  ): Promise<FileGetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-getProperties\",\n      options.tracingOptions\n    );\n    try {\n      return this.context.getProperties({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties on the file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param {FileProperties} [properties] File properties. For file HTTP headers(e.g. Content-Type),\n   *                                       if no values are provided, existing HTTP headers will be removed.\n   *                                       For other file properties(e.g. fileAttributes), if no values are provided,\n   *                                       existing values will be preserved.\n   * @returns {Promise<SetPropertiesResponse>}\n   * @memberof ShareFileClient\n   */\n  public async setProperties(properties: FileProperties = {}): Promise<SetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-setProperties\",\n      properties.tracingOptions\n    );\n    try {\n      properties = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(properties);\n\n      properties.fileHttpHeaders = properties.fileHttpHeaders || {};\n\n      return await this.context.setHTTPHeaders(\n        fileAttributesToString(properties.fileAttributes!),\n        fileCreationTimeToString(properties.creationTime!),\n        fileLastWriteTimeToString(properties.lastWriteTime!),\n        {\n          abortSignal: properties.abortSignal,\n          fileHttpHeaders: properties.fileHttpHeaders,\n          filePermission: properties.filePermission,\n          filePermissionKey: properties.filePermissionKey,\n          leaseAccessConditions: properties.leaseAccessConditions,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the file from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code SharingViolation\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400 (InvalidQueryParameterValue)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param {FileDeleteOptions} [options] Options to File Delete operation.\n   * @returns {Promise<FileDeleteResponse>} Response data for the File Delete operation.\n   * @memberof ShareFileClient\n   */\n  public async delete(options: FileDeleteOptions = {}): Promise<FileDeleteResponse> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-delete\", options.tracingOptions);\n    try {\n      return await this.context.deleteMethod({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets HTTP headers on the file.\n   *\n   * If no option provided, or no value provided for the file HTTP headers in the options,\n   * these file HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param {fileHttpHeaders} [FileHttpHeaders] File HTTP headers like Content-Type.\n   *                                             Provide undefined will remove existing HTTP headers.\n   * @param {FileSetHttpHeadersOptions} [options] Options to File Set HTTP Headers operation.\n   * @returns {Promise<FileSetHTTPHeadersResponse>} Response data for the File Set HTTP Headers operation.\n   * @memberof ShareFileClient\n   */\n  public async setHttpHeaders(\n    fileHttpHeaders: FileHttpHeaders = {},\n    options: FileSetHttpHeadersOptions = {}\n  ): Promise<FileSetHTTPHeadersResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-setHTTPHeaders\",\n      options.tracingOptions\n    );\n    try {\n      // FileAttributes, filePermission, createTime, lastWriteTime will all be preserved\n      options = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(options);\n      return await this.context.setHTTPHeaders(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileHttpHeaders,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Resize file.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param {number} length Resizes a file to the specified size in bytes.\n   *                        If the specified byte value is less than the current size of the file,\n   *                        then all ranges above the specified byte value are cleared.\n   * @param {FileResizeOptions} [options] Options to File Resize operation.\n   * @returns {Promise<FileSetHTTPHeadersResponse>} Response data for the File Set HTTP Headers operation.\n   * @memberof ShareFileClient\n   */\n  public async resize(\n    length: number,\n    options: FileResizeOptions = {}\n  ): Promise<FileSetHTTPHeadersResponse> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-resize\", options.tracingOptions);\n    try {\n      if (length < 0) {\n        throw new RangeError(`Size cannot less than 0 when resizing file.`);\n      }\n      // FileAttributes, filePermission, createTime, lastWriteTime will all be preserved.\n      options = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(options);\n\n      return await this.context.setHTTPHeaders(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileContentLength: length,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates user-defined metadata for the specified file.\n   *\n   * If no metadata defined in the option parameter, the file\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-metadata\n   *\n   * @param {Metadata} [metadata] If no metadata provided, all existing directory metadata will be removed\n   * @param {FileSetMetadataOptions} [options] Options to File Set Metadata operation.\n   * @returns {Promise<FileSetMetadataResponse>} Response data for the File Set Metadata operation.\n   * @memberof ShareFileClient\n   */\n  public async setMetadata(\n    metadata: Metadata = {},\n    options: FileSetMetadataOptions = {}\n  ): Promise<FileSetMetadataResponse> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-setMetadata\", options.tracingOptions);\n    try {\n      return await this.context.setMetadata({\n        abortSignal: options.abortSignal,\n        metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Upload a range of bytes to a file. Both the start and count of the\n   * range must be specified. The range can be up to 4 MB in size.\n   *\n   * @param {HttpRequestBody} body Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param {number} offset Offset position of the destination Azure File to upload.\n   * @param {number} contentLength Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param {FileUploadRangeOptions} [options={}] Options to File Upload Range operation.\n   * @returns {Promise<FileUploadRangeResponse>} Response data for the File Upload Range operation.\n   * @memberof ShareFileClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * // Create the file\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * // Then upload data to the file\n   * await fileClient.uploadRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  public async uploadRange(\n    body: HttpRequestBody,\n    offset: number,\n    contentLength: number,\n    options: FileUploadRangeOptions = {}\n  ): Promise<FileUploadRangeResponse> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-uploadRange\", options.tracingOptions);\n    try {\n      if (offset < 0) {\n        throw new RangeError(`offset must be >= 0`);\n      }\n\n      if (contentLength <= 0 || contentLength > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`contentLength must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      if (contentLength > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`offset must be < ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      return await this.context.uploadRange(\n        rangeToString({ count: contentLength, offset }),\n        \"update\",\n        contentLength,\n        {\n          abortSignal: options.abortSignal,\n          contentMD5: options.contentMD5,\n          onUploadProgress: options.onProgress,\n          body: body,\n          spanOptions,\n          leaseAccessConditions: options.leaseAccessConditions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Upload a range of bytes to a file where the contents are read from a another file's URL.\n   * The range can be up to 4 MB in size.\n   *\n   * @param {string} sourceURL Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication.\n   * @param {number} sourceOffset The source offset to copy from. Pass 0 to copy from the beginning of source file.\n   * @param {number} destOffset Offset of destination file.\n   * @param {number} count Number of bytes to be uploaded from source file.\n   * @param {FileUploadRangeFromURLOptions} [options={}] Options to configure File - Upload Range from URL operation.\n   * @returns {Promise<FileUploadRangeFromURLResponse>}\n   * @memberof FileURL\n   */\n  public async uploadRangeFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: FileUploadRangeFromURLOptions = {}\n  ): Promise<FileUploadRangeFromURLResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-uploadRangeFromURL\",\n      options.tracingOptions\n    );\n    try {\n      if (sourceOffset < 0 || destOffset < 0) {\n        throw new RangeError(`sourceOffset and destOffset must be >= 0`);\n      }\n\n      if (count <= 0 || count > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`count must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      return await this.context.uploadRangeFromURL(\n        rangeToString({ offset: destOffset, count }),\n        sourceURL,\n        0,\n        {\n          abortSignal: options.abortSignal,\n          sourceRange: rangeToString({ offset: sourceOffset, count }),\n          sourceModifiedAccessConditions: options.sourceConditions,\n          ...options,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n  /**\n   * Clears the specified range and\n   * releases the space used in storage for that range.\n   *\n   * @param {number} offset\n   * @param {number} contentLength\n   * @param {FileClearRangeOptions} [options] Options to File Clear Range operation.\n   * @returns {Promise<FileUploadRangeResponse>}\n   * @memberof ShareFileClient\n   */\n  public async clearRange(\n    offset: number,\n    contentLength: number,\n    options: FileClearRangeOptions = {}\n  ): Promise<FileUploadRangeResponse> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-clearRange\", options.tracingOptions);\n    try {\n      if (offset < 0 || contentLength <= 0) {\n        throw new RangeError(`offset must >= 0 and contentLength must be > 0`);\n      }\n\n      return await this.context.uploadRange(\n        rangeToString({ count: contentLength, offset }),\n        \"clear\",\n        0,\n        {\n          abortSignal: options.abortSignal,\n          spanOptions,\n          leaseAccessConditions: options.leaseAccessConditions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of valid ranges for a file.\n   *\n   * @param {FileGetRangeListOptions} [options] Options to File Get range List operation.\n   * @returns {Promise<FileGetRangeListResponse>}\n   * @memberof ShareFileClient\n   */\n  public async getRangeList(\n    options: FileGetRangeListOptions = {}\n  ): Promise<FileGetRangeListResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-getRangeList\",\n      options.tracingOptions\n    );\n    try {\n      const originalResponse = await this.context.getRangeList({\n        abortSignal: options.abortSignal,\n        range: options.range ? rangeToString(options.range) : undefined,\n        leaseAccessConditions: options.leaseAccessConditions,\n        spanOptions\n      });\n      return {\n        _response: originalResponse._response,\n        date: originalResponse.date,\n        etag: originalResponse.etag,\n        errorCode: originalResponse.errorCode,\n        fileContentLength: originalResponse.fileContentLength,\n        lastModified: originalResponse.lastModified,\n        rangeList: originalResponse.filter(() => {\n          return true;\n        }),\n        requestId: originalResponse.requestId,\n        version: originalResponse.version\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Copies a blob or file to a destination file within the storage account.\n   *\n   * @param {string} copySource Specifies the URL of the source file or blob, up to 2 KB in length.\n   * To copy a file to another file within the same storage account, you may use Shared Key to\n   * authenticate the source file. If you are copying a file from another storage account, or if you\n   * are copying a blob from the same storage account or another storage account, then you must\n   * authenticate the source file or blob using a shared access signature. If the source is a public\n   * blob, no authentication is required to perform the copy operation. A file in a share snapshot\n   * can also be specified as a copy source.\n   * @param {FileStartCopyOptions} [options] Options to File Start Copy operation.\n   * @returns {Promise<FileStartCopyResponse>}\n   * @memberof ShareFileClient\n   */\n  public async startCopyFromURL(\n    copySource: string,\n    options: FileStartCopyOptions = {}\n  ): Promise<FileStartCopyResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-startCopyFromURL\",\n      options.tracingOptions\n    );\n    try {\n      return await this.context.startCopy(copySource, {\n        abortSignal: options.abortSignal,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        filePermission: options.filePermission,\n        filePermissionKey: options.filePermissionKey,\n        copyFileSmbInfo: options.copyFileSmbInfo,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Aborts a pending Copy File operation, and leaves a destination file with zero length and full\n   * metadata.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-file\n   *\n   * @param {string} copyId Id of the Copy File operation to abort.\n   * @param {FileAbortCopyFromURLOptions} [options] Options to File Abort Copy From URL operation.\n   * @returns {Promise<FileAbortCopyResponse>}\n   * @memberof ShareFileClient\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: FileAbortCopyFromURLOptions = {}\n  ): Promise<FileAbortCopyResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-abortCopyFromURL\",\n      options.tracingOptions\n    );\n    try {\n      return await this.context.abortCopy(copyId, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  // High Level functions\n\n  /**\n   * Uploads a Buffer(Node)/Blob/ArrayBuffer/ArrayBufferView to an Azure File.\n   *\n   * @param {Buffer | Blob | ArrayBuffer | ArrayBufferView} data Buffer(Node), Blob, ArrayBuffer or ArrayBufferView\n   * @param {FileParallelUploadOptions} [options]\n   * @returns {Promise<void>}\n   */\n  public async uploadData(\n    data: Buffer | Blob | ArrayBuffer | ArrayBufferView,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-uploadData\", options.tracingOptions);\n    try {\n      if (isNode && data instanceof Buffer) {\n        return this.uploadBuffer(\n          (offset, count) => data.slice(offset, offset + count),\n          data.byteLength,\n          {\n            ...options,\n            tracingOptions: { ...options!.tracingOptions, spanOptions }\n          }\n        );\n      } else {\n        const browserBlob = new Blob([data]);\n        return this.uploadSeekableBlob(\n          (offset: number, size: number): Blob => {\n            return browserBlob.slice(offset, offset + size);\n          },\n          browserBlob.size,\n          { ...options, tracingOptions: { ...options!.tracingOptions, spanOptions } }\n        );\n      }\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob object to an Azure file. Requires a blobFactory as the data source,\n   * which need to return a Blob object with the offset and size provided.\n   *\n   * @param {(offset: number, size: number) => Blob} blobFactory\n   * @param {number} size\n   * @param {FileParallelUploadOptions} [options]\n   * @returns {Promise<void>}\n   */\n  async uploadSeekableBlob(\n    blobFactory: (offset: number, size: number) => Blob,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-UploadSeekableBlob\",\n      options.tracingOptions\n    );\n    try {\n      if (!options.rangeSize) {\n        options.rangeSize = FILE_RANGE_MAX_SIZE_BYTES;\n      }\n      if (options.rangeSize < 0 || options.rangeSize > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`options.rangeSize must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES}`);\n      }\n\n      if (!options.fileHttpHeaders) {\n        options.fileHttpHeaders = {};\n      }\n\n      if (!options.concurrency) {\n        options.concurrency = DEFAULT_HIGH_LEVEL_CONCURRENCY;\n      }\n      if (options.concurrency < 0) {\n        throw new RangeError(`options.concurrency cannot less than 0.`);\n      }\n\n      // Create the file\n      await this.create(size, {\n        abortSignal: options.abortSignal,\n        fileHttpHeaders: options.fileHttpHeaders,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n\n      const numBlocks: number = Math.floor((size - 1) / options.rangeSize) + 1;\n      let transferProgress: number = 0;\n\n      const batch = new Batch(options.concurrency);\n      for (let i = 0; i < numBlocks; i++) {\n        batch.addOperation(\n          async (): Promise<any> => {\n            const start = options.rangeSize! * i;\n            const end = i === numBlocks - 1 ? size : start + options.rangeSize!;\n            const contentLength = end - start;\n            await this.uploadRange(blobFactory(start, contentLength), start, contentLength, {\n              abortSignal: options.abortSignal,\n              leaseAccessConditions: options.leaseAccessConditions,\n              tracingOptions: { ...options!.tracingOptions, spanOptions }\n            });\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            // TODO: Hook with convenience layer progress event in finer level\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          }\n        );\n      }\n      return await batch.do();\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a local file to an Azure file.\n   *\n   * @param {string} filePath Full path of local file\n   * @param {ShareFileClient} fileClient ShareFileClient\n   * @param {FileParallelUploadOptions} [options]\n   * @returns {(Promise<void>)}\n   */\n  public async uploadFile(\n    filePath: string,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, spanOptions } = createSpan(\"ShareFileClient-uploadFile\", options.tracingOptions);\n    try {\n      const size = (await fsStat(filePath)).size;\n      return await this.uploadResetableStream(\n        (offset, count) =>\n          fs.createReadStream(filePath, {\n            autoClose: true,\n            end: count ? offset + count - 1 : Infinity,\n            start: offset\n          }),\n        size,\n        { ...options, tracingOptions: { ...options!.tracingOptions, spanOptions } }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Accepts a Node.js Readable stream factory, and uploads in blocks to an Azure File.\n   * The Readable stream factory must returns a Node.js Readable stream starting from the offset defined. The offset\n   * is the offset in the Azure file to be uploaded.\n   *\n   * @export\n   * @param {(offset: number) => NodeJS.ReadableStream} streamFactory Returns a Node.js Readable stream starting\n   *                                                                  from the offset defined\n   * @param {number} size Size of the Azure file\n   * @param {ShareFileClient} fileClient ShareFileClient\n   * @param {FileParallelUploadOptions} [options]\n   * @returns {(Promise<void>)}\n   */\n  async uploadResetableStream(\n    streamFactory: (offset: number, count?: number) => NodeJS.ReadableStream,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-uploadResetableStream\",\n      options.tracingOptions\n    );\n    try {\n      if (!options.rangeSize) {\n        options.rangeSize = FILE_RANGE_MAX_SIZE_BYTES;\n      }\n      if (options.rangeSize < 0 || options.rangeSize > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`options.rangeSize must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES}`);\n      }\n\n      if (!options.fileHttpHeaders) {\n        options.fileHttpHeaders = {};\n      }\n\n      if (!options.concurrency) {\n        options.concurrency = DEFAULT_HIGH_LEVEL_CONCURRENCY;\n      }\n      if (options.concurrency < 0) {\n        throw new RangeError(`options.concurrency cannot less than 0.`);\n      }\n\n      // Create the file\n      await this.create(size, {\n        abortSignal: options.abortSignal,\n        fileHttpHeaders: options.fileHttpHeaders,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n\n      const numBlocks: number = Math.floor((size - 1) / options.rangeSize) + 1;\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n\n      for (let i = 0; i < numBlocks; i++) {\n        batch.addOperation(\n          async (): Promise<any> => {\n            const start = options.rangeSize! * i;\n            const end = i === numBlocks - 1 ? size : start + options.rangeSize!;\n            const contentLength = end - start;\n            await this.uploadRange(\n              () => streamFactory(start, contentLength),\n              start,\n              contentLength,\n              {\n                abortSignal: options.abortSignal,\n                leaseAccessConditions: options.leaseAccessConditions,\n                tracingOptions: { ...options!.tracingOptions, spanOptions }\n              }\n            );\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          }\n        );\n      }\n      return await batch.do();\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * @export\n   * @param {(offset: number, count: number) => Buffer} bufferChunk Returns a Node.js Buffer chunk starting\n   *                                                                  from the offset defined till the count\n   * @param {number} size Size of the Azure file\n   * @param {ShareFileClient} fileClient ShareFileClient\n   * @param {FileParallelUploadOptions} [options]\n   * @returns {(Promise<void>)}\n   */\n  private async uploadBuffer(\n    bufferChunk: (offset: number, count: number) => Buffer,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-uploadBuffer\",\n      options.tracingOptions\n    );\n    try {\n      if (!options.rangeSize) {\n        options.rangeSize = FILE_RANGE_MAX_SIZE_BYTES;\n      }\n      if (options.rangeSize < 0 || options.rangeSize > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`options.rangeSize must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES}`);\n      }\n\n      if (!options.fileHttpHeaders) {\n        options.fileHttpHeaders = {};\n      }\n\n      if (!options.concurrency) {\n        options.concurrency = DEFAULT_HIGH_LEVEL_CONCURRENCY;\n      }\n      if (options.concurrency < 0) {\n        throw new RangeError(`options.concurrency cannot less than 0.`);\n      }\n\n      // Create the file\n      await this.create(size, {\n        abortSignal: options.abortSignal,\n        fileHttpHeaders: options.fileHttpHeaders,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n\n      const numBlocks: number = Math.floor((size - 1) / options.rangeSize) + 1;\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n\n      for (let i = 0; i < numBlocks; i++) {\n        batch.addOperation(\n          async (): Promise<any> => {\n            const start = options.rangeSize! * i;\n            const end = i === numBlocks - 1 ? size : start + options.rangeSize!;\n            const contentLength = end - start;\n            await this.uploadRange(bufferChunk(start, contentLength), start, contentLength, {\n              abortSignal: options.abortSignal,\n              leaseAccessConditions: options.leaseAccessConditions,\n              tracingOptions: { ...options!.tracingOptions, spanOptions }\n            });\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          }\n        );\n      }\n      return await batch.do();\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure file in parallel to a buffer.\n   * Offset and count are optional, pass 0 for both to download the entire file.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For files larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param {Buffer} buffer Buffer to be fill, must have length larger than count\n   * @param {number} offset From which position of the Azure File to download\n   * @param {number} [count] How much data to be downloaded. Will download to the end when passing undefined\n   * @param {FileDownloadToBufferOptions} [options]\n   * @returns {Promise<Buffer>}\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset?: number,\n    count?: number,\n    options?: FileDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME\n   *\n   * Downloads an Azure file in parallel to a buffer.\n   * Offset and count are optional, pass 0 for both to download the entire file\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For files larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param {number} offset From which position of the Azure file to download\n   * @param {number} [count] How much data to be downloaded. Will download to the end when passing undefined\n   * @param {FileDownloadToBufferOptions} [options]\n   * @returns {Promise<Buffer>}\n   */\n  public async downloadToBuffer(\n    offset?: number,\n    count?: number,\n    options?: FileDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  public async downloadToBuffer(\n    bufferOrOffset?: Buffer | number,\n    offsetOrCount?: number,\n    countOrOptions?: FileDownloadToBufferOptions | number,\n    optOptions: FileDownloadToBufferOptions = {}\n  ): Promise<Buffer> {\n    let buffer: Buffer | undefined = undefined;\n    let offset: number;\n    let count: number;\n    let options: FileDownloadToBufferOptions = optOptions;\n\n    if (bufferOrOffset instanceof Buffer) {\n      buffer = bufferOrOffset;\n      offset = offsetOrCount || 0;\n      count = typeof countOrOptions === \"number\" ? countOrOptions : 0;\n    } else {\n      offset = typeof bufferOrOffset === \"number\" ? bufferOrOffset : 0;\n      count = typeof offsetOrCount === \"number\" ? offsetOrCount : 0;\n      options = (countOrOptions as FileDownloadToBufferOptions) || {};\n    }\n\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-downloadToBuffer\",\n      options.tracingOptions\n    );\n\n    try {\n      if (!options.rangeSize) {\n        options.rangeSize = FILE_RANGE_MAX_SIZE_BYTES;\n      }\n      if (options.rangeSize < 0) {\n        throw new RangeError(\"rangeSize option must be > 0\");\n      }\n\n      if (offset < 0) {\n        throw new RangeError(\"offset option must be >= 0\");\n      }\n\n      if (count && count <= 0) {\n        throw new RangeError(\"count option must be > 0\");\n      }\n\n      if (!options.concurrency) {\n        options.concurrency = DEFAULT_HIGH_LEVEL_CONCURRENCY;\n      }\n      if (options.concurrency < 0) {\n        throw new RangeError(`options.concurrency cannot less than 0.`);\n      }\n\n      // Customer doesn't specify length, get it\n      if (!count) {\n        const response = await this.getProperties({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.leaseAccessConditions,\n          tracingOptions: { ...options!.tracingOptions, spanOptions }\n        });\n        count = response.contentLength! - offset;\n        if (count < 0) {\n          throw new RangeError(\n            `offset ${offset} shouldn't be larger than file size ${response.contentLength!}`\n          );\n        }\n      }\n\n      if (!buffer) {\n        try {\n          buffer = Buffer.alloc(count);\n        } catch (error) {\n          throw new Error(\n            `Unable to allocate a buffer of size: ${count} bytes. Please try passing your own Buffer to ` +\n            'the \"downloadToBuffer method or try using other moethods like \"download\" or \"downloadToFile\".' +\n            `\\t ${error.message}`\n          );\n        }\n      }\n\n      if (buffer.length < count) {\n        throw new RangeError(\n          `The buffer's size should be equal to or larger than the request count of bytes: ${count}`\n        );\n      }\n\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n      for (let off = offset; off < offset + count; off = off + options.rangeSize) {\n        batch.addOperation(async () => {\n          // Exclusive chunk end position\n          let chunkEnd = offset + count!;\n          if (off + options.rangeSize! < chunkEnd) {\n            chunkEnd = off + options.rangeSize!;\n          }\n          const response = await this.download(off, chunkEnd - off, {\n            abortSignal: options.abortSignal,\n            maxRetryRequests: options.maxRetryRequestsPerRange,\n            leaseAccessConditions: options.leaseAccessConditions,\n            tracingOptions: { ...options!.tracingOptions, spanOptions }\n          });\n          const stream = response.readableStreamBody!;\n          await streamToBuffer(stream, buffer!, off - offset, chunkEnd - offset);\n          // Update progress after block is downloaded, in case of block trying\n          // Could provide finer grained progress updating inside HTTP requests,\n          // only if convenience layer download try is enabled\n          transferProgress += chunkEnd - off;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        });\n      }\n      await batch.do();\n      return buffer;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a Node.js Readable stream into an Azure file.\n   * This method will try to create an Azure, then starts uploading chunk by chunk.\n   * Size of chunk is defined by `bufferSize` parameter.\n   * Please make sure potential size of stream doesn't exceed file size.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *   parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param {Readable} stream Node.js Readable stream. Must be less or equal than file size.\n   * @param {number} size Size of file to be created. Maxium size allowed is 1TB.\n   *                      If this value is larger than stream size, there will be empty bytes in file tail.\n   * @param {number} bufferSize Size of every buffer allocated in bytes, also the chunk/range size during\n   *                            the uploaded file. Size must be > 0 and <= 4 * 1024 * 1024 (4MB)\n   * @param {number} maxBuffers Max buffers will allocate during uploading, positive correlation\n   *                            with max uploading concurrency\n   * @param {FileUploadStreamOptions} [options]\n   * @returns {Promise<void>}\n   */\n  public async uploadStream(\n    stream: Readable,\n    size: number,\n    bufferSize: number,\n    maxBuffers: number,\n    options: FileUploadStreamOptions = {}\n  ): Promise<void> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-uploadStream\",\n      options.tracingOptions\n    );\n    try {\n      if (!options.fileHttpHeaders) {\n        options.fileHttpHeaders = {};\n      }\n\n      if (bufferSize <= 0 || bufferSize > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`bufferSize must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES}`);\n      }\n\n      if (maxBuffers < 0) {\n        throw new RangeError(`maxBuffers must be > 0.`);\n      }\n\n      // Create the file\n      await this.create(size, {\n        abortSignal: options.abortSignal,\n        fileHttpHeaders: options.fileHttpHeaders,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n\n      let transferProgress: number = 0;\n      const scheduler = new BufferScheduler(\n        stream,\n        bufferSize,\n        maxBuffers,\n        async (buffer: Buffer, offset?: number) => {\n          if (transferProgress + buffer.length > size) {\n            throw new RangeError(\n              `Stream size is larger than file size ${size} bytes, uploading failed. ` +\n              `Please make sure stream length is less or equal than file size.`\n            );\n          }\n\n          await this.uploadRange(buffer, offset!, buffer.length, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.leaseAccessConditions,\n            tracingOptions: { ...options!.tracingOptions, spanOptions }\n          });\n\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          transferProgress += buffer.length;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        },\n        // Concurrency should set a smaller value than maxBuffers, which is helpful to\n        // reduce the possibility when a outgoing handler waits for stream data, in\n        // this situation, outgoing handlers are blocked.\n        // Outgoing queue shouldn't be empty.\n        Math.ceil((maxBuffers / 4) * 3)\n      );\n      return await scheduler.do();\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param {string} filePath\n   * @param {number} [offset] From which position of the block blob to download.\n   * @param {number} [count] How much data to be downloaded. Will download to the end when passing undefined.\n   * @param {BlobDownloadOptions} [options] Options to Blob download options.\n   * @returns {Promise<FileDownloadResponse>} The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   * @memberof BlobClient\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options: FileDownloadOptions = {}\n  ): Promise<FileDownloadResponseModel> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-downloadToFile\",\n      options.tracingOptions\n    );\n    try {\n      const response = await this.download(offset, count, {\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n      if (response.readableStreamBody) {\n        await readStreamToLocalFile(response.readableStreamBody, filePath);\n      }\n\n      // The stream is no longer accessible so setting it to undefined.\n      (response as any).fileDownloadStream = undefined;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Lists handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles\n   *\n   * @param {string} [marker] Optional. A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param {FileListHandlesSegmentOptions} [options={}]\n   * @returns {Promise<FileListHandlesResponse>}\n   * @memberof FileURL\n   */\n  private async listHandlesSegment(\n    marker?: string,\n    options: FileListHandlesSegmentOptions = {}\n  ): Promise<FileListHandlesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-listHandlesSegment\",\n      options.tracingOptions\n    );\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const response = await this.context.listHandles({\n        abortSignal: options.abortSignal,\n        marker,\n        ...options,\n        spanOptions\n      });\n\n      // TODO: Protocol layer issue that when handle list is in returned XML\n      // response.handleList is an empty string\n      if ((response.handleList as any) === \"\") {\n        response.handleList = undefined;\n      }\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for FileListHandlesResponse\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param {FileListHandlesSegmentOptions} [options] Options to list handles operation.\n   * @returns {AsyncIterableIterator<FileListHandlesResponse>}\n   * @memberof ShareFileClient\n   */\n  private async *iterateHandleSegments(\n    marker?: string,\n    options: FileListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<FileListHandlesResponse> {\n    let listHandlesResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listHandlesResponse = await this.listHandlesSegment(marker, options);\n        marker = listHandlesResponse.continuationToken;\n        yield listHandlesResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for handles\n   *\n   * @private\n   * @param {FileListHandlesSegmentOptions} [options] Options to list handles operation.\n   * @returns {AsyncIterableIterator<HandleItem>}\n   * @memberof ShareFileClient\n   */\n  private async *listHandleItems(\n    options: FileListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<HandleItem> {\n    let marker: string | undefined;\n    for await (const listHandlesResponse of this.iterateHandleSegments(marker, options)) {\n      if (listHandlesResponse.handleList) {\n        for (const handle of listHandlesResponse.handleList) {\n          yield handle;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the handles.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the handles in pages.\n   *\n   * @param {FileListHandlesOptions} [options] Options to list handles operation.\n   * @memberof ShareFileClient\n   * @returns {PagedAsyncIterableIterator<HandleItem, FileListHandlesResponse>}\n   * An asyncIterableIterator that supports paging.\n   */\n  public listHandles(\n    options: FileListHandlesOptions = {}\n  ): PagedAsyncIterableIterator<HandleItem, FileListHandlesResponse> {\n    // an AsyncIterableIterator to iterate over handles\n    const iter = this.listHandleItems(options);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateHandleSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n\n  /**\n   * Force close all handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param {string} [marker] Optional. A string value that identifies the position of handles that will\n   *                          be closed with the next force close handles operation.\n   *                          The operation returns a marker value within the response\n   *                          body if there are more handles to close. The marker value\n   *                          may then be used in a subsequent call to close the next set of handles.\n   * @param {FileForceCloseHandlesOptions} [options] Options to force close handles operation.\n   * @returns {Promise<FileForceCloseHandlesResponse>}\n   * @memberof ShareFileClient\n   */\n  private async forceCloseHandlesSegment(\n    marker?: string,\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<FileForceCloseHandlesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-forceCloseHandlesSegment\",\n      options.tracingOptions\n    );\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const rawResponse = await this.context.forceCloseHandles(\"*\", {\n        abortSignal: options.abortSignal,\n        marker,\n        spanOptions\n      });\n      const response = rawResponse as FileForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param {FileForceCloseHandlesOptions} [options] Options to force close handles operation.\n   * @returns {Promise<CloseHandlesInfo>}\n   * @memberof ShareFileClient\n   */\n  public async forceCloseAllHandles(\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<CloseHandlesInfo> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-forceCloseAllHandles\",\n      options.tracingOptions\n    );\n    try {\n      let handlesClosed = 0;\n      let numberOfHandlesFailedToClose = 0;\n      let marker: string | undefined = \"\";\n\n      do {\n        const response: FileForceCloseHandlesResponse = await this.forceCloseHandlesSegment(\n          marker,\n          { tracingOptions: { ...options!.tracingOptions, spanOptions } }\n        );\n        marker = response.marker;\n        response.closedHandlesCount && (handlesClosed += response.closedHandlesCount);\n        response.closeFailureCount && (numberOfHandlesFailedToClose += response.closeFailureCount);\n      } while (marker);\n\n      return {\n        closedHandlesCount: handlesClosed,\n        closeFailureCount: numberOfHandlesFailedToClose,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close a specific handle for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param {string} handleId Specific handle ID, cannot be asterisk \"*\".\n   *                          Use forceCloseAllHandles() to close all handles.\n   * @param FileForceCloseHandlesOptions} [options] Options to force close handles operation.\n   * @returns {Promise<FileForceCloseHandlesResponse>}\n   * @memberof ShareFileClient\n   */\n  public async forceCloseHandle(\n    handleId: string,\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<FileForceCloseHandlesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareFileClient-forceCloseHandle\",\n      options.tracingOptions\n    );\n    try {\n      if (handleId === \"*\") {\n        throw new RangeError(\n          `Parameter handleID should be a specified handle ID. Use forceCloseHandlesSegment() to close all handles.`\n        );\n      }\n\n      const rawResponse = await this.context.forceCloseHandles(handleId, {\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n      const response = rawResponse as FileForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get a {@link ShareLeaseClient} that manages leases on the file.\n   *\n   * @param {string} [proposeLeaseId] Initial proposed lease Id.\n   * @returns {ShareLeaseClient} A new ShareLeaseClient object for managing leases on the file.\n   * @memberof ShareFileClient\n   */\n  public getShareLeaseClient(proposeLeaseId?: string): ShareLeaseClient {\n    return new ShareLeaseClient(this, proposeLeaseId);\n  }\n}\n\n/**\n * The details of the response for a specific lease operation.\n */\nexport interface LeaseOperationResponseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  etag?: string;\n  /**\n   * Returns the date and time the file was last modified. Any operation that modifies the file,\n   * including an update of the file's metadata or properties, changes the last-modified time of\n   * the file.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a file's lease, won't be set when returned by releaseLease.\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Contains the response data for operations that acquire, change, break or release a lease.\n *\n * See {@link ShareLeaseClient}.\n */\nexport type LeaseOperationResponse = LeaseOperationResponseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: LeaseOperationResponseHeaders;\n  };\n};\n\n/**\n * lease operations options.\n *\n * @export\n * @interface LeaseOperationOptions\n */\nexport interface LeaseOperationOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof LeaseOperationOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A client that manages leases for a {@link ShareFileClient}.\n *\n * @export\n * @class ShareLeaseClient\n */\nexport class ShareLeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private _file: File;\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   * @memberof ShareLeaseClient\n   * @type {string}\n   */\n  public get leaseId(): string {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   * @memberof ShareLeaseClient\n   * @type {string}\n   */\n  public get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of ShareLeaseClient.\n   * @param {ShareFileClient} client The client to make the lease operation requests.\n   * @param {string} leaseId Initial proposed lease id.\n   * @memberof ShareLeaseClient\n   */\n  constructor(client: ShareFileClient, leaseId?: string) {\n    const clientContext = new StorageClientContext(\n      SERVICE_VERSION,\n      client.url,\n      (client as any).pipeline.toServiceClientOptions()\n    );\n    this._file = new File(clientContext);\n\n    this._url = client.url;\n\n    if (!leaseId) {\n      leaseId = generateUuid();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * The Lease File operation establishes and manages a lock on a file for write and delete operations.\n   *\n   * @param {number} duration Specifies the duration of lease. The only allowed value is -1, for a lease that never expires.\n   * @param {LeaseOperationOptions} [options={}] Options for the lease management operation.\n   * @returns {Promise<LeaseOperationResponse>} Response data for acquire lease operation.\n   * @memberof ShareLeaseClient\n   */\n  public async acquireLease(\n    duration = -1,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareLeaseClient-acquireLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this._file.acquireLease({\n        abortSignal: options.abortSignal,\n        duration,\n        proposedLeaseId: this._leaseId,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To change the ID of an existing lease.\n   *\n   * @param {string} proposedLeaseId the proposed new lease Id.\n   * @param {LeaseOperationOptions} [options={}] Options for the lease management operation.\n   * @returns {Promise<LeaseOperationResponse>} Response data for change lease operation.\n   * @memberof ShareLeaseClient\n   */\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, spanOptions } = createSpan(\"ShareLeaseClient-changeLease\", options.tracingOptions);\n    try {\n      const response = await this._file.changeLease(this._leaseId, {\n        proposedLeaseId,\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n      this._leaseId = proposedLeaseId;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease against the file.\n   *\n   * @param {LeaseOperationOptions} [options={}] Options for the lease management operation.\n   * @returns {Promise<LeaseOperationResponse>} Response data for release lease operation.\n   * @memberof ShareLeaseClient\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareLeaseClient-releaseLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this._file.releaseLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To force end the lease.\n   *\n   * @param {LeaseOperationOptions} [options={}] Options for the lease management operation.\n   * @returns {Promise<LeaseOperationResponse>} Response data for break lease operation.\n   * @memberof ShareLeaseClient\n   */\n  public async breakLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, spanOptions } = createSpan(\"ShareLeaseClient-breakLease\", options.tracingOptions);\n    try {\n      return await this._file.breakLease({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  DirectoryCreateResponse,\n  DirectoryDeleteResponse,\n  DirectoryGetPropertiesResponse,\n  DirectoryItem,\n  DirectoryListFilesAndDirectoriesSegmentResponse,\n  DirectoryListHandlesResponse,\n  DirectorySetMetadataResponse,\n  DirectorySetPropertiesResponse,\n  FileCreateResponse,\n  FileDeleteResponse,\n  FileItem,\n  HandleItem,\n  DirectoryForceCloseHandlesHeaders\n} from \"./generatedModels\";\nimport { Directory } from \"./generated/src/operations\";\nimport {\n  Metadata,\n  FileAndDirectoryCreateCommonOptions,\n  FileAndDirectorySetPropertiesCommonOptions,\n  validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions,\n  fileAttributesToString,\n  fileCreationTimeToString,\n  fileLastWriteTimeToString,\n  validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions,\n  CloseHandlesInfo\n} from \"./models\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport { appendToURLPath, getShareNameAndPathFromUrl } from \"./utils/utils.common\";\nimport { StorageClient, CommonOptions } from \"./StorageClient\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ShareFileClient, FileCreateOptions, FileDeleteOptions } from \"./ShareFileClient\";\nimport { Credential } from \"./credentials/Credential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { FileSystemAttributes } from \"./FileSystemAttributes\";\nimport { createSpan } from \"./utils/tracing\";\nimport { CanonicalCode } from \"@opentelemetry/types\";\nimport { HttpResponse } from \"@azure/core-http\";\n\n/**\n * Options to configure {@link ShareDirectoryClient.create} operation.\n *\n * @export\n * @interface DirectoryCreateOptions\n */\nexport interface DirectoryCreateOptions extends FileAndDirectoryCreateCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   *\n   * @type {Metadata}\n   * @memberof DirectoryCreateOptions\n   */\n  metadata?: Metadata;\n}\n\nexport interface DirectoryProperties\n  extends FileAndDirectorySetPropertiesCommonOptions,\n  CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof DirectoryProperties\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure Directory - List Files and Directories Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.iterateFilesAndDirectoriesSegments}\n * - {@link ShareDirectoryClient.listFilesAndDirectoriesItems}\n * - {@link ShareDirectoryClient.listFilesAndDirectoriesSegment}\n *\n * @interface DirectoryListFilesAndDirectoriesSegmentOptions\n */\ninterface DirectoryListFilesAndDirectoriesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   *\n   * @type {string}\n   * @memberof DirectoryListFilesAndDirectoriesSegmentOptions\n   */\n  prefix?: string;\n\n  /**\n   * Specifies the maximum number of entries to\n   * return. If the request does not specify maxResults, or specifies a value\n   * greater than 5,000, the server will return up to 5,000 items.\n   *\n   * @type {number}\n   * @memberof DirectoryListFilesAndDirectoriesSegmentOptions\n   */\n  maxResults?: number;\n}\n\n/**\n * Options to configure {@link ShareDirectoryClient.listFilesAndDirectories} operation.\n *\n * @export\n * @interface DirectoryListFilesAndDirectoriesOptions\n */\nexport interface DirectoryListFilesAndDirectoriesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof DirectoryListFilesAndDirectoriesOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   *\n   * @type {string}\n   * @memberof DirectoryListFilesAndDirectoriesOptions\n   */\n  prefix?: string;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.delete} operation.\n *\n * @export\n * @interface DirectoryDeleteOptions\n */\nexport interface DirectoryDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.getProperties} operation.\n *\n * @export\n * @interface DirectoryGetPropertiesOptions\n */\nexport interface DirectoryGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.setMetadata} operation.\n *\n * @export\n * @interface DirectorySetMetadataOptions\n */\nexport interface DirectorySetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure Directory - List Handles Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.listHandlesSegment}\n * - {@link ShareDirectoryClient.iterateHandleSegments}\n * - {@link ShareDirectoryClient.listHandleItems}\n *\n *\n * @export\n * @interface DirectoryListHandlesSegmentOptions\n */\nexport interface DirectoryListHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof DirectoryListHandlesSegmentOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of entries to return. If the request does not specify maxResults,\n   * or specifies a value greater than 5,000, the server will return up to 5,000 items.\n   *\n   * @type {number}\n   * @memberof DirectoryListHandlesSegmentOptions\n   */\n  maxResults?: number;\n  /**\n   * Specifies operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   *\n   * @type {boolean}\n   * @memberof DirectoryListHandlesSegmentOptions\n   */\n  recursive?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.listHandles} operation.\n *\n * @export\n * @interface DirectoryListHandlesOptions\n */\nexport interface DirectoryListHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof DirectoryListHandlesOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies whether operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   *\n   * @type {boolean}\n   * @memberof DirectoryListHandlesOptions\n   */\n  recursive?: boolean;\n}\n\n/**\n * Options to configure Directory - Force Close Handles Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.forceCloseHandlesSegment}\n * - {@link ShareDirectoryClient.forceCloseAllHandles}\n *\n * @export\n * @interface DirectoryForceCloseHandlesSegmentOptions\n */\nexport interface DirectoryForceCloseHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof DirectoryForceCloseHandlesSegmentOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   *\n   * @type {boolean}\n   * @memberof DirectoryForceCloseHandlesSegmentOptions\n   */\n  recursive?: boolean;\n}\n\n/**\n * Additional response header values for close handles request.\n */\nexport interface DirectoryCloseHandlesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the File service used to execute the request.\n   */\n  version?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A string describing next handle to be closed. It is returned when more handles need to be\n   * closed to complete the request.\n   */\n  marker?: string;\n}\n\n/**\n * Response type for {@link ShareDirectoryClient.forceCloseHandle}.\n */\nexport type DirectoryForceCloseHandlesResponse = CloseHandlesInfo &\n  DirectoryCloseHandlesHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: DirectoryForceCloseHandlesHeaders;\n    };\n  };\n\n/**\n * Options to configure {@link ShareDirectoryClient.forceCloseHandle}.\n *\n * @export\n * @interface DirectoryForceCloseHandlesOptions\n */\nexport interface DirectoryForceCloseHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof DirectoryForceCloseHandlesOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A ShareDirectoryClient represents a URL to the Azure Storage directory allowing you to manipulate its files and directories.\n *\n * @export\n * @class ShareDirectoryClient\n */\nexport class ShareDirectoryClient extends StorageClient {\n  /**\n   * context provided by protocol layer.\n   *\n   * @private\n   * @type {Directory}\n   * @memberof ShareDirectoryClient\n   */\n  private context: Directory;\n\n  private _shareName: string;\n  private _path: string;\n  private _name: string;\n\n  /**\n   * The share name corresponding to this directory client\n   *\n   * @type {string}\n   * @memberof ShareDirectoryClient\n   */\n  public get shareName(): string {\n    return this._shareName;\n  }\n\n  /**\n   * The full path of the directory\n   *\n   * @type {string}\n   * @memberof ShareDirectoryClient\n   */\n  public get path(): string {\n    return this._path;\n  }\n\n  /**\n   * The name of the directory\n   *\n   * @type {string}\n   * @memberof ShareDirectoryClient\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Creates an instance of DirectoryClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage file directory, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a directory.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a directory name includes %, directory name must be encoded in the URL.\n   *                     Such as a directory named \"mydir%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydir%25\".\n   * @param {Credential} [credential] Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ShareDirectoryClient\n   */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of DirectoryClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage file directory, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a directory.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a directory name includes %, directory name must be encoded in the URL.\n   *                     Such as a directory named \"mydir%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydir%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof ShareDirectoryClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    options: StoragePipelineOptions = {}\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    ({\n      baseName: this._name,\n      shareName: this._shareName,\n      path: this._path\n    } = getShareNameAndPathFromUrl(this.url));\n    this.context = new Directory(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new directory under the specified share or parent directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param {DirectoryCreateOptions} [options] Options to Directory Create operation.\n   * @returns {Promise<DirectoryCreateResponse>} Response data for the Directory  operation.\n   * @memberof ShareDirectoryClient\n   */\n  public async create(options: DirectoryCreateOptions = {}): Promise<DirectoryCreateResponse> {\n    const { span, spanOptions } = createSpan(\"ShareDirectoryClient-create\", options.tracingOptions);\n    try {\n      if (!options.fileAttributes) {\n        options = validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(options);\n        // By default set it as a directory.\n        const attributes: FileSystemAttributes = new FileSystemAttributes();\n        attributes.directory = true;\n        options.fileAttributes = attributes;\n      }\n\n      return await this.context.create(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          metadata: options.metadata,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties on the directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-properties\n   *\n   * @param {properties} [DirectoryProperties] Directory properties. If no values are provided,\n   *                                            existing values will be preserved.\n   * @returns {Promise<DirectorySetPropertiesResponse>}\n   * @memberof ShareDirectoryClient\n   */\n  public async setProperties(\n    properties: DirectoryProperties = {}\n  ): Promise<DirectorySetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-setProperties\",\n      properties.tracingOptions\n    );\n    try {\n      properties = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(properties);\n\n      return await this.context.setProperties(\n        fileAttributesToString(properties.fileAttributes!),\n        fileCreationTimeToString(properties.creationTime!),\n        fileLastWriteTimeToString(properties.lastWriteTime!),\n        {\n          abortSignal: properties.abortSignal,\n          filePermission: properties.filePermission,\n          filePermissionKey: properties.filePermissionKey,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a ShareDirectoryClient object for a sub directory.\n   *\n   * @param subDirectoryName A subdirectory name\n   * @returns {ShareDirectoryClient} The ShareDirectoryClient object for the given subdirectory name.\n   * @memberof ShareDirectoryClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const directoryClient = shareClient.getDirectoryClient(\"<directory name>\");\n   * await directoryClient.create();\n   * console.log(\"Created directory successfully\");\n   * ```\n   */\n  public getDirectoryClient(subDirectoryName: string): ShareDirectoryClient {\n    return new ShareDirectoryClient(\n      appendToURLPath(this.url, encodeURIComponent(subDirectoryName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new subdirectory under this directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param {string} directoryName\n   * @param {DirectoryCreateOptions} [options] Options to Directory Create operation.\n   * @returns {Promise<{ directoryClient: ShareDirectoryClient; directoryCreateResponse: DirectoryCreateResponse; }>} Directory create response data and the corresponding DirectoryClient instance.\n   * @memberof ShareDirectoryClient\n   */\n  public async createSubdirectory(\n    directoryName: string,\n    options: DirectoryCreateOptions = {}\n  ): Promise<{\n    directoryClient: ShareDirectoryClient;\n    directoryCreateResponse: DirectoryCreateResponse;\n  }> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-createSubdirectory\",\n      options.tracingOptions\n    );\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      const directoryCreateResponse = await directoryClient.create({\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n      return {\n        directoryClient,\n        directoryCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty sub directory under this directory.\n   * Note that the directory must be empty before it can be deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param {string} directoryName\n   * @param {DirectoryDeleteOptions} [options] Options to Directory Delete operation.\n   * @returns {DirectoryDeleteResponse} Directory deletion response data.\n   * @memberof ShareDirectoryClient\n   */\n  public async deleteSubdirectory(\n    directoryName: string,\n    options: DirectoryDeleteOptions = {}\n  ): Promise<DirectoryDeleteResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-deleteSubdirectory\",\n      options.tracingOptions\n    );\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      return await directoryClient.delete({\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new file or replaces a file under this directory. Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param {string} fileName\n   * @param {number} size Specifies the maximum size in bytes for the file, up to 1 TB.\n   * @param {FileCreateOptions} [options] Options to File Create operation.\n   * @returns {Promise<{ fileClient: ShareFileClient, fileCreateResponse: FileCreateResponse }>} File creation response data and the corresponding file client.\n   * @memberof ShareDirectoryClient\n   */\n  public async createFile(\n    fileName: string,\n    size: number,\n    options: FileCreateOptions = {}\n  ): Promise<{ fileClient: ShareFileClient; fileCreateResponse: FileCreateResponse }> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-createFile\",\n      options.tracingOptions\n    );\n    try {\n      const fileClient = this.getFileClient(fileName);\n      const fileCreateResponse = await fileClient.create(size, {\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n      return {\n        fileClient,\n        fileCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified file under this directory from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code SharingViolation\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400 (InvalidQueryParameterValue)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param {string} fileName Name of the file to delete\n   * @param {FileDeleteOptions} [options] Options to File Delete operation.\n   * @returns {Promise<FileDeleteResponse>} File deletion response data.\n   * @memberof ShareDirectoryClient\n   */\n  public async deleteFile(\n    fileName: string,\n    options: FileDeleteOptions = {}\n  ): Promise<FileDeleteResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-deleteFile\",\n      options.tracingOptions\n    );\n    try {\n      const fileClient = this.getFileClient(fileName);\n      return await fileClient.delete({\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link ShareFileClient} object.\n   *\n   * @param {string} fileName A file name.\n   * @returns {ShareFileClient} A new ShareFileClient object for the given file name.\n   * @memberof ShareFileClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\"\n   *\n   * const fileClient = directoryClient.getFileClient(\"<file name>\");\n   *\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * await fileClient.uplaodRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  public getFileClient(fileName: string): ShareFileClient {\n    return new ShareFileClient(\n      appendToURLPath(this.url, encodeURIComponent(fileName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Returns all system properties for the specified directory, and can also be used to check the\n   * existence of a directory. The data returned does not include the files in the directory or any\n   * subdirectories.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-directory-properties\n   *\n   * @param {DirectoryGetPropertiesOptions} [options] Options to Directory Get Properties operation.\n   * @returns {Promise<DirectoryGetPropertiesResponse>} Response data for the Directory Get Properties operation.\n   * @memberof ShareDirectoryClient\n   */\n  public async getProperties(\n    options: DirectoryGetPropertiesOptions = {}\n  ): Promise<DirectoryGetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-getProperties\",\n      options.tracingOptions\n    );\n    try {\n      return await this.context.getProperties({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty directory. Note that the directory must be empty before it can be\n   * deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param {DirectoryDeleteOptions} [options] Options to Directory Delete operation.\n   * @returns {Promise<DirectoryDeleteResponse>} Response data for the Directory Delete operation.\n   * @memberof ShareDirectoryClient\n   */\n  public async delete(options: DirectoryDeleteOptions = {}): Promise<DirectoryDeleteResponse> {\n    const { span, spanOptions } = createSpan(\"ShareDirectoryClient-delete\", options.tracingOptions);\n    try {\n      return await this.context.deleteMethod({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates user defined metadata for the specified directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-metadata\n   *\n   * @param {Metadata} [metadata] If no metadata provided, all existing directory metadata will be removed\n   * @param {DirectorySetMetadataOptions} [options] Options to Directory Set Metadata operation.\n   * @returns {Promise<DirectorySetMetadataResponse>} Response data for the Directory Set Metadata operation.\n   * @memberof ShareDirectoryClient\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: DirectorySetMetadataOptions = {}\n  ): Promise<DirectorySetMetadataResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-setMetadata\",\n      options.tracingOptions\n    );\n    try {\n      return await this.context.setMetadata({\n        abortSignal: options.abortSignal,\n        metadata,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link DirectoryListFilesAndDirectoriesSegmentResponse} objects\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of files and directories to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all files and directories remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {DirectoryListFilesAndDirectoriesSegmentOptions} [options] Options to list files and directories operation.\n   * @returns {AsyncIterableIterator<DirectoryListFilesAndDirectoriesSegmentResponse>}\n   * @memberof ShareDirectoryClient\n   */\n  private async *iterateFilesAndDirectoriesSegments(\n    marker?: string,\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): AsyncIterableIterator<DirectoryListFilesAndDirectoriesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let listFilesAndDirectoriesResponse;\n    do {\n      listFilesAndDirectoriesResponse = await this.listFilesAndDirectoriesSegment(marker, options);\n      marker = listFilesAndDirectoriesResponse.continuationToken;\n      yield await listFilesAndDirectoriesResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for file and directory items\n   *\n   * @private\n   * @param {DirectoryListFilesAndDirectoriesSegmentOptions} [options] Options to list files and directories operation.\n   * @returns {AsyncIterableIterator<{ kind: \"file\" } & FileItem | { kind: \"directory\" } & DirectoryItem>}\n   * @memberof ShareDirectoryClient\n   */\n  private async *listFilesAndDirectoriesItems(\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): AsyncIterableIterator<\n    ({ kind: \"file\" } & FileItem) | ({ kind: \"directory\" } & DirectoryItem)\n  > {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let marker: string | undefined;\n    for await (const listFilesAndDirectoriesResponse of this.iterateFilesAndDirectoriesSegments(\n      marker,\n      options\n    )) {\n      for (const file of listFilesAndDirectoriesResponse.segment.fileItems) {\n        yield { kind: \"file\", ...file };\n      }\n      for (const directory of listFilesAndDirectoriesResponse.segment.directoryItems) {\n        yield { kind: \"directory\", ...directory };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the files and directories\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the files and directories in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const entity of directoryClient.listFilesAndDirectories()) {\n   *   if (entity.kind === \"directory\") {\n   *     console.log(`${i++} - directory\\t: ${entity.name}`);\n   *   } else {\n   *     console.log(`${i++} - file\\t: ${entity.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = await directoryClient.listFilesAndDirectories();\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   if (entity.value.kind === \"directory\") {\n   *     console.log(`${i++} - directory\\t: ${entity.value.name}`);\n   *   } else {\n   *     console.log(`${i++} - file\\t: ${entity.value.name}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of directoryClient\n   *   .listFilesAndDirectories()\n   *   .byPage({ maxPageSize: 20 })) {\n   *   for (const fileItem of response.segment.fileItems) {\n   *     console.log(`${i++} - file\\t: ${fileItem.name}`);\n   *   }\n   *   for (const dirItem of response.segment.directoryItems) {\n   *     console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = directoryClient.listFilesAndDirectories().byPage({ maxPageSize: 3 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 3 file and directory names\n   * for (const fileItem of response.segment.fileItems) {\n   *   console.log(`${i++} - file\\t: ${fileItem.name}`);\n   * }\n   *\n   * for (const dirItem of response.segment.directoryItems) {\n   *   console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   * }\n   *\n   * // Gets next marker\n   * let dirMarker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * iterator = directoryClient\n   *   .listFilesAndDirectories()\n   *   .byPage({ continuationToken: dirMarker, maxPageSize: 4 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 file and directory names\n   * for (const fileItem of response.segment.fileItems) {\n   *   console.log(`${i++} - file\\t: ${fileItem.name}`);\n   * }\n   *\n   * for (const dirItem of response.segment.directoryItems) {\n   *   console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   * }\n   * ```\n   *\n   * @param {DirectoryListFilesAndDirectoriesOptions} [options] Options to list files and directories operation.\n   * @memberof ShareDirectoryClient\n   * @returns {PagedAsyncIterableIterator<{ kind: \"file\" } & FileItem | { kind: \"directory\" } , DirectoryListFilesAndDirectoriesSegmentResponse>}\n   * An asyncIterableIterator that supports paging.\n   */\n  public listFilesAndDirectories(\n    options: DirectoryListFilesAndDirectoriesOptions = {}\n  ): PagedAsyncIterableIterator<\n    ({ kind: \"file\" } & FileItem) | ({ kind: \"directory\" } & DirectoryItem),\n    DirectoryListFilesAndDirectoriesSegmentResponse\n  > {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    // AsyncIterableIterator to iterate over files and directories\n    const iter = this.listFilesAndDirectoriesItems(options);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateFilesAndDirectoriesSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n\n  /**\n   * Returns a list of files or directories under the specified share or directory. It lists the\n   * contents only for a single level of the directory hierarchy.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-directories-and-files\n   *\n   * @param {string} [marker] A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param {DirectoryListFilesAndDirectoriesSegmentOptions} [options] Options to Directory List Files and Directories Segment operation.\n   * @returns {Promise<DirectoryListFilesAndDirectoriesSegmentResponse>} Response data for the Directory List Files and Directories operation.\n   * @memberof ShareDirectoryClient\n   */\n  private async listFilesAndDirectoriesSegment(\n    marker?: string,\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): Promise<DirectoryListFilesAndDirectoriesSegmentResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-listFilesAndDirectoriesSegment\",\n      options.tracingOptions\n    );\n\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    try {\n      return await this.context.listFilesAndDirectoriesSegment({\n        marker,\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link DirectoryListHandlesResponse}\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param {DirectoryListHandlesSegmentOptions} [options] Options to list handles operation.\n   * @returns {AsyncIterableIterator<DirectoryListHandlesResponse>}\n   * @memberof ShareDirectoryClient\n   */\n  private async *iterateHandleSegments(\n    marker?: string,\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<DirectoryListHandlesResponse> {\n    let listHandlesResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listHandlesResponse = await this.listHandlesSegment(marker, options);\n        marker = listHandlesResponse.continuationToken;\n        yield await listHandlesResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for handles\n   *\n   * @private\n   * @param {DirectoryListHandlesSegmentOptions} [options] Options to list handles operation.\n   * @returns {AsyncIterableIterator<HandleItem>}\n   * @memberof ShareDirectoryClient\n   */\n  private async *listHandleItems(\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<HandleItem> {\n    let marker: string | undefined;\n    for await (const listHandlesResponse of this.iterateHandleSegments(marker, options)) {\n      if (listHandlesResponse.handleList) {\n        for (const handle of listHandlesResponse.handleList) {\n          yield handle;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the handles.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the handles in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = dirClient.listHandles();\n   * for await (const handle of iter) {\n   *   console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = await dirClient.listHandles();\n   * let handleItem = await iter.next();\n   * while (!handleItem.done) {\n   *   console.log(`Handle ${i++}: ${handleItem.value.path}, opened time ${handleItem.value.openTime}, clientIp ${handleItem.value.clientIp}`);\n   *   handleItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of dirClient.listHandles({ recursive: true }).byPage({ maxPageSize: 20 })) {\n   *   if (response.handleList) {\n   *     for (const handle of response.handleList) {\n   *       console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = dirClient.listHandles().byPage({ maxPageSize: 2 });\n   * let response = await iterator.next();\n   *\n   * // Prints 2 handles\n   * if (response.value.handleList) {\n   *   for (const handle of response.value.handleList) {\n   *     console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.value.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * console.log(`    continuation`);\n   * iterator = dirClient.listHandles().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = await iterator.next();\n   *\n   * // Prints 2 more handles assuming you have more than four directory/files opened\n   * if (!response.done && response.value.handleList) {\n   *   for (const handle of response.value.handleList) {\n   *     console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param {DirectoryListHandlesOptions} [options] Options to list handles operation.\n   * @memberof ShareDirectoryClient\n   * @returns {PagedAsyncIterableIterator<HandleItem, DirectoryListHandlesResponse>}\n   * An asyncIterableIterator that supports paging.\n   */\n  public listHandles(\n    options: DirectoryListHandlesOptions = {}\n  ): PagedAsyncIterableIterator<HandleItem, DirectoryListHandlesResponse> {\n    // an AsyncIterableIterator to iterate over handles\n    const iter = this.listHandleItems(options);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateHandleSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n\n  /**\n   * Lists handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles\n   *\n   * @param {string} [marker] Optional. A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param {DirectoryListHandlesSegmentOptions} [options={}]\n   * @returns {Promise<DirectoryListHandlesResponse>}\n   * @memberof ShareDirectoryClient\n   */\n  private async listHandlesSegment(\n    marker?: string,\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): Promise<DirectoryListHandlesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-listHandlesSegment\",\n      options.tracingOptions\n    );\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const response = await this.context.listHandles({\n        marker,\n        ...options,\n        spanOptions\n      });\n\n      // TODO: Protocol layer issue that when handle list is in returned XML\n      // response.handleList is an empty string\n      if ((response.handleList as any) === \"\") {\n        response.handleList = undefined;\n      }\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param {string} [marker] Optional. A string value that identifies the position of handles that will\n   *                          be closed with the next force close handles operation.\n   *                          The operation returns a marker value within the response\n   *                          body if there are more handles to close. The marker value\n   *                          may then be used in a subsequent call to close the next set of handles.\n   * @param {DirectoryForceCloseHandlesSegmentOptions} [options={}]\n   * @returns {Promise<DirectoryForceCloseHandlesResponse>}\n   * @memberof ShareDirectoryClient\n   */\n  private async forceCloseHandlesSegment(\n    marker?: string,\n    options: DirectoryForceCloseHandlesSegmentOptions = {}\n  ): Promise<DirectoryForceCloseHandlesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-forceCloseHandlesSegment\",\n      options.tracingOptions\n    );\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const rawResponse = await this.context.forceCloseHandles(\"*\", {\n        marker,\n        ...options,\n        spanOptions\n      });\n      const response = rawResponse as DirectoryForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param {DirectoryForceCloseHandlesSegmentOptions} [options={}]\n   * @returns {Promise<CloseHandlesInfo>}\n   * @memberof ShareDirectoryClient\n   */\n  public async forceCloseAllHandles(\n    options: DirectoryForceCloseHandlesSegmentOptions = {}\n  ): Promise<CloseHandlesInfo> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-forceCloseAllHandles\",\n      options.tracingOptions\n    );\n    try {\n      let handlesClosed = 0;\n      let numberOfHandlesFailedToClose = 0;\n      let marker: string | undefined = \"\";\n\n      do {\n        const response: DirectoryForceCloseHandlesResponse = await this.forceCloseHandlesSegment(\n          marker,\n          { ...options, tracingOptions: { ...options!.tracingOptions, spanOptions } }\n        );\n        marker = response.marker;\n        response.closedHandlesCount && (handlesClosed += response.closedHandlesCount);\n        response.closeFailureCount && (numberOfHandlesFailedToClose += response.closeFailureCount);\n      } while (marker);\n\n      return { closedHandlesCount: handlesClosed, closeFailureCount: numberOfHandlesFailedToClose };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close a specific handle for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} handleId Specific handle ID, cannot be asterisk \"*\".\n   *                          Use forceCloseHandlesSegment() to close all handles.\n   * @param {DirectoryForceCloseHandlesOptions} [options={}]\n   * @returns {Promise<DirectoryForceCloseHandlesResponse>}\n   * @memberof ShareDirectoryClient\n   */\n  public async forceCloseHandle(\n    handleId: string,\n    options: DirectoryForceCloseHandlesOptions = {}\n  ): Promise<DirectoryForceCloseHandlesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareDirectoryClient-forceCloseHandle\",\n      options.tracingOptions\n    );\n    try {\n      if (handleId === \"*\") {\n        throw new RangeError(\n          `Parameter handleID should be a specified handle ID. Use forceCloseHandlesSegment() to close all handles.`\n        );\n      }\n\n      const rawResponse = await this.context.forceCloseHandles(handleId, {\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n      const response = rawResponse as DirectoryForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/core-http\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * StorageSharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n *\n * @export\n * @class StorageSharedKeyCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class StorageSharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to {@link StorageSharedKeyCredential} which generates StorageSharedKeyCredentialPolicy\n   *\n   * @type {StorageSharedKeyCredential}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private readonly factory: StorageSharedKeyCredential;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {StorageSharedKeyCredential} factory\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: StorageSharedKeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (request.body && typeof request.body === \"string\" && request.body.length > 0) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE)\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`\n    );\n\n    // Workaround for https://github.com/axios/axios/issues/2107\n    // We should always keep the 'content-length' header once the issue is solved\n    // For a better explanation about this workaround, look here: https://github.com/Azure/azure-sdk-for-js/pull/3273\n    if (typeof request.body !== \"function\" && !(request.body && request.onUploadProgress)) {\n      request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n    }\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @private\n   * @param {WebResource} request\n   * @param {string} headerName\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort((a, b): number => {\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    });\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (queries.hasOwnProperty(key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { createHmac } from \"crypto\";\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { StorageSharedKeyCredentialPolicy } from \"../policies/StorageSharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * StorageSharedKeyCredential for account key authorization of Azure Storage service.\n *\n * @export\n * @class StorageSharedKeyCredential\n * @extends {Credential}\n */\nexport class StorageSharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof StorageSharedKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   *\n   * @type {Buffer}\n   * @memberof StorageSharedKeyCredential\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredential.\n   * @param {string} accountName\n   * @param {string} accountKey\n   * @memberof StorageSharedKeyCredential\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a {@link StorageSharedKeyCredentialPolicy} object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageSharedKeyCredentialPolicy}\n   * @memberof StorageSharedKeyCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): StorageSharedKeyCredentialPolicy {\n    return new StorageSharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof StorageSharedKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return createHmac(\"sha256\", this.accountKey)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { HttpResponse, isNode } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/types\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  DeleteSnapshotsOptionType,\n  DirectoryCreateResponse,\n  DirectoryDeleteResponse,\n  FileCreateResponse,\n  FileDeleteResponse,\n  ShareCreatePermissionResponse,\n  ShareCreateResponse,\n  ShareCreateSnapshotResponse,\n  ShareDeleteResponse,\n  ShareGetAccessPolicyHeaders,\n  ShareGetPermissionResponse,\n  ShareGetPropertiesResponse,\n  ShareSetAccessPolicyResponse,\n  ShareSetMetadataResponse,\n  ShareSetQuotaResponse,\n  SignedIdentifierModel,\n  ShareGetStatisticsResponseModel\n} from \"./generatedModels\";\nimport { Share } from \"./generated/src/operations\";\nimport { Metadata } from \"./models\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport { StorageClient, CommonOptions } from \"./StorageClient\";\nimport { URLConstants } from \"./utils/constants\";\nimport {\n  appendToURLPath,\n  setURLParameter,\n  truncatedISO8061Date,\n  extractConnectionStringParts,\n  getShareNameAndPathFromUrl\n} from \"./utils/utils.common\";\nimport {\n  ShareDirectoryClient,\n  DirectoryCreateOptions,\n  DirectoryDeleteOptions\n} from \"./ShareDirectoryClient\";\nimport { FileCreateOptions, FileDeleteOptions, ShareFileClient } from \"./ShareFileClient\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { createSpan } from \"./utils/tracing\";\n\n/**\n * Options to configure the {@link ShareClient.create} operation.\n *\n * @export\n * @interface ShareCreateOptions\n */\nexport interface ShareCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A name-value pair to associate with a file storage object.\n   *\n   * @type {{ [propertyName: string]: string }}\n   * @memberof ShareCreateOptions\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Specifies the maximum size of the share, in\n   * gigabytes.\n   *\n   * @type {number}\n   * @memberof ShareCreateOptions\n   */\n  quota?: number;\n}\n\n/**\n * Options to configure the {@link ShareClient.delete} operation.\n *\n * @export\n * @interface ShareDeleteMethodOptions\n */\nexport interface ShareDeleteMethodOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareDeleteMethodOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the option\n   * include to delete the base share and all of its snapshots. Possible values\n   * include: 'include'\n   *\n   * @type {DeleteSnapshotsOptionType}\n   * @memberof ShareDeleteMethodOptions\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n}\n\n/**\n * Options to configure the {@link ShareClient.setMetadata} operation.\n *\n * @export\n * @interface ShareSetMetadataOptions\n */\nexport interface ShareSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareSetMetadataOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareClient.setAccessPolicy} operation.\n *\n * @export\n * @interface ShareSetAccessPolicyOptions\n */\nexport interface ShareSetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareSetAccessPolicyOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareClient.getAccessPolicy} operation.\n *\n * @export\n * @interface ShareGetAccessPolicyOptions\n */\nexport interface ShareGetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareGetAccessPolicyOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareClient.getProperties} operation.\n *\n * @export\n * @interface ShareGetPropertiesOptions\n */\nexport interface ShareGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareGetPropertiesOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareClient.setQuota} operation.\n *\n * @export\n * @interface ShareSetQuotaOptions\n */\nexport interface ShareSetQuotaOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareSetQuotaOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareClient.getStatistics} operation.\n *\n * @export\n * @interface ShareGetStatisticsOptions\n */\nexport interface ShareGetStatisticsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareGetStatisticsOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Signed Identifier\n *\n * @export\n * @interface SignedIdentifier\n */\nexport interface SignedIdentifier {\n  /**\n   * @member {string} id a unique id\n   */\n  id: string;\n  /**\n   * @member {AccessPolicy} accessPolicy\n   */\n  accessPolicy: {\n    /**\n     * @member {Date} startsOn the date-time the policy is active.\n     */\n    startsOn: Date;\n    /**\n     * @member {string} expiresOn the date-time the policy expires.\n     */\n    expiresOn: Date;\n    /**\n     * @member {string} permissions the permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-acl\n     */\n    permissions: string;\n  };\n}\n\nexport declare type ShareGetAccessPolicyResponse = {\n  signedIdentifiers: SignedIdentifier[];\n} & ShareGetAccessPolicyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ShareGetAccessPolicyHeaders;\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SignedIdentifierModel[];\n    };\n  };\n\n/**\n * Options to configure the {@link ShareClient.createSnapshot} operation.\n *\n * @export\n * @interface ShareCreateSnapshotOptions\n */\nexport interface ShareCreateSnapshotOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareCreateSnapshotOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A name-value pair to associate with a file storage object.\n   *\n   * @type {{ [propertyName: string]: string }}\n   * @memberof ShareCreateOptions\n   */\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * Options to configure the {@link ShareClient.createPermission} operation.\n *\n * @export\n * @interface ShareCreatePermissionOptions\n */\nexport interface ShareCreatePermissionOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareCreatePermissionOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n/**\n * Options to configure the {@link ShareClient.getPermission} operation.\n *\n * @export\n * @interface ShareGetPermissionOptions\n */\nexport interface ShareGetPermissionOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ShareGetPermissionOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Response data for the {@link ShareClient.getStatistics} Operation.\n *\n * @export\n * @interface ShareGetStatisticsResponse\n */\nexport type ShareGetStatisticsResponse = ShareGetStatisticsResponseModel & {\n  /**\n   * @deprecated shareUsage is going to be deprecated. Please use ShareUsageBytes instead.\n   *\n   * The approximate size of the data stored on the share, rounded up to the nearest gigabyte. Note\n   * that this value may not include all recently created or recently resized files.\n   *\n   * @type {number}\n   * @memberof ShareGetStatisticsResponse\n   */\n  shareUsage: number;\n};\n\n/**\n * A ShareClient represents a URL to the Azure Storage share allowing you to manipulate its directories and files.\n *\n * @export\n * @class ShareClient\n */\nexport class ShareClient extends StorageClient {\n  /**\n   * Share operation context provided by protocol layer.\n   *\n   * @private\n   * @type {Share}\n   * @memberof ShareClient\n   */\n  private context: Share;\n\n  private _name: string;\n\n  /**\n   * The name of the share\n   *\n   * @type {string}\n   * @memberof ShareClient\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @param {string} connectionString Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param {string} name Share name.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ShareClient\n   */\n  constructor(connectionString: string, name: string, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage file share, such as\n   *                     \"https://myaccount.file.core.windows.net/share\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/share?sasString\".\n   * @param {Credential} [credential] Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ShareClient\n   */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage file share, such as\n   *                     \"https://myaccount.file.core.windows.net/share\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/share?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof ShareClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrShareName?: Credential | Pipeline | string,\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    let url: string;\n    if (credentialOrPipelineOrShareName instanceof Pipeline) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrShareName;\n    } else if (credentialOrPipelineOrShareName instanceof Credential) {\n      // (url: string, credential?: Credential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      pipeline = newPipeline(credentialOrPipelineOrShareName, options);\n    } else if (\n      !credentialOrPipelineOrShareName &&\n      typeof credentialOrPipelineOrShareName !== \"string\"\n    ) {\n      // (url: string, credential?: Credential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrShareName &&\n      typeof credentialOrPipelineOrShareName === \"string\"\n    ) {\n      // (connectionString: string, name: string, options?: StoragePipelineOptions)\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      const name = credentialOrPipelineOrShareName;\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(extractedCreds.url, name);\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url = appendToURLPath(extractedCreds.url, name) + \"?\" + extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for name parameter\");\n    }\n    super(url, pipeline);\n    this._name = getShareNameAndPathFromUrl(this.url).shareName;\n    this.context = new Share(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new ShareClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base share.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {ShareClient} A new ShareClient object identical to the source but with the specified snapshot timestamp\n   * @memberof ShareClient\n   */\n  public withSnapshot(snapshot: string): ShareClient {\n    return new ShareClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SHARE_SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-share\n   *\n   * @param {ShareCreateOptions} [options] Options to Share Create operation.\n   * @returns {Promise<ShareCreateResponse>} Response data for the Share Create operation.\n   * @memberof ShareClient\n   */\n  public async create(options: ShareCreateOptions = {}): Promise<ShareCreateResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-create\", options.tracingOptions);\n    try {\n      return await this.context.create({\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link ShareDirectoryClient} object.\n   *\n   * @param directoryName A directory name\n   * @returns {ShareDirectoryClient} The ShareDirectoryClient object for the given directory name.\n   * @memberof ShareClient\n   */\n  public getDirectoryClient(directoryName: string): ShareDirectoryClient {\n    return new ShareDirectoryClient(\n      appendToURLPath(this.url, encodeURIComponent(directoryName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Gets the directory client for the root directory of this share.\n   * Note that the root directory always exists and cannot be deleted.\n   *\n   * @readonly\n   * @type {ShareDirectoryClient} A new ShareDirectoryClient object for the root directory.\n   * @memberof ShareClient\n   */\n  public get rootDirectoryClient(): ShareDirectoryClient {\n    return this.getDirectoryClient(\"\");\n  }\n\n  /**\n   * Creates a new subdirectory under this share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param {string} directoryName\n   * @param {DirectoryCreateOptions} [options] Options to Directory Create operation.\n   * @returns {Promise<{ directoryClient: ShareDirectoryClient, directoryCreateResponse: DirectoryCreateResponse }>} Directory creation response data and the corresponding directory client.\n   * @memberof ShareClient\n   */\n  public async createDirectory(\n    directoryName: string,\n    options: DirectoryCreateOptions = {}\n  ): Promise<{\n    directoryClient: ShareDirectoryClient;\n    directoryCreateResponse: DirectoryCreateResponse;\n  }> {\n    const { span, spanOptions } = createSpan(\"ShareClient-createDirectory\", options.tracingOptions);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      const directoryCreateResponse = await directoryClient.create({\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n      return {\n        directoryClient,\n        directoryCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty sub directory under this share.\n   * Note that the directory must be empty before it can be deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param {string} directoryName\n   * @param {DirectoryDeleteOptions} [options] Options to Directory Delete operation.\n   * @returns {Promise<DirectoryDeleteResponse>} Directory deletion response data.\n   * @memberof ShareClient\n   */\n  public async deleteDirectory(\n    directoryName: string,\n    options: DirectoryDeleteOptions = {}\n  ): Promise<DirectoryDeleteResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-deleteDirectory\", options.tracingOptions);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      return await directoryClient.delete({\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new file or replaces a file under the root directory of this share.\n   * Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param {string} fileName\n   * @param {number} size Specifies the maximum size in bytes for the file, up to 1 TB.\n   * @param {FileCreateOptions} [options] Options to File Create operation.\n   * @returns {Promise<{ fileClient: ShareFileClient, fileCreateResponse: FileCreateResponse }>} File creation response data and the corresponding file client.\n   * @memberof ShareClient\n   */\n  public async createFile(\n    fileName: string,\n    size: number,\n    options: FileCreateOptions = {}\n  ): Promise<{ fileClient: ShareFileClient; fileCreateResponse: FileCreateResponse }> {\n    const { span, spanOptions } = createSpan(\"ShareClient-createFile\", options.tracingOptions);\n    try {\n      const directoryClient = this.rootDirectoryClient;\n      const fileClient = directoryClient.getFileClient(fileName);\n      const fileCreateResponse = await fileClient.create(size, {\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n      return {\n        fileClient,\n        fileCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes a file under the root directory of this share from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code `SharingViolation`\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400\n   * (`InvalidQueryParameterValue`)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param {string} directoryName\n   * @param {string} fileName\n   * @param {FileDeleteOptions} [options] Options to File Delete operation.\n   * @returns Promise<FileDeleteResponse> File Delete response data.\n   * @memberof ShareClient\n   */\n  public async deleteFile(\n    fileName: string,\n    options: FileDeleteOptions = {}\n  ): Promise<FileDeleteResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-deleteFile\", options.tracingOptions);\n    try {\n      const directoryClient = this.rootDirectoryClient;\n      const fileClient = directoryClient.getFileClient(fileName);\n      return await fileClient.delete({\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-share-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listShares` method of {@link ShareServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @returns {Promise<ShareGetPropertiesResponse>} Response data for the Share Get Properties operation.\n   * @memberof ShareClient\n   */\n  public async getProperties(\n    options: ShareGetPropertiesOptions = {}\n  ): Promise<ShareGetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-getProperties\", options.tracingOptions);\n    try {\n      return await this.context.getProperties({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified share for deletion. The share and any directories or files\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share\n   *\n   * @param {ShareDeleteMethodOptions} [options] Options to Share Delete operation.\n   * @returns {Promise<ShareDeleteResponse>} Response data for the Share Delete operation.\n   * @memberof ShareClient\n   */\n  public async delete(options: ShareDeleteMethodOptions = {}): Promise<ShareDeleteResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-delete\", options.tracingOptions);\n    try {\n      return await this.context.deleteMethod({\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified share.\n   *\n   * If no option provided, or no metadata defined in the option parameter, the share\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-metadata\n   *\n   * @param {Metadata} [metadata] If no metadata provided, all existing directory metadata will be removed.\n   * @param {ShareSetMetadataOptions} [option] Options to Share Set Metadata operation.\n   * @returns {Promise<ShareSetMetadataResponse>} Response data for the Share Set Metadata operation.\n   * @memberof ShareClient\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ShareSetMetadataOptions = {}\n  ): Promise<ShareSetMetadataResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-setMetadata\", options.tracingOptions);\n    try {\n      return await this.context.setMetadata({\n        abortSignal: options.abortSignal,\n        metadata,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the permissions for the specified share. The permissions indicate\n   * whether share data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potential lost precision when parsing start and expiry string.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-share-acl\n   *\n   * @param {ShareGetAccessPolicyOptions} [option] Options to Share Get Access Policy operation.\n   * @returns {Promise<ShareGetAccessPolicyResponse>} Response data for the Share Get Access Policy operation.\n   * @memberof ShareClient\n   */\n  public async getAccessPolicy(\n    options: ShareGetAccessPolicyOptions = {}\n  ): Promise<ShareGetAccessPolicyResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-getAccessPolicy\", options.tracingOptions);\n    try {\n      const response = await this.context.getAccessPolicy({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n\n      const res: ShareGetAccessPolicyResponse = {\n        _response: response._response,\n        date: response.date,\n        etag: response.etag,\n        lastModified: response.lastModified,\n        requestId: response.requestId,\n        signedIdentifiers: [],\n        version: response.version\n      };\n\n      for (const identifier of response) {\n        res.signedIdentifiers.push({\n          accessPolicy: {\n            expiresOn: new Date(identifier.accessPolicy!.expiresOn!),\n            permissions: identifier.accessPolicy!.permissions!,\n            startsOn: new Date(identifier.accessPolicy!.startsOn!)\n          },\n          id: identifier.id\n        });\n      }\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the permissions for the specified share. The permissions indicate\n   * whether directories or files in a share may be accessed publicly.\n   *\n   * When you set permissions for a share, the existing permissions are replaced.\n   * If no shareAcl provided, the existing share ACL will be\n   * removed.\n   *\n   * When you establish a stored access policy on a share, it may take up to 30 seconds to take effect.\n   * During this interval, a shared access signature that is associated with the stored access policy will\n   * fail with status code 403 (Forbidden), until the access policy becomes active.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-acl\n   *\n   * @param {SignedIdentifier[]} [shareAcl] Array of signed identifiers, each having a unique Id and details of access policy.\n   * @param {ShareSetAccessPolicyOptions} [option] Options to Share Set Access Policy operation.\n   * @returns {Promise<ShareSetAccessPolicyResponse>} Response data for the Share Set Access Policy operation.\n   * @memberof ShareClient\n   */\n  public async setAccessPolicy(\n    shareAcl?: SignedIdentifier[],\n    options: ShareSetAccessPolicyOptions = {}\n  ): Promise<ShareSetAccessPolicyResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-setAccessPolicy\", options.tracingOptions);\n    try {\n      const acl: SignedIdentifierModel[] = [];\n      for (const identifier of shareAcl || []) {\n        acl.push({\n          accessPolicy: {\n            expiresOn: truncatedISO8061Date(identifier.accessPolicy.expiresOn),\n            permissions: identifier.accessPolicy.permissions,\n            startsOn: truncatedISO8061Date(identifier.accessPolicy.startsOn)\n          },\n          id: identifier.id\n        });\n      }\n\n      return await this.context.setAccessPolicy({\n        abortSignal: options.abortSignal,\n        shareAcl: acl,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a read-only snapshot of a share.\n   *\n   * @param {ShareCreateSnapshotOptions} [options={}] Options to Share Create Snapshot operation.\n   * @returns {Promise<ShareCreateSnapshotResponse>} Response data for the Share Create Snapshot operation.\n   * @memberof ShareClient\n   */\n  public async createSnapshot(\n    options: ShareCreateSnapshotOptions = {}\n  ): Promise<ShareCreateSnapshotResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-createSnapshot\", options.tracingOptions);\n    try {\n      return await this.context.createSnapshot({\n        abortSignal: options.abortSignal,\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets quota for the specified share.\n   *\n   * @param {number} quotaInGB Specifies the maximum size of the share in gigabytes\n   * @param {ShareSetQuotaOptions} [option] Options to Share Set Quota operation.\n   * @returns {Promise<ShareSetQuotaResponse>} Response data for the Share Get Quota operation.\n   * @memberof ShareClient\n   */\n  public async setQuota(\n    quotaInGB: number,\n    options: ShareSetQuotaOptions = {}\n  ): Promise<ShareSetQuotaResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-setQuota\", options.tracingOptions);\n    try {\n      if (quotaInGB <= 0 || quotaInGB > 5120) {\n        throw new RangeError(\n          `Share quota must be greater than 0, and less than or equal to 5Tib (5120GB)`\n        );\n      }\n      return await this.context.setQuota({\n        abortSignal: options.abortSignal,\n        quota: quotaInGB,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Retrieves statistics related to the share.\n   *\n   * @param {ShareGetStatisticsOptions} [option] Options to Share Get Statistics operation.\n   * @returns {Promise<ShareGetStatisticsResponse>} Response data for the Share Get Statistics operation.\n   * @memberof ShareClient\n   */\n  public async getStatistics(\n    options: ShareGetStatisticsOptions = {}\n  ): Promise<ShareGetStatisticsResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-getStatistics\", options.tracingOptions);\n    try {\n      const response = await this.context.getStatistics({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n\n      const GBBytes = 1024 * 1024 * 1024;\n      return { ...response, shareUsage: Math.ceil(response.shareUsageBytes / GBBytes) };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a file permission (a security descriptor) at the share level.\n   * The created security descriptor can be used for the files/directories in the share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-permission\n   *\n   * @param {ShareCreatePermissionOptions} [options] Options to Share Create Permission operation.\n   * @param filePermission File permission described in the SDDL\n   */\n  public async createPermission(\n    filePermission: string,\n    options: ShareCreatePermissionOptions = {}\n  ): Promise<ShareCreatePermissionResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareClient-createPermission\",\n      options.tracingOptions\n    );\n    try {\n      return await this.context.createPermission(\n        {\n          permission: filePermission\n        },\n        {\n          abortSignal: options.abortSignal,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the Security Descriptor Definition Language (SDDL) for a given file permission key\n   * which indicates a security descriptor.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-permission\n   *\n   * @param {ShareGetPermissionOptions} [options] Options to Share Create Permission operation.\n   * @param filePermissionKey File permission key which indicates the security descriptor of the permission.\n   */\n  public async getPermission(\n    filePermissionKey: string,\n    options: ShareGetPermissionOptions = {}\n  ): Promise<ShareGetPermissionResponse> {\n    const { span, spanOptions } = createSpan(\"ShareClient-getPermission\", options.tracingOptions);\n    try {\n      return await this.context.getPermission(filePermissionKey, {\n        aborterSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  FileServiceProperties,\n  ListSharesIncludeType,\n  ShareCreateResponse,\n  ShareDeleteResponse,\n  ServiceGetPropertiesResponse,\n  ServiceSetPropertiesResponse,\n  ServiceListSharesSegmentResponse,\n  ShareItem\n} from \"./generatedModels\";\nimport { Service } from \"./generated/src/operations\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport { StorageClient, CommonOptions } from \"./StorageClient\";\nimport { ShareClient, ShareCreateOptions, ShareDeleteMethodOptions } from \"./ShareClient\";\nimport { appendToURLPath, extractConnectionStringParts } from \"./utils/utils.common\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { isNode } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/types\";\nimport { createSpan } from \"./utils/tracing\";\n\n/**\n * Options to configure Share - List Shares Segment operations.\n *\n * See:\n * - {@link ShareServiceClient.listSegments}\n * - {@link ShareServiceClient.listItems}\n * - {@link ShareServiceClient.listSharesSegment}\n *\n * @interface ServiceListSharesSegmentOptions\n */\ninterface ServiceListSharesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceListSharesSegmentOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   *\n   * @type {string}\n   * @memberof ServiceListSharesSegmentOptions\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of entries to\n   * return. If the request does not specify maxResults, or specifies a value\n   * greater than 5,000, the server will return up to 5,000 items.\n   *\n   * @type {number}\n   * @memberof ServiceListSharesSegmentOptions\n   */\n  maxResults?: number;\n\n  /**\n   * Include this parameter to\n   * specify one or more datasets to include in the response.\n   *\n   * @type {ListSharesIncludeType[]}\n   * @memberof ServiceListSharesSegmentOptions\n   */\n  include?: ListSharesIncludeType[];\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.listShares} operation.\n *\n * @export\n * @interface ServiceListSharesOptions\n */\nexport interface ServiceListSharesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceListSharesOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   *\n   * @type {string}\n   * @memberof ServiceListSharesOptions\n   */\n  prefix?: string;\n\n  /**\n   * Specifies that share snapshots should be included in the enumeration. Share Snapshots are listed from oldest to newest in the response.\n   *\n   * @type {boolean}\n   * @memberof ServiceListSharesOptions\n   */\n  includeMetadata?: boolean;\n\n  /**\n   * Specifies that share metadata should be returned in the response.\n   *\n   * @type {boolean}\n   * @memberof ServiceListSharesOptions\n   */\n  includeSnapshots?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.getProperties} operation.\n *\n * @export\n * @interface ServiceGetPropertiesOptions\n */\nexport interface ServiceGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.setProperties} operation.\n *\n * @export\n * @interface ServiceSetPropertiesOptions\n */\nexport interface ServiceSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A ShareServiceClient represents a URL to the Azure Storage File service allowing you\n * to manipulate file shares.\n *\n * @export\n * @class ShareServiceClient\n */\nexport class ShareServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   *\n   * @private\n   * @type {Service}\n   * @memberof ShareServiceClient\n   */\n  private serviceContext: Service;\n\n  /**\n   *\n   * Creates an instance of ShareServiceClient from connection string.\n   *\n   * @param {string} connectionString Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param {StoragePipelineOptions} [options] Options to configure the HTTP pipeline.\n   * @returns {ShareServiceClient} A new ShareServiceClient from the given connection string.\n   * @memberof ShareServiceClient\n   */\n  public static fromConnectionString(\n    connectionString: string,\n    options?: StoragePipelineOptions\n  ): ShareServiceClient {\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    if (extractedCreds.kind === \"AccountConnString\") {\n      if (isNode) {\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n          extractedCreds.accountName!,\n          extractedCreds.accountKey\n        );\n        const pipeline = newPipeline(sharedKeyCredential, options);\n        return new ShareServiceClient(extractedCreds.url, pipeline);\n      } else {\n        throw new Error(\"Account connection string is only supported in Node.js environment\");\n      }\n    } else if (extractedCreds.kind === \"SASConnString\") {\n      const pipeline = newPipeline(new AnonymousCredential(), options);\n      return new ShareServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n    } else {\n      throw new Error(\n        \"Connection string must be either an Account connection string or a SAS connection string\"\n      );\n    }\n  }\n\n  /**\n   * Creates an instance of ShareServiceClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage file service, such as\n   *                     \"https://myaccount.file.core.windows.net\". You can Append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.file.core.windows.net?sasString\".\n   * @param {Credential} [credential] Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ShareServiceClient\n   */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareServiceClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage file service, such as\n   *                     \"https://myaccount.file.core.windows.net\". You can Append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.file.core.windows.net?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof ShareServiceClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    this.serviceContext = new Service(this.storageClientContext);\n  }\n\n  /**\n   * Creates a ShareClient object.\n   *\n   * @param shareName Name of a share.\n   * @returns {ShareClient} The ShareClient object for the given share name.\n   * @memberof ShareServiceClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const shareClient = serviceClient.getShareClient(\"<share name>\");\n   * await shareClient.create();\n   * console.log(\"Created share successfully!\");\n   * ```\n   */\n  public getShareClient(shareName: string): ShareClient {\n    return new ShareClient(appendToURLPath(this.url, shareName), this.pipeline);\n  }\n\n  /**\n   * Creates a Share.\n   *\n   * @param {string} shareName\n   * @param {ShareCreateOptions} [options]\n   * @returns {Promise<{ shareCreateResponse: ShareCreateResponse, shareClient: ShareClient }>} Share creation response and the corresponding share client.\n   * @memberof ShareServiceClient\n   */\n  public async createShare(\n    shareName: string,\n    options: ShareCreateOptions = {}\n  ): Promise<{ shareCreateResponse: ShareCreateResponse; shareClient: ShareClient }> {\n    const { span, spanOptions } = createSpan(\n      \"ShareServiceClient-createShare\",\n      options.tracingOptions\n    );\n    try {\n      const shareClient = this.getShareClient(shareName);\n      const shareCreateResponse = await shareClient.create({\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n      return {\n        shareCreateResponse,\n        shareClient\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Deletes a Share.\n   *\n   * @param {string} shareName\n   * @param {ShareDeleteMethodOptions} [options]\n   * @returns {Promise<ShareDeleteResponse>} Share deletion response and the corresponding share client.\n   * @memberof ShareServiceClient\n   */\n  public async deleteShare(\n    shareName: string,\n    options: ShareDeleteMethodOptions = {}\n  ): Promise<ShareDeleteResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareServiceClient-deleteShare\",\n      options.tracingOptions\n    );\n    try {\n      const shareClient = this.getShareClient(shareName);\n      return await shareClient.delete({\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the properties of a storage account’s file service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties}\n   *\n   * @param {ServiceGetPropertiesOptions} [options={}] Options to Get Properties operation.\n   * @returns {Promise<ServiceGetPropertiesResponse>} Response data for the Get Properties operation.\n   * @memberof ShareServiceClient\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {}\n  ): Promise<ServiceGetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareServiceClient-getProperties\",\n      options.tracingOptions\n    );\n    try {\n      return await this.serviceContext.getProperties({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties for a storage account’s file service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-service-properties}\n   *\n   * @param {FileServiceProperties} properties\n   * @param {ServiceSetPropertiesOptions} [options={}] Options to Set Properties operation.\n   * @returns {Promise<ServiceSetPropertiesResponse>} Response data for the Set Properties operation.\n   * @memberof ShareServiceClient\n   */\n  public async setProperties(\n    properties: FileServiceProperties,\n    options: ServiceSetPropertiesOptions = {}\n  ): Promise<ServiceSetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareServiceClient-setProperties\",\n      options.tracingOptions\n    );\n    try {\n      return await this.serviceContext.setProperties(properties, {\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link ServiceListSharesSegmentResponse} objects\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of shares to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all shares remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {ServiceListSharesSegmentOptions} [options] Options to list shares operation.\n   * @returns {AsyncIterableIterator<ServiceListSharesSegmentResponse>}\n   * @memberof ShareServiceClient\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListSharesSegmentOptions = {}\n  ): AsyncIterableIterator<ServiceListSharesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let listSharesSegmentResponse;\n    do {\n      listSharesSegmentResponse = await this.listSharesSegment(marker, options);\n      marker = listSharesSegmentResponse.continuationToken;\n      yield await listSharesSegmentResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for share items\n   *\n   * @private\n   * @param {ServiceListSharesSegmentOptions} [options] Options to list shares operation.\n   * @returns {AsyncIterableIterator<ServiceListSharesSegmentResponse>}\n   * @memberof ShareServiceClient\n   */\n  private async *listItems(\n    options: ServiceListSharesSegmentOptions = {}\n  ): AsyncIterableIterator<ShareItem> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      yield* segment.shareItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the shares\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the shares in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const share of serviceClient.listShares()) {\n   *   console.log(`Share ${i++}: ${share.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = await serviceClient.listShares();\n   * let shareItem = await iter.next();\n   * while (!shareItem.done) {\n   *   console.log(`Share ${i++}: ${shareItem.value.name}`);\n   *   shareItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of serviceClient.listShares().byPage({ maxPageSize: 20 })) {\n   *   if (response.shareItems) {\n   *    for (const share of response.shareItems) {\n   *        console.log(`Share ${i++}: ${share.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = serviceClient.listShares().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 share names\n   * if (response.shareItems) {\n   *   for (const share of response.shareItems) {\n   *     console.log(`Share ${i++}: ${share.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * iterator = serviceClient.listShares().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 share names\n   * if (response.shareItems) {\n   *   for (const share of response.shareItems) {\n   *     console.log(`Share ${i++}: ${share.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param {ServiceListSharesOptions} [options] Options to list shares operation.\n   * @memberof ShareServiceClient\n   * @returns {PagedAsyncIterableIterator<ShareItem, ServiceListSharesSegmentResponse>}\n   * An asyncIterableIterator that supports paging.\n   */\n  public listShares(\n    options: ServiceListSharesOptions = {}\n  ): PagedAsyncIterableIterator<ShareItem, ServiceListSharesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const include: ListSharesIncludeType[] = [];\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n\n    const updatedOptions: ServiceListSharesSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {})\n    };\n\n    // AsyncIterableIterator to iterate over queues\n    const iter = this.listItems(updatedOptions);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...updatedOptions\n        });\n      }\n    };\n  }\n\n  /**\n   * Gets the properties of a storage account's File service, including properties for Storage\n   * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.\n   *\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list to be returned with the next list operation. The operation\n   *                          returns a marker value within the response body if the list returned was\n   *                          not complete. The marker value may then be used in a subsequent call to\n   *                          request the next set of list items. The marker value is opaque to the\n   *                          client.\n   * @param {ServiceListSharesSegmentOptions} [options={}] Options to List Shares Segment operation.\n   * @returns {Promise<ServiceListSharesSegmentResponse>} Response data for the List Shares Segment operation.\n   * @memberof ShareServiceClient\n   */\n  private async listSharesSegment(\n    marker?: string,\n    options: ServiceListSharesSegmentOptions = {}\n  ): Promise<ServiceListSharesSegmentResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ShareServiceClient-listSharesSegment\",\n      options.tracingOptions\n    );\n\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    try {\n      return await this.serviceContext.listSharesSegment({\n        marker,\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n"],"names":["URLBuilder","SASProtocol","coreHttp.QueryCollectionFormat","coreHttp.Serializer","Parameters.url","Parameters.timeoutInSeconds","Parameters.restype0","Parameters.comp0","Parameters.version","Mappers.FileServiceProperties","Mappers.ServiceSetPropertiesHeaders","Mappers.StorageError","Mappers.ServiceGetPropertiesHeaders","Parameters.prefix","Parameters.marker","Parameters.maxResults","Parameters.include","Parameters.comp1","Mappers.ListSharesResponse","Mappers.ServiceListSharesSegmentHeaders","getPropertiesOperationSpec","serializer","Mappers","Parameters.restype1","Parameters.metadata","Parameters.quota","Mappers.ShareCreateHeaders","Parameters.shareSnapshot","Mappers.ShareGetPropertiesHeaders","Parameters.deleteSnapshots","Mappers.ShareDeleteHeaders","Parameters.comp2","Mappers.ShareCreateSnapshotHeaders","Parameters.comp3","Mappers.SharePermission","Mappers.ShareCreatePermissionHeaders","Parameters.filePermissionKey0","Mappers.ShareGetPermissionHeaders","Mappers.ShareSetQuotaHeaders","Parameters.comp4","Mappers.ShareSetMetadataHeaders","Parameters.comp5","Mappers.ShareGetAccessPolicyHeaders","Mappers.ShareSetAccessPolicyHeaders","Parameters.comp6","Mappers.ShareStats","Mappers.ShareGetStatisticsHeaders","createOperationSpec","deleteMethodOperationSpec","setPropertiesOperationSpec","setMetadataOperationSpec","Parameters.restype2","Parameters.filePermission","Parameters.filePermissionKey1","Parameters.fileAttributes0","Parameters.fileCreatedOn","Parameters.fileLastWriteOn","Mappers.DirectoryCreateHeaders","Mappers.DirectoryGetPropertiesHeaders","Mappers.DirectoryDeleteHeaders","Mappers.DirectorySetPropertiesHeaders","Mappers.DirectorySetMetadataHeaders","Mappers.ListFilesAndDirectoriesSegmentResponse","Mappers.DirectoryListFilesAndDirectoriesSegmentHeaders","Parameters.comp7","Parameters.recursive","Mappers.ListHandlesResponse","Mappers.DirectoryListHandlesHeaders","Parameters.comp8","Parameters.handleId","Mappers.DirectoryForceCloseHandlesHeaders","listHandlesOperationSpec","forceCloseHandlesOperationSpec","Parameters.fileContentLength0","Parameters.fileTypeConstant","Parameters.fileContentType","Parameters.fileContentEncoding","Parameters.fileContentLanguage","Parameters.fileCacheControl","Parameters.fileContentMD5","Parameters.fileContentDisposition","Parameters.leaseId0","Mappers.FileCreateHeaders","Parameters.range0","Parameters.rangeGetContentMD5","Mappers.FileDownloadHeaders","Mappers.FileGetPropertiesHeaders","Mappers.FileDeleteHeaders","Parameters.fileContentLength1","Mappers.FileSetHTTPHeadersHeaders","Mappers.FileSetMetadataHeaders","Parameters.comp9","Parameters.duration","Parameters.proposedLeaseId","Parameters.requestId","Parameters.action0","Mappers.FileAcquireLeaseHeaders","Parameters.leaseId1","Parameters.action1","Mappers.FileReleaseLeaseHeaders","Parameters.action2","Mappers.FileChangeLeaseHeaders","Parameters.action3","Mappers.FileBreakLeaseHeaders","Parameters.comp10","Parameters.range1","Parameters.fileRangeWrite","Parameters.contentLength","Parameters.contentMD5","Mappers.FileUploadRangeHeaders","Parameters.copySource","Parameters.sourceRange","Parameters.fileRangeWriteFromUrl","Parameters.sourceContentCrc64","Parameters.sourceIfMatchCrc64","Parameters.sourceIfNoneMatchCrc64","Mappers.FileUploadRangeFromURLHeaders","Parameters.comp11","Mappers.FileGetRangeListHeaders","Parameters.filePermissionCopyMode","Parameters.ignoreReadOnly","Parameters.fileAttributes1","Parameters.fileCreationTime","Parameters.fileLastWriteTime","Parameters.setArchiveAttribute","Mappers.FileStartCopyHeaders","Parameters.copyId","Parameters.comp12","Parameters.copyActionAbortConstant","Mappers.FileAbortCopyHeaders","Mappers.FileListHandlesHeaders","Mappers.FileForceCloseHandlesHeaders","createClientLogger","__extends","BaseRequestPolicy","StorageRetryPolicyType","AbortError","HttpHeaders","os.type","os.release","DefaultHttpClient","tracingPolicy","keepAlivePolicy","generateClientRequestIdPolicy","deserializationPolicy","logPolicy","proxyPolicy","coreHttp.getDefaultUserAgentValue","coreHttp.ServiceClient","AbortSignal","Readable","isNode","EventEmitter","fs.createWriteStream","util.promisify","fs.stat","getTracer","SpanKind","CanonicalCode","fs.createReadStream","__asyncValues","generateUuid","createHmac","__values","__asyncDelegator"],"mappings":"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"}