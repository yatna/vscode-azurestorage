"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
const localize_1 = require("./localize");
// tslint:disable: max-classes-per-file
class UserCancelledError extends Error {
    constructor() {
        super(localize_1.localize('userCancelledError', 'Operation cancelled.'));
    }
}
exports.UserCancelledError = UserCancelledError;
class GoBackError extends Error {
    constructor() {
        super(localize_1.localize('backError', 'Go back.'));
    }
}
exports.GoBackError = GoBackError;
class NotImplementedError extends Error {
    constructor(methodName, obj) {
        super(localize_1.localize('notImplementedError', '"{0}" is not implemented on "{1}".', methodName, obj.constructor.name));
    }
}
exports.NotImplementedError = NotImplementedError;
class NoResouceFoundError extends Error {
    constructor(context) {
        if (context && context.noItemFoundErrorMessage) {
            super(context.noItemFoundErrorMessage);
            context.errorHandling.suppressReportIssue = true;
        }
        else {
            super(localize_1.localize('noResourcesError', 'No matching resources found.'));
        }
    }
}
exports.NoResouceFoundError = NoResouceFoundError;
//# sourceMappingURL=errors.js.map