"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
const console = require("console");
class DebugReporter {
    constructor(_extensionName, _extensionVersion, _verbose) {
        this._extensionName = _extensionName;
        this._extensionVersion = _extensionVersion;
        this._verbose = _verbose;
    }
    sendTelemetryErrorEvent(eventName, properties, measures, _errorProps) {
        try {
            // tslint:disable-next-line:strict-boolean-expressions
            const propertiesString = JSON.stringify(properties || {});
            // tslint:disable-next-line:strict-boolean-expressions
            const measuresString = JSON.stringify(measures || {});
            if (this._verbose) {
                const msg = `** TELEMETRY("${this._extensionName}/${eventName}", ${this._extensionVersion}) properties=${propertiesString}, measures=${measuresString}`;
                // tslint:disable-next-line:no-console
                console.log(msg);
            }
        }
        catch (error) {
            console.error(`ERROR (DebugReporter): ${error}`);
        }
    }
}
exports.DebugReporter = DebugReporter;
//# sourceMappingURL=DebugReporter.js.map